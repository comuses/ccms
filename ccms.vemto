{"tables":{"basicrelationships":{"basicrelationships":{"count":132,"lastPrimaryKey":170,"index":{"1":{"hasMany":{"basicrelationships.inverseId":[2],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"basicrelationships.inverseId":[1],"inputs.relationshipId":[11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"basicrelationships.inverseId":[4],"hasmanydetails.relationshipId":[6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"basicrelationships.inverseId":[3],"inputs.relationshipId":[71]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"basicrelationships.inverseId":[6],"hasmanydetails.relationshipId":[7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{"basicrelationships.inverseId":[5],"inputs.relationshipId":[37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"basicrelationships.inverseId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{"basicrelationships.inverseId":[9],"inputs.relationshipId":[128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"basicrelationships.inverseId":[12]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"basicrelationships.inverseId":[11],"inputs.relationshipId":[158]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"basicrelationships.inverseId":[14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"basicrelationships.inverseId":[13],"inputs.relationshipId":[108]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"basicrelationships.inverseId":[18],"inputs.relationshipId":[134]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{"basicrelationships.inverseId":[17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"basicrelationships.inverseId":[20],"inputs.relationshipId":[106]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"basicrelationships.inverseId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{"basicrelationships.inverseId":[24],"inputs.relationshipId":[129]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"basicrelationships.inverseId":[23]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"basicrelationships.inverseId":[26],"inputs.relationshipId":[107]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"basicrelationships.inverseId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"basicrelationships.inverseId":[32]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{"basicrelationships.inverseId":[31]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{"basicrelationships.inverseId":[34]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{"basicrelationships.inverseId":[33]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{"basicrelationships.inverseId":[36]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{"basicrelationships.inverseId":[35]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{"basicrelationships.inverseId":[38],"inputs.relationshipId":[168]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{"basicrelationships.inverseId":[37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{"basicrelationships.inverseId":[40],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{"basicrelationships.inverseId":[39],"inputs.relationshipId":[203]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{"basicrelationships.inverseId":[44],"inputs.relationshipId":[224]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{"basicrelationships.inverseId":[43],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{"basicrelationships.inverseId":[54]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"basicrelationships.inverseId":[53]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{"basicrelationships.inverseId":[56],"inputs.relationshipId":[266]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{"basicrelationships.inverseId":[55]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"basicrelationships.inverseId":[58],"inputs.relationshipId":[263]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"58":{"hasMany":{"basicrelationships.inverseId":[57]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"basicrelationships.inverseId":[62],"inputs.relationshipId":[270]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{"basicrelationships.inverseId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{"basicrelationships.inverseId":[64],"inputs.relationshipId":[275]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{"basicrelationships.inverseId":[63]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{"basicrelationships.inverseId":[66],"inputs.relationshipId":[276]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"66":{"hasMany":{"basicrelationships.inverseId":[65]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{"basicrelationships.inverseId":[68],"inputs.relationshipId":[277]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"68":{"hasMany":{"basicrelationships.inverseId":[67]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{"basicrelationships.inverseId":[70],"inputs.relationshipId":[380]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{"basicrelationships.inverseId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{"basicrelationships.inverseId":[72]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{"basicrelationships.inverseId":[71],"inputs.relationshipId":[424]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{"basicrelationships.inverseId":[74],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{"basicrelationships.inverseId":[73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{"basicrelationships.inverseId":[76],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{"basicrelationships.inverseId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"77":{"hasMany":{"basicrelationships.inverseId":[78],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"78":{"hasMany":{"basicrelationships.inverseId":[77]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"79":{"hasMany":{"basicrelationships.inverseId":[80],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"80":{"hasMany":{"basicrelationships.inverseId":[79]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"81":{"hasMany":{"basicrelationships.inverseId":[82],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"82":{"hasMany":{"basicrelationships.inverseId":[81]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{"basicrelationships.inverseId":[84]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{"basicrelationships.inverseId":[83],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{"basicrelationships.inverseId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{"basicrelationships.inverseId":[85],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"91":{"hasMany":{"basicrelationships.inverseId":[92]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"92":{"hasMany":{"basicrelationships.inverseId":[91],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"93":{"hasMany":{"basicrelationships.inverseId":[94]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"94":{"hasMany":{"basicrelationships.inverseId":[93],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"95":{"hasMany":{"basicrelationships.inverseId":[96]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"96":{"hasMany":{"basicrelationships.inverseId":[95],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"97":{"hasMany":{"basicrelationships.inverseId":[98]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"98":{"hasMany":{"basicrelationships.inverseId":[97],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"99":{"hasMany":{"basicrelationships.inverseId":[100]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"100":{"hasMany":{"basicrelationships.inverseId":[99],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{"basicrelationships.inverseId":[102]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{"basicrelationships.inverseId":[101],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{"basicrelationships.inverseId":[104]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"104":{"hasMany":{"basicrelationships.inverseId":[103],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"105":{"hasMany":{"basicrelationships.inverseId":[106]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"106":{"hasMany":{"basicrelationships.inverseId":[105],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"107":{"hasMany":{"basicrelationships.inverseId":[108]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"108":{"hasMany":{"basicrelationships.inverseId":[107],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"115":{"hasMany":{"basicrelationships.inverseId":[116],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"116":{"hasMany":{"basicrelationships.inverseId":[115],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"117":{"hasMany":{"basicrelationships.inverseId":[118],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"118":{"hasMany":{"basicrelationships.inverseId":[117],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{"basicrelationships.inverseId":[120],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"120":{"hasMany":{"basicrelationships.inverseId":[119],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{"basicrelationships.inverseId":[122],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"122":{"hasMany":{"basicrelationships.inverseId":[121],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{"basicrelationships.inverseId":[124],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"124":{"hasMany":{"basicrelationships.inverseId":[123],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"125":{"hasMany":{"basicrelationships.inverseId":[126],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"126":{"hasMany":{"basicrelationships.inverseId":[125],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{"basicrelationships.inverseId":[128],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{"basicrelationships.inverseId":[127],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{"basicrelationships.inverseId":[130],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{"basicrelationships.inverseId":[129],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{"basicrelationships.inverseId":[132],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{"basicrelationships.inverseId":[131],"inputs.relationshipId":[993]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"133":{"hasMany":{"basicrelationships.inverseId":[134],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"134":{"hasMany":{"basicrelationships.inverseId":[133],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"135":{"hasMany":{"basicrelationships.inverseId":[136],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"136":{"hasMany":{"basicrelationships.inverseId":[135],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"139":{"hasMany":{"basicrelationships.inverseId":[140],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"140":{"hasMany":{"basicrelationships.inverseId":[139],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"141":{"hasMany":{"basicrelationships.inverseId":[142],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"142":{"hasMany":{"basicrelationships.inverseId":[141],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"143":{"hasMany":{"basicrelationships.inverseId":[144],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"144":{"hasMany":{"basicrelationships.inverseId":[143],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"145":{"hasMany":{"basicrelationships.inverseId":[146],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"146":{"hasMany":{"basicrelationships.inverseId":[145],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"151":{"hasMany":{"basicrelationships.inverseId":[152],"hasmanydetails.relationshipId":[29]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"152":{"hasMany":{"basicrelationships.inverseId":[151],"inputs.relationshipId":[1014]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"153":{"hasMany":{"basicrelationships.inverseId":[154],"hasmanydetails.relationshipId":[30]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"154":{"hasMany":{"basicrelationships.inverseId":[153],"inputs.relationshipId":[1024]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"155":{"hasMany":{"basicrelationships.inverseId":[156],"hasmanydetails.relationshipId":[31]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"156":{"hasMany":{"basicrelationships.inverseId":[155],"inputs.relationshipId":[1047]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"157":{"hasMany":{"basicrelationships.inverseId":[158]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"158":{"hasMany":{"basicrelationships.inverseId":[157],"inputs.relationshipId":[1077]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"159":{"hasMany":{"basicrelationships.inverseId":[160]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"160":{"hasMany":{"basicrelationships.inverseId":[159],"inputs.relationshipId":[1078]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"161":{"hasMany":{"basicrelationships.inverseId":[162]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"162":{"hasMany":{"basicrelationships.inverseId":[161],"inputs.relationshipId":[1079]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"163":{"hasMany":{"basicrelationships.inverseId":[164]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"164":{"hasMany":{"basicrelationships.inverseId":[163],"inputs.relationshipId":[1080]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"165":{"hasMany":{"basicrelationships.inverseId":[166]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"166":{"hasMany":{"basicrelationships.inverseId":[165],"inputs.relationshipId":[1081]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"167":{"hasMany":{"basicrelationships.inverseId":[168],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"168":{"hasMany":{"basicrelationships.inverseId":[167],"inputs.relationshipId":[1088]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"169":{"hasMany":{"basicrelationships.inverseId":[170],"hasmanydetails.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"170":{"hasMany":{"basicrelationships.inverseId":[169],"inputs.relationshipId":[1084]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_170":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":72,"inverseId":169,"localModelId":74,"parentKeyId":622,"foreignKeyId":645,"name":"caseHear","type":"belongsTo","foreignOriginalName":"case_hear_id","hasApi":true,"defaultName":"caseHear","usingFirstDefaultName":true,"id":170,"createdAt":"2024-02-14 13:32:16","updatedAt":"2024-02-14 13:32:16"},"item_169":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":74,"inverseId":170,"localModelId":72,"parentKeyId":622,"foreignKeyId":645,"name":"appointments","type":"hasMany","foreignOriginalName":"case_hear_id","hasApi":true,"defaultName":"appointments","usingFirstDefaultName":true,"id":169,"createdAt":"2024-02-14 13:32:16","updatedAt":"2024-02-14 13:32:16"},"item_162":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":67,"inverseId":161,"localModelId":72,"parentKeyId":581,"foreignKeyId":634,"name":"attorney","type":"belongsTo","foreignOriginalName":"attorney_id","hasApi":true,"defaultName":"attorney","usingFirstDefaultName":true,"id":162,"createdAt":"2024-02-14 13:10:17","updatedAt":"2024-02-14 13:10:17"},"item_161":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":72,"inverseId":162,"localModelId":67,"parentKeyId":581,"foreignKeyId":634,"name":"caseHears","type":"hasMany","foreignOriginalName":"attorney_id","hasApi":true,"defaultName":"caseHears","usingFirstDefaultName":true,"id":161,"createdAt":"2024-02-14 13:10:17","updatedAt":"2024-02-14 13:10:17"},"item_152":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":66,"inverseId":151,"localModelId":67,"parentKeyId":575,"foreignKeyId":589,"name":"court","type":"belongsTo","foreignOriginalName":"court_id","hasApi":true,"defaultName":"court","usingFirstDefaultName":true,"id":152,"createdAt":"2024-02-14 11:58:36","updatedAt":"2024-02-14 11:58:36"},"item_151":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":67,"inverseId":152,"localModelId":66,"parentKeyId":575,"foreignKeyId":589,"name":"attorneys","type":"hasMany","foreignOriginalName":"court_id","hasApi":true,"defaultName":"attorneys","usingFirstDefaultName":true,"id":151,"createdAt":"2024-02-14 11:58:36","updatedAt":"2024-02-14 11:58:36"},"item_156":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":66,"inverseId":155,"localModelId":69,"parentKeyId":575,"foreignKeyId":604,"name":"court","type":"belongsTo","foreignOriginalName":"court_id","hasApi":true,"defaultName":"court","usingFirstDefaultName":true,"id":156,"createdAt":"2024-02-14 12:45:30","updatedAt":"2024-02-14 12:45:30"},"item_155":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":69,"inverseId":156,"localModelId":66,"parentKeyId":575,"foreignKeyId":604,"name":"bars","type":"hasMany","foreignOriginalName":"court_id","hasApi":true,"defaultName":"bars","usingFirstDefaultName":true,"id":155,"createdAt":"2024-02-14 12:45:30","updatedAt":"2024-02-14 12:45:30"},"item_164":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":71,"inverseId":163,"localModelId":72,"parentKeyId":612,"foreignKeyId":635,"name":"caseCharge","type":"belongsTo","foreignOriginalName":"case_charge_id","hasApi":true,"defaultName":"caseCharge","usingFirstDefaultName":true,"id":164,"createdAt":"2024-02-14 13:10:38","updatedAt":"2024-02-14 13:10:38"},"item_163":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":72,"inverseId":164,"localModelId":71,"parentKeyId":612,"foreignKeyId":635,"name":"caseHears","type":"hasMany","foreignOriginalName":"case_charge_id","hasApi":true,"defaultName":"caseHears","usingFirstDefaultName":true,"id":163,"createdAt":"2024-02-14 13:10:38","updatedAt":"2024-02-14 13:10:38"},"item_168":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":72,"inverseId":167,"localModelId":73,"parentKeyId":622,"foreignKeyId":641,"name":"caseHear","type":"belongsTo","foreignOriginalName":"case_hear_id","hasApi":true,"defaultName":"caseHear","usingFirstDefaultName":true,"id":168,"createdAt":"2024-02-14 13:29:41","updatedAt":"2024-02-14 13:29:41"},"item_167":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":73,"inverseId":168,"localModelId":72,"parentKeyId":622,"foreignKeyId":641,"name":"decisions","type":"hasMany","foreignOriginalName":"case_hear_id","hasApi":true,"defaultName":"decisions","usingFirstDefaultName":true,"id":167,"createdAt":"2024-02-14 13:29:41","updatedAt":"2024-02-14 13:29:41"},"item_158":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":66,"inverseId":157,"localModelId":72,"parentKeyId":575,"foreignKeyId":632,"name":"court","type":"belongsTo","foreignOriginalName":"court_id","hasApi":true,"defaultName":"court","usingFirstDefaultName":true,"id":158,"createdAt":"2024-02-14 13:10:00","updatedAt":"2024-02-14 13:10:00"},"item_157":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":72,"inverseId":158,"localModelId":66,"parentKeyId":575,"foreignKeyId":632,"name":"caseHears","type":"hasMany","foreignOriginalName":"court_id","hasApi":true,"defaultName":"caseHears","usingFirstDefaultName":true,"id":157,"createdAt":"2024-02-14 13:10:00","updatedAt":"2024-02-14 13:10:00"},"item_160":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":68,"inverseId":159,"localModelId":72,"parentKeyId":590,"foreignKeyId":633,"name":"judge","type":"belongsTo","foreignOriginalName":"judge_id","hasApi":true,"defaultName":"judge","usingFirstDefaultName":true,"id":160,"createdAt":"2024-02-14 13:10:10","updatedAt":"2024-02-14 13:10:10"},"item_159":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":72,"inverseId":160,"localModelId":68,"parentKeyId":590,"foreignKeyId":633,"name":"caseHears","type":"hasMany","foreignOriginalName":"judge_id","hasApi":true,"defaultName":"caseHears","usingFirstDefaultName":true,"id":159,"createdAt":"2024-02-14 13:10:10","updatedAt":"2024-02-14 13:10:10"},"item_166":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":70,"inverseId":165,"localModelId":72,"parentKeyId":605,"foreignKeyId":636,"name":"wittness","type":"belongsTo","foreignOriginalName":"wittness_id","hasApi":true,"defaultName":"wittness","usingFirstDefaultName":true,"id":166,"createdAt":"2024-02-14 13:11:01","updatedAt":"2024-02-14 13:11:01"},"item_165":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":72,"inverseId":166,"localModelId":70,"parentKeyId":605,"foreignKeyId":636,"name":"caseHears","type":"hasMany","foreignOriginalName":"wittness_id","hasApi":true,"defaultName":"caseHears","usingFirstDefaultName":true,"id":165,"createdAt":"2024-02-14 13:11:01","updatedAt":"2024-02-14 13:11:01"},"item_154":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":66,"inverseId":153,"localModelId":68,"parentKeyId":575,"foreignKeyId":598,"name":"court","type":"belongsTo","foreignOriginalName":"court_id","hasApi":true,"defaultName":"court","usingFirstDefaultName":true,"id":154,"createdAt":"2024-02-14 12:32:35","updatedAt":"2024-02-14 12:32:35"},"item_153":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":68,"inverseId":154,"localModelId":66,"parentKeyId":575,"foreignKeyId":598,"name":"judges","type":"hasMany","foreignOriginalName":"court_id","hasApi":true,"defaultName":"judges","usingFirstDefaultName":true,"id":153,"createdAt":"2024-02-14 12:32:35","updatedAt":"2024-02-14 12:32:35"}},"comments":{"comments":{"count":0,"lastPrimaryKey":2,"index":{},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"cruds":{"cruds":{"count":46,"lastPrimaryKey":144,"index":{"1":{"hasMany":{"inputs.crudId":[2,3,4,5,1],"hasmanydetails.crudId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"inputs.crudId":[11,9,10],"hasmanydetails.crudId":[6,7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"inputs.crudId":[35,36,37,75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"inputs.crudId":[71,70,69,74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"inputs.crudId":[83,84]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"inputs.crudId":[86,89,87]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"inputs.crudId":[92,91]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"inputs.crudId":[96,97,98]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"inputs.crudId":[99,100,101,102,103,104,105,106,107]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"inputs.crudId":[108]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{"inputs.crudId":[121,122,123,124,125,126,127,128,129]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{"inputs.crudId":[130,131,132,133,134]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{"inputs.crudId":[135,136,137,138]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"inputs.crudId":[139,140,141,142,143,144]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{"inputs.crudId":[145,146,147]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{"inputs.crudId":[152,148,149,150,151]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{"inputs.crudId":[153,154,155,156]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{"inputs.crudId":[157,158]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{"inputs.crudId":[160,161,162,163,164,165,166,167,168]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{"inputs.crudId":[196,197,198,199,200,201,202,203]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{"inputs.crudId":[204,205,206],"hasmanydetails.crudId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{"inputs.crudId":[207,213,209,211,212,214],"hasmanydetails.crudId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{"inputs.crudId":[220,221,222,223,224]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"inputs.crudId":[255,256,257,258,259]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{"inputs.crudId":[261,262,263]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"inputs.crudId":[264,265,266]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{"inputs.crudId":[267,268,269,270]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{"inputs.crudId":[271,272,273,274,275,276,277]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{"inputs.crudId":[372,373,374,375,376,377,378,379,380]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{"inputs.crudId":[415,416,417,418,419,420,421,422,423,424]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"120":{"hasMany":{"inputs.crudId":[914,915,916,917]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{"inputs.crudId":[919,922,923,924,918]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{"inputs.crudId":[993,986,987,989,990,992,994,995]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{"inputs.crudId":[996,997,998,999]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{"inputs.crudId":[1000,1001,1005,1006,1004],"hasmanydetails.crudId":[29,30,31]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{"inputs.crudId":[1014,1007,1008,1010,1011,1015,1016,1013]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"133":{"hasMany":{"inputs.crudId":[1024,1017,1018,1020,1021,1025,1026,1023]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"134":{"hasMany":{"inputs.crudId":[1027,1028,1029,1030,1031,1032,1033]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"135":{"hasMany":{"inputs.crudId":[1035,1036,1037,1038,1039,1040,1041]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"136":{"hasMany":{"inputs.crudId":[1047,1043,1044,1045,1046]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"137":{"hasMany":{"inputs.crudId":[1048,1049,1050,1051,1052,1053,1054,1055,1056]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"138":{"hasMany":{"inputs.crudId":[1057,1058,1059,1060]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"139":{"hasMany":{"inputs.crudId":[1062,1063,1064,1065,1068,1067]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"140":{"hasMany":{"inputs.crudId":[1077,1078,1079,1080,1081,1069,1070,1071,1072,1073,1074,1075,1076],"hasmanydetails.crudId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"141":{"hasMany":{"inputs.crudId":[1082,1083,1084]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"142":{"hasMany":{"inputs.crudId":[1085,1086,1087,1088]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_130":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Users","url":"users","modelId":65,"projectId":9,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Users List","create":"Create User","edit":"Edit User","update":"Update User","show":"Show User","new":"New User"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":130,"createdAt":"2024-02-14 11:36:02","updatedAt":"2024-02-14 11:36:02"},"item_131":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Courts","url":"courts","modelId":66,"projectId":9,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Courts List","create":"Create Court","edit":"Edit Court","update":"Update Court","show":"Show Court","new":"New Court"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":131,"createdAt":"2024-02-14 11:36:07","updatedAt":"2024-02-14 11:36:07"},"item_134":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Court Attorneys","url":"attorneys","modelId":67,"projectId":9,"hasManyDetailId":29,"manyToManyDetailId":null,"titles":{"index":"Attorneys List","create":"Create Attorney","edit":"Edit Attorney","update":"Update Attorney","show":"Show Attorney","new":"New Attorney"},"hasApi":false,"isHasManyDetail":true,"isManyToManyDetail":false,"isForLivewire":true,"id":134,"createdAt":"2024-02-14 12:37:13","updatedAt":"2024-02-14 12:37:13"},"item_135":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Court Judges","url":"judges","modelId":68,"projectId":9,"hasManyDetailId":30,"manyToManyDetailId":null,"titles":{"index":"Judges List","create":"Create Judge","edit":"Edit Judge","update":"Update Judge","show":"Show Judge","new":"New Judge"},"hasApi":false,"isHasManyDetail":true,"isManyToManyDetail":false,"isForLivewire":true,"id":135,"createdAt":"2024-02-14 12:37:22","updatedAt":"2024-02-14 12:37:22"},"item_138":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Court Bars","url":"bars","modelId":69,"projectId":9,"hasManyDetailId":31,"manyToManyDetailId":null,"titles":{"index":"Bars List","create":"Create Bar","edit":"Edit Bar","update":"Update Bar","show":"Show Bar","new":"New Bar"},"hasApi":false,"isHasManyDetail":true,"isManyToManyDetail":false,"isForLivewire":true,"id":138,"createdAt":"2024-02-14 13:01:36","updatedAt":"2024-02-14 13:01:36"},"item_132":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Attorneys","url":"attorneys","modelId":67,"projectId":9,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Attorneys List","create":"Create Attorney","edit":"Edit Attorney","update":"Update Attorney","show":"Show Attorney","new":"New Attorney"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":132,"createdAt":"2024-02-14 11:59:02","updatedAt":"2024-02-14 11:59:02"},"item_133":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Judges","url":"judges","modelId":68,"projectId":9,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Judges List","create":"Create Judge","edit":"Edit Judge","update":"Update Judge","show":"Show Judge","new":"New Judge"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":133,"createdAt":"2024-02-14 12:33:01","updatedAt":"2024-02-14 12:33:01"},"item_136":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Bars","url":"bars","modelId":69,"projectId":9,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Bars List","create":"Create Bar","edit":"Edit Bar","update":"Update Bar","show":"Show Bar","new":"New Bar"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":136,"createdAt":"2024-02-14 12:45:55","updatedAt":"2024-02-14 12:45:55"},"item_137":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Case Charges","url":"case-charges","modelId":71,"projectId":9,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"CaseCharges List","create":"Create CaseCharge","edit":"Edit CaseCharge","update":"Update CaseCharge","show":"Show CaseCharge","new":"New Case charge"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":137,"createdAt":"2024-02-14 13:00:37","updatedAt":"2024-02-14 13:00:37"},"item_139":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Wittnesses","url":"wittnesses","modelId":70,"projectId":9,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Wittnesses List","create":"Create Wittness","edit":"Edit Wittness","update":"Update Wittness","show":"Show Wittness","new":"New Wittness"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":139,"createdAt":"2024-02-14 13:14:24","updatedAt":"2024-02-14 13:14:24"},"item_140":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Case Hears","url":"case-hears","modelId":72,"projectId":9,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"CaseHears List","create":"Create CaseHear","edit":"Edit CaseHear","update":"Update CaseHear","show":"Show CaseHear","new":"New Case hear"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":140,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:16:28"},"item_141":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Appointments","url":"appointments","modelId":74,"projectId":9,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Appointments List","create":"Create Appointment","edit":"Edit Appointment","update":"Update Appointment","show":"Show Appointment","new":"New Appointment"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":141,"createdAt":"2024-02-14 13:34:34","updatedAt":"2024-02-14 13:34:34"},"item_142":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Decisions","url":"decisions","modelId":73,"projectId":9,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Decisions List","create":"Create Decision","edit":"Edit Decision","update":"Update Decision","show":"Show Decision","new":"New Decision"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":142,"createdAt":"2024-02-14 13:34:43","updatedAt":"2024-02-14 13:34:43"}},"entities":{"entities":{"count":62,"lastPrimaryKey":74,"index":{"2":{"hasMany":{"fields.entityId":[13,14,15,16,17,18,19,20,21,22,23,24,25],"projects.authModelId":[2],"foreigns.relatedEntityId":[1,6],"basicrelationships.localModelId":[1],"basicrelationships.modelId":[2],"manytomanyrelationships.modelId":[],"manytomanyrelationships.localModelId":[],"cruds.modelId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"fields.entityId":[26,27,28,29],"basicrelationships.modelId":[1,4,6],"basicrelationships.localModelId":[2,3,5],"foreigns.relatedEntityId":[2,5],"cruds.modelId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"fields.entityId":[30,31,32,33],"basicrelationships.modelId":[3],"basicrelationships.localModelId":[4],"cruds.modelId":[17,20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"fields.entityId":[34,57,60],"foreigns.relatedEntityId":[],"manytomanyrelationships.localModelId":[],"manytomanyrelationships.modelId":[],"cruds.modelId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"fields.entityId":[38,39,40,41,58],"basicrelationships.modelId":[5],"basicrelationships.localModelId":[6],"cruds.modelId":[11,21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"fields.entityId":[61,62,63,65,76,64,66,67,68,69,70,71],"projects.authModelId":[4],"foreigns.relatedEntityId":[8],"basicrelationships.localModelId":[9],"basicrelationships.modelId":[10],"cruds.modelId":[24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"fields.entityId":[77,78,79,80,81,82,83,84,85,127],"basicrelationships.modelId":[9,24],"basicrelationships.localModelId":[10,23],"cruds.modelId":[28]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"fields.entityId":[86,87,88,89,90,91,123,124,125,134],"foreigns.relatedEntityId":[9,10],"basicrelationships.localModelId":[11,13,19,25],"basicrelationships.modelId":[12,14,20,26],"morphrelationships.modelId":[],"cruds.modelId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"fields.entityId":[92,93,94],"basicrelationships.modelId":[11],"basicrelationships.localModelId":[12],"cruds.modelId":[35]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"fields.entityId":[95,96,97],"basicrelationships.modelId":[13],"basicrelationships.localModelId":[14],"cruds.modelId":[26]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"fields.entityId":[98,99,102,104,105,106,103,101,100,152],"basicrelationships.localModelId":[32,34,36,37],"basicrelationships.modelId":[31,33,35,38],"cruds.modelId":[36],"foreigns.relatedEntityId":[19,20,21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"fields.entityId":[107,108,109,110,111,117,149],"foreigns.relatedEntityId":[],"basicrelationships.modelId":[18,32],"basicrelationships.localModelId":[17,31],"cruds.modelId":[29]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"fields.entityId":[113,114,115,116],"foreigns.relatedEntityId":[12],"basicrelationships.modelId":[17],"basicrelationships.localModelId":[18],"cruds.modelId":[32]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{"fields.entityId":[118,120,119,121,122],"morphrelationships.localModelId":[],"foreigns.relatedEntityId":[13,15,22],"basicrelationships.modelId":[19,23,37],"basicrelationships.localModelId":[20,24,38],"cruds.modelId":[34]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"fields.entityId":[128,129,130,131,132,133],"foreigns.relatedEntityId":[16],"basicrelationships.modelId":[25],"basicrelationships.localModelId":[26],"cruds.modelId":[33]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"fields.entityId":[135,136,137,138,139,140,141,151],"foreigns.relatedEntityId":[],"basicrelationships.modelId":[36],"basicrelationships.localModelId":[35],"cruds.modelId":[31]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"fields.entityId":[143,144,145,146,147,150],"foreigns.relatedEntityId":[],"basicrelationships.modelId":[34],"basicrelationships.localModelId":[33],"cruds.modelId":[30]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"fields.entityId":[153,154,155,157,156,158,159,160,161,162,163],"projects.authModelId":[5],"cruds.modelId":[43],"foreigns.relatedEntityId":[23],"basicrelationships.localModelId":[39],"basicrelationships.modelId":[40]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{"fields.entityId":[165,166,167,168,169,170,171,172,173,219],"basicrelationships.modelId":[39,54,67],"basicrelationships.localModelId":[40,53,68],"cruds.modelId":[42],"foreigns.relatedEntityId":[37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"fields.entityId":[174,175,181,177,179,180,182,218],"cruds.modelId":[44],"foreigns.relatedEntityId":[25,30,35],"basicrelationships.modelId":[43,53,63],"basicrelationships.localModelId":[44,54,64]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"fields.entityId":[189,190,191,192,193,194],"basicrelationships.localModelId":[43,62],"basicrelationships.modelId":[44,61],"cruds.modelId":[46],"foreigns.relatedEntityId":[34]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{"fields.entityId":[211,212,213,214,215,216],"basicrelationships.localModelId":[56,58,66],"basicrelationships.modelId":[55,57,65],"cruds.modelId":[52],"foreigns.relatedEntityId":[31,32,36]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{"fields.entityId":[220,222,221,223],"basicrelationships.localModelId":[55],"basicrelationships.modelId":[56],"cruds.modelId":[54]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"fields.entityId":[224,225,226,227],"basicrelationships.localModelId":[57],"basicrelationships.modelId":[58],"cruds.modelId":[53]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{"fields.entityId":[228,229,230,231,233],"basicrelationships.localModelId":[61],"basicrelationships.modelId":[62],"cruds.modelId":[55]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{"fields.entityId":[234,235,236,237,238,239,240,241],"basicrelationships.localModelId":[63,65,67],"basicrelationships.modelId":[64,66,68],"cruds.modelId":[56]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{"fields.entityId":[242,243,244,246,253,269,251,252,245,247,248,249,250],"projects.authModelId":[6],"basicrelationships.modelId":[71],"basicrelationships.localModelId":[72],"cruds.modelId":[74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{"fields.entityId":[254,255,256,257,272,258],"foreigns.relatedEntityId":[44,46,50,45,38],"basicrelationships.modelId":[69,81,84,86,94],"basicrelationships.localModelId":[70,82,83,85,93],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{"fields.entityId":[259,260,261,262,263,264,265,266,267,268],"basicrelationships.localModelId":[69,71,80],"basicrelationships.modelId":[70,72,79],"foreigns.relatedEntityId":[43,39],"cruds.modelId":[67]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{"fields.entityId":[273,274,275,279,276,277,278,280,281,282,289,299,300],"basicrelationships.localModelId":[73,77,79],"basicrelationships.modelId":[74,78,80],"foreigns.relatedEntityId":[],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{"fields.entityId":[283,284,285,286,287,288],"foreigns.relatedEntityId":[54,40,51,56,41],"basicrelationships.modelId":[73,75,96,102,106],"basicrelationships.localModelId":[74,76,95,101,105],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{"fields.entityId":[290,291,292,296,297,293,294,295,298],"basicrelationships.localModelId":[75,78],"basicrelationships.modelId":[76,77],"foreigns.relatedEntityId":[42],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"fields.entityId":[301,303,304,305,307,308,309,310,306,326],"basicrelationships.localModelId":[81,91],"basicrelationships.modelId":[82,92],"foreigns.relatedEntityId":[49],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{"fields.entityId":[311,319,312,313,314,315,316,317,327,318],"basicrelationships.modelId":[83,98],"basicrelationships.localModelId":[84,97],"foreigns.relatedEntityId":[52],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{"fields.entityId":[320,321,322,323,324,325,328],"basicrelationships.modelId":[85],"basicrelationships.localModelId":[86],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{"fields.entityId":[329,330,331,332,333,334,336,338,339,340],"basicrelationships.modelId":[100],"basicrelationships.localModelId":[99],"foreigns.relatedEntityId":[53],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{"fields.entityId":[342,343,344,346,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362],"basicrelationships.modelId":[91,93,95,97,99,104,108],"basicrelationships.localModelId":[92,94,96,98,100,103,107],"foreigns.relatedEntityId":[55,57],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{"fields.entityId":[363,365,366,367,368,369,370,371,372,373],"basicrelationships.modelId":[101,103],"basicrelationships.localModelId":[102,104],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"47":{"hasMany":{"fields.entityId":[374,375,376,377,378,379,380,381,382,383,384,385],"basicrelationships.modelId":[105,107],"basicrelationships.localModelId":[106,108],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"fields.entityId":[420,421,422,423,424,425],"foreigns.relatedEntityId":[64,61,63,65,62],"basicrelationships.modelId":[116,118,119,121,123],"basicrelationships.localModelId":[115,117,120,122,124],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{"fields.entityId":[426,427,428,429,430,431,432,433,434,435],"basicrelationships.modelId":[125],"basicrelationships.localModelId":[126],"foreigns.relatedEntityId":[66],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"fields.entityId":[436,437,438,439,440,441,442,443,444,445],"basicrelationships.modelId":[122,128],"basicrelationships.localModelId":[121,127],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{"fields.entityId":[446,448,449,450,451,452,559,454,453],"basicrelationships.localModelId":[132,130],"basicrelationships.modelId":[131,129],"foreigns.relatedEntityId":[68],"cruds.modelId":[129]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{"fields.entityId":[456,458,459,460,461,462],"basicrelationships.modelId":[134],"basicrelationships.localModelId":[133],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"fields.entityId":[463,464,465,466,467,468,469,470,471,472,473,474],"basicrelationships.localModelId":[116,136],"basicrelationships.modelId":[115,135],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"58":{"hasMany":{"fields.entityId":[476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"basicrelationships.modelId":[130,142,120,144,126,127,139],"basicrelationships.localModelId":[129,141,119,143,125,128,140],"foreigns.relatedEntityId":[67,73],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{"fields.entityId":[497,498,499,500,501,502,503,504,505,506,507,508],"basicrelationships.modelId":[124,140],"basicrelationships.localModelId":[123,139],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{"fields.entityId":[509,511,512,513,514,515,516,517,518],"basicrelationships.modelId":[146,143],"basicrelationships.localModelId":[145,144],"foreigns.relatedEntityId":[75],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"fields.entityId":[519,520,521,522,523,524,525,526,527],"basicrelationships.localModelId":[118,135],"basicrelationships.modelId":[117,136],"foreigns.relatedEntityId":[71],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{"fields.entityId":[528,529,530,531,532,533,534,535,536],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"foreigns.relatedEntityId":[],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{"fields.entityId":[538,543,544,549,548,545,546,547,539,540,542,541],"projects.authModelId":[8],"basicrelationships.modelId":[],"basicrelationships.localModelId":[],"cruds.modelId":[120]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{"fields.entityId":[551,553,555,556,554,552],"foreigns.relatedEntityId":[69,70,74,76],"basicrelationships.modelId":[132,145,133,141],"basicrelationships.localModelId":[131,146,134,142],"cruds.modelId":[121]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{"fields.entityId":[563,564,565,566,567,574,568,569,570,571,572,573],"projects.authModelId":[9],"cruds.modelId":[130]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"66":{"hasMany":{"fields.entityId":[575,576,577,578,579,580],"cruds.modelId":[131],"foreigns.relatedEntityId":[81,82,83,84],"basicrelationships.localModelId":[151,153,155,157],"basicrelationships.modelId":[152,154,156,158]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{"fields.entityId":[581,582,583,584,585,586,587,588,589],"basicrelationships.modelId":[151,162],"basicrelationships.localModelId":[152,161],"cruds.modelId":[132,134],"foreigns.relatedEntityId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"68":{"hasMany":{"fields.entityId":[590,591,592,593,594,595,596,597,598],"basicrelationships.modelId":[153,160],"basicrelationships.localModelId":[154,159],"cruds.modelId":[133,135],"foreigns.relatedEntityId":[85]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{"fields.entityId":[599,600,601,602,603,604],"basicrelationships.modelId":[155],"basicrelationships.localModelId":[156],"cruds.modelId":[136,138]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{"fields.entityId":[605,606,607,608,609,610,611],"foreigns.relatedEntityId":[88],"basicrelationships.localModelId":[165],"basicrelationships.modelId":[166],"cruds.modelId":[139]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{"fields.entityId":[612,613,614,615,616,617,618,619,620,621],"cruds.modelId":[137],"foreigns.relatedEntityId":[87],"basicrelationships.localModelId":[163],"basicrelationships.modelId":[164]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{"fields.entityId":[622,623,624,626,627,628,629,630,631,632,633,634,635,636],"basicrelationships.modelId":[157,159,161,163,165,168,170],"basicrelationships.localModelId":[158,160,162,164,166,167,169],"cruds.modelId":[140],"foreigns.relatedEntityId":[89,90]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{"fields.entityId":[637,638,639,640,641],"basicrelationships.modelId":[167],"basicrelationships.localModelId":[168],"cruds.modelId":[142]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{"fields.entityId":[642,643,644,645],"basicrelationships.modelId":[169],"basicrelationships.localModelId":[170],"cruds.modelId":[141]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_74":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Appointment","type":"model","plural":"Appointments","pluralAndSingularAreSame":false,"table":"appointments","projectId":9,"top":"780px","left":"1388px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2024_02_14_000008_create_appointments_table.php","foreignsMigrationName":"2024_02_14_009005_add_foreigns_to_appointments_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":74,"createdAt":"2024-02-14 13:30:38","updatedAt":"2024-02-14 13:36:35"},"item_67":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Attorney","type":"model","plural":"Attorneys","pluralAndSingularAreSame":false,"table":"attorneys","projectId":9,"top":"258px","left":"510px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2024_02_14_000002_create_attorneys_table.php","foreignsMigrationName":"2024_02_14_009001_add_foreigns_to_attorneys_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":67,"createdAt":"2024-02-14 11:56:39","updatedAt":"2024-02-14 13:33:26"},"item_69":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Bar","type":"model","plural":"Bars","pluralAndSingularAreSame":false,"table":"bars","projectId":9,"top":"179px","left":"58px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2024_02_14_000004_create_bars_table.php","foreignsMigrationName":"2024_02_14_009003_add_foreigns_to_bars_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":69,"createdAt":"2024-02-14 12:44:41","updatedAt":"2024-02-14 13:33:41"},"item_71":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"CaseCharge","type":"model","plural":"CaseCharges","pluralAndSingularAreSame":false,"table":"case_charges","projectId":9,"top":"-215px","left":"1886px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2024_02_14_000005_create_case_charges_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":71,"createdAt":"2024-02-14 12:56:06","updatedAt":"2024-02-14 13:33:08"},"item_72":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"CaseHear","type":"model","plural":"CaseHears","pluralAndSingularAreSame":false,"table":"case_hears","projectId":9,"top":"63px","left":"1154px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2024_02_14_000006_create_case_hears_table.php","foreignsMigrationName":"2024_02_14_009004_add_foreigns_to_case_hears_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":72,"createdAt":"2024-02-14 13:03:34","updatedAt":"2024-02-14 13:33:28"},"item_66":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Court","type":"model","plural":"Courts","pluralAndSingularAreSame":false,"table":"courts","projectId":9,"top":"-319px","left":"511px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2024_02_14_000001_create_courts_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":66,"createdAt":"2024-02-14 11:34:38","updatedAt":"2024-02-14 13:33:19"},"item_73":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Decision","type":"model","plural":"Decisions","pluralAndSingularAreSame":false,"table":"decisions","projectId":9,"top":"759px","left":"867px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2024_02_14_000009_create_decisions_table.php","foreignsMigrationName":"2024_02_14_009006_add_foreigns_to_decisions_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":73,"createdAt":"2024-02-14 13:26:59","updatedAt":"2024-02-14 14:22:58"},"item_68":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Judge","type":"model","plural":"Judges","pluralAndSingularAreSame":false,"table":"judges","projectId":9,"top":"-370px","left":"1180px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2024_02_14_000003_create_judges_table.php","foreignsMigrationName":"2024_02_14_009002_add_foreigns_to_judges_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":68,"createdAt":"2024-02-14 12:30:51","updatedAt":"2024-02-14 13:34:00"},"item_65":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":9,"name":"User","type":"model","table":"users","plural":"Users","top":"-318px","left":"-73px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2014_10_12_000000_create_users_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":65,"createdAt":"2024-02-14 11:33:10","updatedAt":"2024-02-14 13:34:09"},"item_70":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Wittness","type":"model","plural":"Wittnesses","pluralAndSingularAreSame":false,"table":"wittnesses","projectId":9,"top":"266px","left":"1868px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2024_02_14_000007_create_wittnesses_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":70,"createdAt":"2024-02-14 12:50:30","updatedAt":"2024-02-14 13:33:10"}},"fields":{"fields":{"count":525,"lastPrimaryKey":645,"index":{"13":{"hasMany":{"foreigns.relatedFieldId":[1,6],"basicrelationships.parentKeyId":[2,1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"inputs.fieldId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"inputs.fieldId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"inputs.fieldId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"inputs.fieldId":[4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"inputs.fieldId":[5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"foreigns.relatedFieldId":[2,5],"basicrelationships.parentKeyId":[4,6,3,5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{"inputs.fieldId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{"inputs.fieldId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{"foreigns.fieldId":[1],"basicrelationships.foreignKeyId":[2,1],"inputs.fieldId":[11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"inputs.fieldId":[69,83]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{"inputs.fieldId":[70,84]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{"foreigns.fieldId":[2],"basicrelationships.foreignKeyId":[4,3],"inputs.fieldId":[71]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{"foreigns.relatedFieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{"inputs.fieldId":[35,86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{"inputs.fieldId":[36,87]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"foreigns.fieldId":[5],"basicrelationships.foreignKeyId":[6,5],"inputs.fieldId":[37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"inputs.fieldId":[92]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"58":{"hasMany":{"inputs.fieldId":[75,89]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{"inputs.fieldId":[91],"foreigns.fieldId":[6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"foreigns.relatedFieldId":[8],"basicrelationships.parentKeyId":[10,9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{"inputs.fieldId":[96]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{"inputs.fieldId":[97]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{"inputs.fieldId":[98]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"66":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"68":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"77":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"78":{"hasMany":{"inputs.fieldId":[121]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"79":{"hasMany":{"inputs.fieldId":[122]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"80":{"hasMany":{"inputs.fieldId":[123]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"81":{"hasMany":{"inputs.fieldId":[124]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"82":{"hasMany":{"inputs.fieldId":[125]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{"inputs.fieldId":[126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{"inputs.fieldId":[127]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{"foreigns.fieldId":[8],"basicrelationships.foreignKeyId":[10,9],"inputs.fieldId":[128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{"foreigns.relatedFieldId":[9,10],"basicrelationships.parentKeyId":[12,11,14,13]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{"inputs.fieldId":[99]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{"inputs.fieldId":[100]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"89":{"hasMany":{"inputs.fieldId":[101]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"90":{"hasMany":{"inputs.fieldId":[102]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"91":{"hasMany":{"inputs.fieldId":[103]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"92":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"93":{"hasMany":{"inputs.fieldId":[157]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"94":{"hasMany":{"foreigns.fieldId":[9],"basicrelationships.foreignKeyId":[12,11],"inputs.fieldId":[158]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"95":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"96":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"97":{"hasMany":{"foreigns.fieldId":[10],"basicrelationships.foreignKeyId":[14,13],"inputs.fieldId":[108]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"98":{"hasMany":{"foreigns.relatedFieldId":[19,20,21],"basicrelationships.parentKeyId":[32,31,34,33,36,35]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"99":{"hasMany":{"inputs.fieldId":[160]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"100":{"hasMany":{"inputs.fieldId":[161]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{"inputs.fieldId":[162]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{"inputs.fieldId":[163]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{"inputs.fieldId":[167]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"104":{"hasMany":{"inputs.fieldId":[164]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"105":{"hasMany":{"inputs.fieldId":[165]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"106":{"hasMany":{"inputs.fieldId":[166]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"107":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"108":{"hasMany":{"inputs.fieldId":[130]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"109":{"hasMany":{"inputs.fieldId":[131]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"110":{"hasMany":{"inputs.fieldId":[132]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"111":{"hasMany":{"inputs.fieldId":[133]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"113":{"hasMany":{"foreigns.relatedFieldId":[12],"basicrelationships.parentKeyId":[18,17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"114":{"hasMany":{"inputs.fieldId":[145]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"115":{"hasMany":{"inputs.fieldId":[146]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"116":{"hasMany":{"inputs.fieldId":[147]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"117":{"hasMany":{"foreigns.fieldId":[12],"basicrelationships.foreignKeyId":[18,17],"inputs.fieldId":[134]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"118":{"hasMany":{"foreigns.relatedFieldId":[13,15,22],"basicrelationships.parentKeyId":[20,19,24,23,38,37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{"inputs.fieldId":[153]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"120":{"hasMany":{"inputs.fieldId":[154]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{"inputs.fieldId":[155]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"122":{"hasMany":{"inputs.fieldId":[156]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{"morphrelationships.idFieldId":[],"inputs.fieldId":[104]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"124":{"hasMany":{"morphrelationships.typeFieldId":[],"inputs.fieldId":[105]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"125":{"hasMany":{"foreigns.fieldId":[13],"basicrelationships.foreignKeyId":[20,19],"inputs.fieldId":[106]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{"foreigns.fieldId":[15],"basicrelationships.foreignKeyId":[24,23],"inputs.fieldId":[129]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{"foreigns.relatedFieldId":[16],"basicrelationships.parentKeyId":[26,25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{"inputs.fieldId":[148]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{"inputs.fieldId":[149]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{"inputs.fieldId":[150]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{"inputs.fieldId":[151]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"133":{"hasMany":{"inputs.fieldId":[152]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"134":{"hasMany":{"foreigns.fieldId":[16],"basicrelationships.foreignKeyId":[26,25],"inputs.fieldId":[107]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"135":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"136":{"hasMany":{"inputs.fieldId":[139]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"137":{"hasMany":{"inputs.fieldId":[140]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"138":{"hasMany":{"inputs.fieldId":[141]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"139":{"hasMany":{"inputs.fieldId":[142]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"140":{"hasMany":{"inputs.fieldId":[143]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"141":{"hasMany":{"inputs.fieldId":[144]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"143":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"144":{"hasMany":{"inputs.fieldId":[135]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"145":{"hasMany":{"inputs.fieldId":[136]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"146":{"hasMany":{"inputs.fieldId":[137]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"147":{"hasMany":{"inputs.fieldId":[138]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"149":{"hasMany":{"foreigns.fieldId":[19],"basicrelationships.foreignKeyId":[32,31]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"150":{"hasMany":{"foreigns.fieldId":[20],"basicrelationships.foreignKeyId":[34,33]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"151":{"hasMany":{"foreigns.fieldId":[21],"basicrelationships.foreignKeyId":[36,35]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"152":{"hasMany":{"foreigns.fieldId":[22],"basicrelationships.foreignKeyId":[38,37],"inputs.fieldId":[168]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"153":{"hasMany":{"foreigns.relatedFieldId":[23],"basicrelationships.parentKeyId":[40,39]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"154":{"hasMany":{"inputs.fieldId":[204]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"155":{"hasMany":{"inputs.fieldId":[205]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"156":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"157":{"hasMany":{"inputs.fieldId":[206]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"158":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"159":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"160":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"161":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"162":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"163":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"165":{"hasMany":{"foreigns.relatedFieldId":[37],"basicrelationships.parentKeyId":[68,67]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"166":{"hasMany":{"inputs.fieldId":[196]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"167":{"hasMany":{"inputs.fieldId":[197]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"168":{"hasMany":{"inputs.fieldId":[198]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"169":{"hasMany":{"inputs.fieldId":[199]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"170":{"hasMany":{"inputs.fieldId":[200]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"171":{"hasMany":{"inputs.fieldId":[201]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"172":{"hasMany":{"inputs.fieldId":[202]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"173":{"hasMany":{"foreigns.fieldId":[23],"basicrelationships.foreignKeyId":[40,39],"inputs.fieldId":[203]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"174":{"hasMany":{"foreigns.relatedFieldId":[25,30,35],"basicrelationships.parentKeyId":[44,43,54,53,64,63]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"175":{"hasMany":{"inputs.fieldId":[207]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"177":{"hasMany":{"inputs.fieldId":[209]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"179":{"hasMany":{"inputs.fieldId":[211]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"180":{"hasMany":{"inputs.fieldId":[212]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"181":{"hasMany":{"inputs.fieldId":[213]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"182":{"hasMany":{"inputs.fieldId":[214]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"189":{"hasMany":{"foreigns.relatedFieldId":[34],"basicrelationships.parentKeyId":[62,61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"190":{"hasMany":{"inputs.fieldId":[220]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"191":{"hasMany":{"inputs.fieldId":[221]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"192":{"hasMany":{"inputs.fieldId":[222]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"193":{"hasMany":{"inputs.fieldId":[223]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"194":{"hasMany":{"foreigns.fieldId":[25],"basicrelationships.foreignKeyId":[44,43],"inputs.fieldId":[224]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"211":{"hasMany":{"foreigns.relatedFieldId":[31,32,36],"basicrelationships.parentKeyId":[56,55,58,57,66,65]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"212":{"hasMany":{"inputs.fieldId":[255]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"213":{"hasMany":{"inputs.fieldId":[256]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"214":{"hasMany":{"inputs.fieldId":[257]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"215":{"hasMany":{"inputs.fieldId":[258]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"216":{"hasMany":{"inputs.fieldId":[259]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"218":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"219":{"hasMany":{"foreigns.fieldId":[30],"basicrelationships.foreignKeyId":[54,53]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"220":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"221":{"hasMany":{"inputs.fieldId":[265]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"222":{"hasMany":{"inputs.fieldId":[264]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"223":{"hasMany":{"foreigns.fieldId":[31],"basicrelationships.foreignKeyId":[56,55],"inputs.fieldId":[266]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"224":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"225":{"hasMany":{"inputs.fieldId":[261]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"226":{"hasMany":{"inputs.fieldId":[262]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"227":{"hasMany":{"foreigns.fieldId":[32],"basicrelationships.foreignKeyId":[58,57],"inputs.fieldId":[263]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"228":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"229":{"hasMany":{"inputs.fieldId":[267]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"230":{"hasMany":{"inputs.fieldId":[268]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"231":{"hasMany":{"inputs.fieldId":[269]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"233":{"hasMany":{"foreigns.fieldId":[34],"basicrelationships.foreignKeyId":[62,61],"inputs.fieldId":[270]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"234":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"235":{"hasMany":{"inputs.fieldId":[271]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"236":{"hasMany":{"inputs.fieldId":[272]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"237":{"hasMany":{"inputs.fieldId":[273]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"238":{"hasMany":{"inputs.fieldId":[274]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"239":{"hasMany":{"foreigns.fieldId":[35],"basicrelationships.foreignKeyId":[64,63],"inputs.fieldId":[275]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"240":{"hasMany":{"foreigns.fieldId":[36],"basicrelationships.foreignKeyId":[66,65],"inputs.fieldId":[276]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"241":{"hasMany":{"foreigns.fieldId":[37],"basicrelationships.foreignKeyId":[68,67],"inputs.fieldId":[277]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"242":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"243":{"hasMany":{"inputs.fieldId":[415]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"244":{"hasMany":{"inputs.fieldId":[416]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"245":{"hasMany":{"inputs.fieldId":[419]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"246":{"hasMany":{"inputs.fieldId":[417]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"247":{"hasMany":{"inputs.fieldId":[420]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"248":{"hasMany":{"inputs.fieldId":[421]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"249":{"hasMany":{"inputs.fieldId":[422]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"250":{"hasMany":{"inputs.fieldId":[423]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"251":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"252":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"253":{"hasMany":{"inputs.fieldId":[418]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"254":{"hasMany":{"foreigns.relatedFieldId":[44,46,50,45,38],"basicrelationships.parentKeyId":[70,69,82,81,84,83,86,85,94,93]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"255":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"256":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"257":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"258":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"259":{"hasMany":{"foreigns.relatedFieldId":[43,39],"basicrelationships.parentKeyId":[72,71,80,79]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"260":{"hasMany":{"inputs.fieldId":[372]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"261":{"hasMany":{"inputs.fieldId":[373]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"262":{"hasMany":{"inputs.fieldId":[374]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"263":{"hasMany":{"inputs.fieldId":[375]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"264":{"hasMany":{"inputs.fieldId":[376]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"265":{"hasMany":{"inputs.fieldId":[377]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"266":{"hasMany":{"inputs.fieldId":[378]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"267":{"hasMany":{"inputs.fieldId":[379]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"268":{"hasMany":{"foreigns.fieldId":[38],"basicrelationships.foreignKeyId":[70,69],"inputs.fieldId":[380]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"269":{"hasMany":{"foreigns.fieldId":[39],"basicrelationships.foreignKeyId":[72,71],"inputs.fieldId":[424]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"272":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"273":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"274":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"275":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"276":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"277":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"278":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"279":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"280":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"281":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"282":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"283":{"hasMany":{"foreigns.relatedFieldId":[54,40,51,56,41],"basicrelationships.parentKeyId":[74,73,76,75,96,95,102,101,106,105]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"284":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"285":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"286":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"287":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"288":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"289":{"hasMany":{"foreigns.fieldId":[40],"basicrelationships.foreignKeyId":[74,73],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"290":{"hasMany":{"foreigns.relatedFieldId":[42],"basicrelationships.parentKeyId":[78,77]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"291":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"292":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"293":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"294":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"295":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"296":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"297":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"298":{"hasMany":{"foreigns.fieldId":[41],"basicrelationships.foreignKeyId":[76,75],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"299":{"hasMany":{"foreigns.fieldId":[42],"basicrelationships.foreignKeyId":[78,77],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"300":{"hasMany":{"foreigns.fieldId":[43],"basicrelationships.foreignKeyId":[80,79],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"301":{"hasMany":{"foreigns.relatedFieldId":[49],"basicrelationships.parentKeyId":[92,91]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"303":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"304":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"305":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"306":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"307":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"308":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"309":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"310":{"hasMany":{"foreigns.fieldId":[44],"basicrelationships.foreignKeyId":[82,81],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"311":{"hasMany":{"foreigns.relatedFieldId":[52],"basicrelationships.parentKeyId":[98,97]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"312":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"313":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"314":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"315":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"316":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"317":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"318":{"hasMany":{"foreigns.fieldId":[45],"basicrelationships.foreignKeyId":[84,83],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"319":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"320":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"321":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"322":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"323":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"324":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"325":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"326":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"327":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"328":{"hasMany":{"foreigns.fieldId":[46],"basicrelationships.foreignKeyId":[86,85],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"329":{"hasMany":{"foreigns.relatedFieldId":[53],"basicrelationships.parentKeyId":[100,99]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"330":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"331":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"332":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"333":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"334":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"336":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"338":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"339":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"340":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"342":{"hasMany":{"foreigns.relatedFieldId":[55,57],"basicrelationships.parentKeyId":[104,103,108,107]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"343":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"344":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"345":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"346":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"347":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"348":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"349":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"350":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"351":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"352":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"353":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"354":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"355":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"356":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"357":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"358":{"hasMany":{"foreigns.fieldId":[49],"basicrelationships.foreignKeyId":[92,91],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"359":{"hasMany":{"foreigns.fieldId":[50],"basicrelationships.foreignKeyId":[94,93],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"360":{"hasMany":{"foreigns.fieldId":[51],"basicrelationships.foreignKeyId":[96,95],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"361":{"hasMany":{"foreigns.fieldId":[52],"basicrelationships.foreignKeyId":[98,97],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"362":{"hasMany":{"foreigns.fieldId":[53],"basicrelationships.foreignKeyId":[100,99],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"363":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"365":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"366":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"367":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"368":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"369":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"370":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"371":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"372":{"hasMany":{"foreigns.fieldId":[54],"basicrelationships.foreignKeyId":[102,101],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"373":{"hasMany":{"foreigns.fieldId":[55],"basicrelationships.foreignKeyId":[104,103],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"374":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"375":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"376":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"377":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"378":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"379":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"380":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"381":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"382":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"383":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"384":{"hasMany":{"foreigns.fieldId":[56],"basicrelationships.foreignKeyId":[106,105],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"385":{"hasMany":{"foreigns.fieldId":[57],"basicrelationships.foreignKeyId":[108,107],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"420":{"hasMany":{"foreigns.relatedFieldId":[64,61,63,65,62],"basicrelationships.parentKeyId":[115,116,117,118,119,120,121,122,123,124]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"421":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"422":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"423":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"424":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"425":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"426":{"hasMany":{"foreigns.relatedFieldId":[66],"basicrelationships.parentKeyId":[125,126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"427":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"428":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"429":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"430":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"431":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"432":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"433":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"434":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"435":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"436":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"437":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"438":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"439":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"440":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"441":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"442":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"443":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"444":{"hasMany":{"foreigns.fieldId":[64],"basicrelationships.foreignKeyId":[121,122],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"445":{"hasMany":{"foreigns.fieldId":[67],"basicrelationships.foreignKeyId":[127,128],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"446":{"hasMany":{"foreigns.relatedFieldId":[68],"basicrelationships.parentKeyId":[129,130]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"448":{"hasMany":{"inputs.fieldId":[987]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"449":{"hasMany":{"inputs.fieldId":[994]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"450":{"hasMany":{"inputs.fieldId":[989]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"451":{"hasMany":{"inputs.fieldId":[990]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"452":{"hasMany":{"inputs.fieldId":[995]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"453":{"hasMany":{"foreigns.fieldId":[69],"basicrelationships.foreignKeyId":[131,132],"inputs.fieldId":[993]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"454":{"hasMany":{"inputs.fieldId":[986],"foreigns.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"456":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"458":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"459":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"460":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"461":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"462":{"hasMany":{"foreigns.fieldId":[70],"basicrelationships.foreignKeyId":[133,134],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"463":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"464":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"465":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"466":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"467":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"468":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"469":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"470":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"471":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"472":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"473":{"hasMany":{"foreigns.fieldId":[61],"basicrelationships.foreignKeyId":[115,116],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"474":{"hasMany":{"foreigns.fieldId":[71],"basicrelationships.foreignKeyId":[135,136],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"476":{"hasMany":{"foreigns.relatedFieldId":[67,73],"basicrelationships.parentKeyId":[127,128,139,140]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"477":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"478":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"479":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"480":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"481":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"482":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"483":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"484":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"485":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"486":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"487":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"488":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"489":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"490":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"491":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"492":{"hasMany":{"foreigns.fieldId":[68],"basicrelationships.foreignKeyId":[129,130],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"493":{"hasMany":{"foreigns.fieldId":[74],"basicrelationships.foreignKeyId":[141,142],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"494":{"hasMany":{"foreigns.fieldId":[63],"basicrelationships.foreignKeyId":[119,120],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"495":{"hasMany":{"foreigns.fieldId":[75],"basicrelationships.foreignKeyId":[143,144],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"496":{"hasMany":{"foreigns.fieldId":[66],"basicrelationships.foreignKeyId":[125,126],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"497":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"498":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"499":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"500":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"501":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"502":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"503":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"504":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"505":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"506":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"507":{"hasMany":{"foreigns.fieldId":[65],"basicrelationships.foreignKeyId":[123,124],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"508":{"hasMany":{"foreigns.fieldId":[73],"basicrelationships.foreignKeyId":[139,140],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"509":{"hasMany":{"foreigns.relatedFieldId":[75],"basicrelationships.parentKeyId":[143,144]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"511":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"512":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"513":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"514":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"515":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"516":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"517":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"518":{"hasMany":{"foreigns.fieldId":[76],"basicrelationships.foreignKeyId":[145,146],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"519":{"hasMany":{"foreigns.relatedFieldId":[71],"basicrelationships.parentKeyId":[135,136]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"520":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"521":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"522":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"523":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"524":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"525":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"526":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"527":{"hasMany":{"foreigns.fieldId":[62],"basicrelationships.foreignKeyId":[117,118],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"528":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"529":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"530":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"531":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"532":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"533":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"534":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"535":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"536":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"538":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"539":{"hasMany":{"inputs.fieldId":[914]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"540":{"hasMany":{"inputs.fieldId":[915]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"541":{"hasMany":{"inputs.fieldId":[916]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"542":{"hasMany":{"inputs.fieldId":[917]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"543":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"544":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"545":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"546":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"547":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"548":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"549":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"551":{"hasMany":{"foreigns.relatedFieldId":[69,70,74,76],"basicrelationships.parentKeyId":[131,132,145,146,133,134,141,142]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"552":{"hasMany":{"inputs.fieldId":[918],"foreigns.relatedFieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"553":{"hasMany":{"inputs.fieldId":[919]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"554":{"hasMany":{"inputs.fieldId":[923]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"555":{"hasMany":{"inputs.fieldId":[924]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"556":{"hasMany":{"inputs.fieldId":[922]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"559":{"hasMany":{"inputs.fieldId":[992]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"563":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"564":{"hasMany":{"inputs.fieldId":[996]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"565":{"hasMany":{"inputs.fieldId":[997]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"566":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"567":{"hasMany":{"inputs.fieldId":[998]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"568":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"569":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"570":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"571":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"572":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"573":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"574":{"hasMany":{"inputs.fieldId":[999]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"575":{"hasMany":{"foreigns.relatedFieldId":[81,82,83,84],"basicrelationships.parentKeyId":[152,151,154,153,156,155,158,157]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"576":{"hasMany":{"inputs.fieldId":[1000]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"577":{"hasMany":{"inputs.fieldId":[1001]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"578":{"hasMany":{"inputs.fieldId":[1005]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"579":{"hasMany":{"inputs.fieldId":[1006]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"580":{"hasMany":{"inputs.fieldId":[1004]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"581":{"hasMany":{"foreigns.relatedFieldId":[86],"basicrelationships.parentKeyId":[162,161]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"582":{"hasMany":{"inputs.fieldId":[1007,1027]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"583":{"hasMany":{"inputs.fieldId":[1008,1028]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"584":{"hasMany":{"inputs.fieldId":[1015,1029]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"585":{"hasMany":{"inputs.fieldId":[1010,1030]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"586":{"hasMany":{"inputs.fieldId":[1011,1031]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"587":{"hasMany":{"inputs.fieldId":[1016,1032]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"588":{"hasMany":{"inputs.fieldId":[1013,1033]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"589":{"hasMany":{"foreigns.fieldId":[81],"basicrelationships.foreignKeyId":[152,151],"inputs.fieldId":[1014]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"590":{"hasMany":{"foreigns.relatedFieldId":[85],"basicrelationships.parentKeyId":[160,159]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"591":{"hasMany":{"inputs.fieldId":[1017,1035]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"592":{"hasMany":{"inputs.fieldId":[1018,1036]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"593":{"hasMany":{"inputs.fieldId":[1025,1037]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"594":{"hasMany":{"inputs.fieldId":[1020,1038]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"595":{"hasMany":{"inputs.fieldId":[1021,1039]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"596":{"hasMany":{"inputs.fieldId":[1026,1040]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"597":{"hasMany":{"inputs.fieldId":[1023,1041]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"598":{"hasMany":{"foreigns.fieldId":[82],"basicrelationships.foreignKeyId":[154,153],"inputs.fieldId":[1024]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"599":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"600":{"hasMany":{"inputs.fieldId":[1043,1057]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"601":{"hasMany":{"inputs.fieldId":[1044,1058]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"602":{"hasMany":{"inputs.fieldId":[1045,1059]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"603":{"hasMany":{"inputs.fieldId":[1046,1060]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"604":{"hasMany":{"foreigns.fieldId":[83],"basicrelationships.foreignKeyId":[156,155],"inputs.fieldId":[1047]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"605":{"hasMany":{"foreigns.relatedFieldId":[88],"basicrelationships.parentKeyId":[166,165]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"606":{"hasMany":{"inputs.fieldId":[1062]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"607":{"hasMany":{"inputs.fieldId":[1063]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"608":{"hasMany":{"inputs.fieldId":[1064]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"609":{"hasMany":{"inputs.fieldId":[1065]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"610":{"hasMany":{"inputs.fieldId":[1068]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"611":{"hasMany":{"inputs.fieldId":[1067]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"612":{"hasMany":{"foreigns.relatedFieldId":[87],"basicrelationships.parentKeyId":[164,163]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"613":{"hasMany":{"inputs.fieldId":[1048]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"614":{"hasMany":{"inputs.fieldId":[1049]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"615":{"hasMany":{"inputs.fieldId":[1050]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"616":{"hasMany":{"inputs.fieldId":[1051]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"617":{"hasMany":{"inputs.fieldId":[1052]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"618":{"hasMany":{"inputs.fieldId":[1053]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"619":{"hasMany":{"inputs.fieldId":[1054]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"620":{"hasMany":{"inputs.fieldId":[1055]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"621":{"hasMany":{"inputs.fieldId":[1056]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"622":{"hasMany":{"foreigns.relatedFieldId":[89,90],"basicrelationships.parentKeyId":[168,167,170,169]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"623":{"hasMany":{"inputs.fieldId":[1069]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"624":{"hasMany":{"inputs.fieldId":[1070]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"626":{"hasMany":{"inputs.fieldId":[1071]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"627":{"hasMany":{"inputs.fieldId":[1072]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"628":{"hasMany":{"inputs.fieldId":[1073]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"629":{"hasMany":{"inputs.fieldId":[1074]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"630":{"hasMany":{"inputs.fieldId":[1075]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"631":{"hasMany":{"inputs.fieldId":[1076]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"632":{"hasMany":{"foreigns.fieldId":[84],"basicrelationships.foreignKeyId":[158,157],"inputs.fieldId":[1077]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"633":{"hasMany":{"foreigns.fieldId":[85],"basicrelationships.foreignKeyId":[160,159],"inputs.fieldId":[1078]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"634":{"hasMany":{"foreigns.fieldId":[86],"basicrelationships.foreignKeyId":[162,161],"inputs.fieldId":[1079]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"635":{"hasMany":{"foreigns.fieldId":[87],"basicrelationships.foreignKeyId":[164,163],"inputs.fieldId":[1080]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"636":{"hasMany":{"foreigns.fieldId":[88],"basicrelationships.foreignKeyId":[166,165],"inputs.fieldId":[1081]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"637":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"638":{"hasMany":{"inputs.fieldId":[1085]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"639":{"hasMany":{"inputs.fieldId":[1086]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"640":{"hasMany":{"inputs.fieldId":[1087]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"641":{"hasMany":{"foreigns.fieldId":[89],"basicrelationships.foreignKeyId":[168,167],"inputs.fieldId":[1088]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"642":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"643":{"hasMany":{"inputs.fieldId":[1082]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"644":{"hasMany":{"inputs.fieldId":[1083]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"645":{"hasMany":{"foreigns.fieldId":[90],"basicrelationships.foreignKeyId":[170,169],"inputs.fieldId":[1084]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_642":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":74,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":642,"createdAt":"2024-02-14 13:30:38","updatedAt":"2024-02-14 13:30:38","order":0},"item_643":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"date","entityId":74,"type":"dateTime","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->dateTime()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":643,"createdAt":"2024-02-14 13:30:42","updatedAt":"2024-02-14 13:31:34"},"item_644":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Description","entityId":74,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":644,"createdAt":"2024-02-14 13:31:35","updatedAt":"2024-02-14 13:32:04"},"item_645":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"case_hear_id","entityId":74,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":645,"createdAt":"2024-02-14 13:32:16","updatedAt":"2024-02-14 14:27:34","order":3},"item_581":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":67,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":581,"createdAt":"2024-02-14 11:56:39","updatedAt":"2024-02-14 11:56:39","order":0},"item_582":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"attorneyID","entityId":67,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":582,"createdAt":"2024-02-14 11:56:43","updatedAt":"2024-02-14 11:57:02"},"item_583":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Name","entityId":67,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":583,"createdAt":"2024-02-14 11:57:03","updatedAt":"2024-02-14 11:57:09"},"item_584":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"courtType","entityId":67,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":584,"createdAt":"2024-02-14 11:57:11","updatedAt":"2024-02-14 11:57:40"},"item_585":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Address","entityId":67,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->address()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":585,"createdAt":"2024-02-14 11:57:41","updatedAt":"2024-02-14 11:57:45"},"item_586":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"State","entityId":67,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->state()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":586,"createdAt":"2024-02-14 11:57:47","updatedAt":"2024-02-14 11:57:51"},"item_587":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"EmpType","entityId":67,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":587,"createdAt":"2024-02-14 11:57:52","updatedAt":"2024-02-14 11:58:05"},"item_588":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":67,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":588,"createdAt":"2024-02-14 11:58:07","updatedAt":"2024-02-14 11:58:12"},"item_589":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"court_id","entityId":67,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":589,"createdAt":"2024-02-14 11:58:36","updatedAt":"2024-02-14 11:58:36","order":8},"item_599":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":69,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":599,"createdAt":"2024-02-14 12:44:41","updatedAt":"2024-02-14 12:44:41","order":0},"item_600":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"address","entityId":69,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->address()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":600,"createdAt":"2024-02-14 12:44:44","updatedAt":"2024-02-14 12:44:56"},"item_601":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"state","entityId":69,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->state()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":601,"createdAt":"2024-02-14 12:44:58","updatedAt":"2024-02-14 12:45:04"},"item_602":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"location","entityId":69,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":602,"createdAt":"2024-02-14 12:45:07","updatedAt":"2024-02-14 12:45:15"},"item_603":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":69,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":603,"createdAt":"2024-02-14 12:45:16","updatedAt":"2024-02-14 12:45:24"},"item_604":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"court_id","entityId":69,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":604,"createdAt":"2024-02-14 12:45:30","updatedAt":"2024-02-14 12:45:30","order":5},"item_612":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":71,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":612,"createdAt":"2024-02-14 12:56:06","updatedAt":"2024-02-14 12:56:06","order":0},"item_613":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"deptName","entityId":71,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":613,"createdAt":"2024-02-14 12:56:09","updatedAt":"2024-02-14 12:56:30"},"item_614":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"mid","entityId":71,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":614,"createdAt":"2024-02-14 12:56:35","updatedAt":"2024-02-14 12:56:53"},"item_615":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"rank","entityId":71,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":615,"createdAt":"2024-02-14 12:56:54","updatedAt":"2024-02-14 12:57:05"},"item_616":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":71,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":616,"createdAt":"2024-02-14 12:57:25","updatedAt":"2024-02-14 12:57:35"},"item_617":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"address","entityId":71,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->address()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":617,"createdAt":"2024-02-14 12:57:38","updatedAt":"2024-02-14 12:57:42"},"item_618":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"state","entityId":71,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->state()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":618,"createdAt":"2024-02-14 12:57:44","updatedAt":"2024-02-14 12:57:49"},"item_619":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"crimeDescription","entityId":71,"type":"text","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":619,"createdAt":"2024-02-14 12:57:51","updatedAt":"2024-02-14 12:58:19"},"item_620":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"crimeDate","entityId":71,"type":"dateTime","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->dateTime()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":620,"createdAt":"2024-02-14 12:58:20","updatedAt":"2024-02-14 12:58:31"},"item_621":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"ChargeDate","entityId":71,"type":"dateTime","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->dateTime()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":621,"createdAt":"2024-02-14 12:58:32","updatedAt":"2024-02-14 12:58:57"},"item_622":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":72,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":622,"createdAt":"2024-02-14 13:03:34","updatedAt":"2024-02-14 13:03:34","order":0},"item_623":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"CaseID","entityId":72,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":623,"createdAt":"2024-02-14 13:03:41","updatedAt":"2024-02-14 13:04:16"},"item_624":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"casename","entityId":72,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":624,"createdAt":"2024-02-14 13:04:17","updatedAt":"2024-02-14 13:04:46"},"item_626":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"fileNumber","entityId":72,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":626,"createdAt":"2024-02-14 13:07:06","updatedAt":"2024-02-14 13:07:24"},"item_627":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"address","entityId":72,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->address()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":627,"createdAt":"2024-02-14 13:07:43","updatedAt":"2024-02-14 13:08:13"},"item_628":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"state","entityId":72,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->state()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":628,"createdAt":"2024-02-14 13:08:14","updatedAt":"2024-02-14 13:08:18"},"item_629":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"location","entityId":72,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":629,"createdAt":"2024-02-14 13:08:27","updatedAt":"2024-02-14 13:08:37"},"item_630":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"caseStartDate","entityId":72,"type":"dateTime","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->dateTime()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":630,"createdAt":"2024-02-14 13:08:38","updatedAt":"2024-02-14 13:08:56"},"item_631":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":72,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":631,"createdAt":"2024-02-14 13:09:27","updatedAt":"2024-02-14 13:09:35"},"item_632":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"court_id","entityId":72,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":632,"createdAt":"2024-02-14 13:10:00","updatedAt":"2024-02-14 13:10:00","order":9},"item_633":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"judge_id","entityId":72,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":633,"createdAt":"2024-02-14 13:10:10","updatedAt":"2024-02-14 13:10:10","order":10},"item_634":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"attorney_id","entityId":72,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":634,"createdAt":"2024-02-14 13:10:17","updatedAt":"2024-02-14 13:10:17","order":11},"item_635":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"case_charge_id","entityId":72,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":635,"createdAt":"2024-02-14 13:10:38","updatedAt":"2024-02-14 13:10:38","order":12},"item_636":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"wittness_id","entityId":72,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":636,"createdAt":"2024-02-14 13:11:01","updatedAt":"2024-02-14 13:11:01","order":13},"item_575":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":66,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":575,"createdAt":"2024-02-14 11:34:38","updatedAt":"2024-02-14 11:34:38","order":0},"item_576":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"courtID","entityId":66,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":576,"createdAt":"2024-02-14 11:34:41","updatedAt":"2024-02-14 11:34:53"},"item_577":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":66,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":577,"createdAt":"2024-02-14 11:34:54","updatedAt":"2024-02-14 11:34:58"},"item_578":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"courtType","entityId":66,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":578,"createdAt":"2024-02-14 11:35:00","updatedAt":"2024-02-14 11:35:23"},"item_579":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"speciality","entityId":66,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":579,"createdAt":"2024-02-14 11:35:24","updatedAt":"2024-02-14 11:35:37"},"item_580":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":66,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":580,"createdAt":"2024-02-14 11:35:39","updatedAt":"2024-02-14 11:35:44"},"item_637":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":73,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":637,"createdAt":"2024-02-14 13:26:59","updatedAt":"2024-02-14 13:26:59","order":0},"item_638":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"decisionDate","entityId":73,"type":"dateTime","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->dateTime()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":638,"createdAt":"2024-02-14 13:27:02","updatedAt":"2024-02-14 13:28:48"},"item_639":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Decisiontype","entityId":73,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":639,"createdAt":"2024-02-14 13:28:12","updatedAt":"2024-02-14 13:29:18"},"item_640":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Description","entityId":73,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":640,"createdAt":"2024-02-14 13:29:19","updatedAt":"2024-02-14 13:29:31"},"item_641":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"case_hear_id","entityId":73,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":641,"createdAt":"2024-02-14 13:29:41","updatedAt":"2024-02-14 14:27:40","order":4},"item_590":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":68,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":590,"createdAt":"2024-02-14 12:30:51","updatedAt":"2024-02-14 12:30:51","order":0},"item_591":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"judgeID","entityId":68,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":591,"createdAt":"2024-02-14 12:30:54","updatedAt":"2024-02-14 12:31:11"},"item_592":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":68,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":592,"createdAt":"2024-02-14 12:31:12","updatedAt":"2024-02-14 12:31:15"},"item_593":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"courtTyep","entityId":68,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":593,"createdAt":"2024-02-14 12:31:17","updatedAt":"2024-02-14 12:31:33"},"item_594":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Address","entityId":68,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->address()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":594,"createdAt":"2024-02-14 12:31:34","updatedAt":"2024-02-14 12:31:39"},"item_595":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"state","entityId":68,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->state()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":595,"createdAt":"2024-02-14 12:31:41","updatedAt":"2024-02-14 12:31:44"},"item_596":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Emptype","entityId":68,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":596,"createdAt":"2024-02-14 12:31:46","updatedAt":"2024-02-14 12:32:02"},"item_597":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":68,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":597,"createdAt":"2024-02-14 12:32:03","updatedAt":"2024-02-14 12:32:23"},"item_598":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"court_id","entityId":68,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":598,"createdAt":"2024-02-14 12:32:35","updatedAt":"2024-02-14 12:32:35","order":8},"item_563":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":65,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":563,"createdAt":"2024-02-14 11:33:10","updatedAt":"2024-02-14 11:34:00","order":0},"item_564":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":65,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":564,"createdAt":"2024-02-14 11:33:10","updatedAt":"2024-02-14 11:34:00","order":1},"item_565":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email","entityId":65,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->unique->email()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":true,"id":565,"createdAt":"2024-02-14 11:33:10","updatedAt":"2024-02-14 11:34:00","order":2},"item_566":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email_verified_at","entityId":65,"type":"timestamp","pk":false,"fk":false,"params":{},"faker":"now()","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":566,"createdAt":"2024-02-14 11:33:10","updatedAt":"2024-02-14 11:34:00","order":3},"item_567":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"password","entityId":65,"type":"string","pk":false,"fk":false,"params":{},"faker":"\\Hash::make('password')","nullable":false,"hidden":true,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":567,"createdAt":"2024-02-14 11:33:10","updatedAt":"2024-02-14 11:34:00","order":4},"item_574":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":65,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":574,"createdAt":"2024-02-14 11:33:39","updatedAt":"2024-02-14 11:34:00"},"item_568":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"remember_token","entityId":65,"type":"string","pk":false,"fk":false,"params":{"size":100},"faker":"Str::random(10)","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":568,"createdAt":"2024-02-14 11:33:10","updatedAt":"2024-02-14 11:34:00","order":6},"item_569":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"two_factor_secret","entityId":65,"type":"text","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":569,"createdAt":"2024-02-14 11:33:11","updatedAt":"2024-02-14 11:34:00","order":7},"item_570":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"two_factor_recovery_codes","entityId":65,"type":"text","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":570,"createdAt":"2024-02-14 11:33:11","updatedAt":"2024-02-14 11:34:00","order":8},"item_571":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"two_factor_confirmed_at","entityId":65,"type":"timestamp","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":571,"createdAt":"2024-02-14 11:33:11","updatedAt":"2024-02-14 11:34:00","order":9},"item_572":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"current_team_id","entityId":65,"type":"foreignId","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":572,"createdAt":"2024-02-14 11:33:11","updatedAt":"2024-02-14 11:34:00","order":10},"item_573":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"profile_photo_path","entityId":65,"type":"text","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":573,"createdAt":"2024-02-14 11:33:11","updatedAt":"2024-02-14 11:34:00","order":11},"item_605":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":70,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":605,"createdAt":"2024-02-14 12:50:30","updatedAt":"2024-02-14 12:50:30","order":0},"item_606":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"wittnessID","entityId":70,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":606,"createdAt":"2024-02-14 12:50:33","updatedAt":"2024-02-14 12:50:58"},"item_607":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":70,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":607,"createdAt":"2024-02-14 12:50:59","updatedAt":"2024-02-14 12:51:03"},"item_608":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"address","entityId":70,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->address()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":608,"createdAt":"2024-02-14 12:51:05","updatedAt":"2024-02-14 12:51:10"},"item_609":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"state","entityId":70,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->state()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":609,"createdAt":"2024-02-14 12:51:12","updatedAt":"2024-02-14 12:51:16"},"item_610":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"wittnessType","entityId":70,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":610,"createdAt":"2024-02-14 12:51:17","updatedAt":"2024-02-14 12:51:50"},"item_611":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":70,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":611,"createdAt":"2024-02-14 12:52:23","updatedAt":"2024-02-14 12:52:30"}},"foreigns":{"foreigns":{"count":67,"lastPrimaryKey":90,"index":{"1":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"50":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"51":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"66":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"68":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"81":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"82":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"89":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"90":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_90":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":645,"relatedEntityId":72,"relatedFieldId":622,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"appointment_case_hear_id_foreign","defaultIndexName":"appointment_case_hear_id_foreign","id":90,"createdAt":"2024-02-14 13:32:16","updatedAt":"2024-02-14 13:32:16"},"item_86":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":634,"relatedEntityId":67,"relatedFieldId":581,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"case_hear_attorney_id_foreign","defaultIndexName":"case_hear_attorney_id_foreign","id":86,"createdAt":"2024-02-14 13:10:17","updatedAt":"2024-02-14 13:10:17"},"item_81":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":589,"relatedEntityId":66,"relatedFieldId":575,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"attorney_court_id_foreign","defaultIndexName":"attorney_court_id_foreign","id":81,"createdAt":"2024-02-14 11:58:36","updatedAt":"2024-02-14 11:58:36"},"item_83":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":604,"relatedEntityId":66,"relatedFieldId":575,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"bar_court_id_foreign","defaultIndexName":"bar_court_id_foreign","id":83,"createdAt":"2024-02-14 12:45:30","updatedAt":"2024-02-14 12:45:30"},"item_87":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":635,"relatedEntityId":71,"relatedFieldId":612,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"case_hear_case_charge_id_foreign","defaultIndexName":"case_hear_case_charge_id_foreign","id":87,"createdAt":"2024-02-14 13:10:38","updatedAt":"2024-02-14 13:10:38"},"item_89":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":641,"relatedEntityId":72,"relatedFieldId":622,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"decision_case_hear_id_foreign","defaultIndexName":"decision_case_hear_id_foreign","id":89,"createdAt":"2024-02-14 13:29:41","updatedAt":"2024-02-14 13:29:41"},"item_84":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":632,"relatedEntityId":66,"relatedFieldId":575,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"case_hear_court_id_foreign","defaultIndexName":"case_hear_court_id_foreign","id":84,"createdAt":"2024-02-14 13:10:00","updatedAt":"2024-02-14 13:10:00"},"item_85":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":633,"relatedEntityId":68,"relatedFieldId":590,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"case_hear_judge_id_foreign","defaultIndexName":"case_hear_judge_id_foreign","id":85,"createdAt":"2024-02-14 13:10:10","updatedAt":"2024-02-14 13:10:10"},"item_88":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":636,"relatedEntityId":70,"relatedFieldId":605,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"case_hear_wittness_id_foreign","defaultIndexName":"case_hear_wittness_id_foreign","id":88,"createdAt":"2024-02-14 13:11:01","updatedAt":"2024-02-14 13:11:01"},"item_82":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":598,"relatedEntityId":66,"relatedFieldId":575,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"judge_court_id_foreign","defaultIndexName":"judge_court_id_foreign","id":82,"createdAt":"2024-02-14 12:32:35","updatedAt":"2024-02-14 12:32:35"}},"hasmanydetails":{"hasmanydetails":{"count":5,"lastPrimaryKey":33,"index":{"6":{"hasMany":{"cruds.hasManyDetailId":[20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"cruds.hasManyDetailId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{"cruds.hasManyDetailId":[134]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{"cruds.hasManyDetailId":[135]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"cruds.hasManyDetailId":[138]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_29":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":131,"relatedCrudId":134,"relationshipId":151,"order":0,"name":"Attorneys","componentName":"CourtAttorneysDetail","hasSearch":true,"hasPagination":true,"onEdit":true,"onShow":true,"id":29,"createdAt":"2024-02-14 12:37:13","updatedAt":"2024-02-14 12:37:17"},"item_30":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":131,"relatedCrudId":135,"relationshipId":153,"order":0,"name":"Judges","componentName":"CourtJudgesDetail","hasSearch":true,"hasPagination":true,"onEdit":true,"onShow":false,"id":30,"createdAt":"2024-02-14 12:37:22","updatedAt":"2024-02-14 12:37:22"},"item_31":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":131,"relatedCrudId":138,"relationshipId":155,"order":0,"name":"Bars","componentName":"CourtBarsDetail","hasSearch":true,"hasPagination":true,"onEdit":true,"onShow":false,"id":31,"createdAt":"2024-02-14 13:01:36","updatedAt":"2024-02-14 13:01:36"}},"inputs":{"inputs":{"count":246,"lastPrimaryKey":1095,"index":{"1":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"89":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"91":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"92":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"96":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"97":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"98":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"99":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"100":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"104":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"105":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"106":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"107":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"108":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"122":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"124":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"125":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"126":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"133":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"134":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"135":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"136":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"137":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"138":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"139":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"140":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"141":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"142":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"143":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"144":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"145":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"146":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"147":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"148":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"149":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"150":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"151":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"152":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"153":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"154":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"155":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"156":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"157":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"158":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"160":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"161":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"162":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"163":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"164":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"165":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"166":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"167":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"168":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"196":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"197":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"198":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"199":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"200":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"201":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"202":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"203":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"204":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"205":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"206":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"207":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"209":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"211":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"212":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"213":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"214":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"220":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"221":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"222":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"223":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"224":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"255":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"256":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"257":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"258":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"259":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"261":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"262":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"263":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"264":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"265":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"266":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"267":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"268":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"269":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"270":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"271":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"272":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"273":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"274":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"275":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"276":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"277":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"372":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"373":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"374":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"375":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"376":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"377":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"378":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"379":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"380":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"415":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"416":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"417":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"418":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"419":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"420":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"421":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"422":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"423":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"424":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"914":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"915":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"916":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"917":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"918":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"919":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"922":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"923":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"924":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"986":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"987":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"989":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"990":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"992":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"993":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"994":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"995":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"996":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"997":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"998":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"999":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1000":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1001":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1004":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1005":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1006":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1007":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1008":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1010":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1011":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1013":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1014":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1015":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1016":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1017":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1018":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1020":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1021":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1023":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1024":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1025":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1026":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1027":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1028":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1029":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1030":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1031":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1032":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1033":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1035":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1036":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1037":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1038":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1039":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1040":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1041":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1043":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1044":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1045":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1046":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1047":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1048":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1049":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1050":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1051":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1052":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1053":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1054":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1055":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1056":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1057":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1058":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1059":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1060":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1062":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1063":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1064":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1065":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1067":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1068":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1069":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1070":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1071":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1072":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1073":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1074":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1075":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1076":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1077":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1078":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1079":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1080":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1081":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1082":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1083":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1084":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1085":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1086":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1087":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1088":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_996":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":130,"fieldId":564,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"name","label":"Name","placeholder":"Name","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":996,"createdAt":"2024-02-14 11:36:02","updatedAt":"2024-02-14 11:36:02"},"item_997":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":130,"fieldId":565,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"email","label":"Email","placeholder":"Email","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"email","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","unique:users,email","email"],"updateValidation":["required","unique:users,email","email"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":997,"createdAt":"2024-02-14 11:36:02","updatedAt":"2024-02-14 11:36:02"},"item_998":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":130,"fieldId":567,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"password","label":"Password","placeholder":"Password","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"password","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required"],"updateValidation":["nullable"],"onCreate":true,"onUpdate":true,"onShow":false,"onIndex":false,"onForms":true,"dependentSelectId":null,"id":998,"createdAt":"2024-02-14 11:36:02","updatedAt":"2024-02-14 11:36:02"},"item_999":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":130,"fieldId":574,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":999,"createdAt":"2024-02-14 11:36:02","updatedAt":"2024-02-14 11:36:02"},"item_1000":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":131,"fieldId":576,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"courtID","label":"Court Id","placeholder":"Court Id","order":0,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1000,"createdAt":"2024-02-14 11:36:07","updatedAt":"2024-02-14 11:37:29"},"item_1001":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":131,"fieldId":577,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"name","label":"Name","placeholder":"Name","order":1,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1001,"createdAt":"2024-02-14 11:36:07","updatedAt":"2024-02-14 11:37:29"},"item_1005":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":131,"fieldId":578,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"courtType","label":"Court Type","placeholder":"Court Type","order":2,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"Higher","label":"Higher"},{"value":"First","label":"First"},{"value":"Second","label":"Second"}],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1005,"createdAt":"2024-02-14 11:36:28","updatedAt":"2024-02-14 11:37:29"},"item_1006":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":131,"fieldId":579,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"speciality","label":"Speciality","placeholder":"Speciality","order":3,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"Judge","label":"Judge"},{"value":"Lawyer","label":"Lawyer"},{"value":"Attorney","label":"Attorney"}],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1006,"createdAt":"2024-02-14 11:36:34","updatedAt":"2024-02-14 11:38:22"},"item_1004":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":131,"fieldId":580,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":4,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1004,"createdAt":"2024-02-14 11:36:07","updatedAt":"2024-02-14 11:38:27"},"item_1027":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":134,"fieldId":582,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"attorneyID","label":"Attorney Id","placeholder":"Attorney Id","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"attorney.attorneyID","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1027,"createdAt":"2024-02-14 12:37:13","updatedAt":"2024-02-14 12:37:13"},"item_1028":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":134,"fieldId":583,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"Name","label":"Name","placeholder":"Name","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"attorney.Name","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1028,"createdAt":"2024-02-14 12:37:13","updatedAt":"2024-02-14 12:37:13"},"item_1029":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":134,"fieldId":584,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"courtType","label":"Court Type","placeholder":"Court Type","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"attorney.courtType","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1029,"createdAt":"2024-02-14 12:37:13","updatedAt":"2024-02-14 12:37:13"},"item_1030":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":134,"fieldId":585,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"Address","label":"Address","placeholder":"Address","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"attorney.Address","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1030,"createdAt":"2024-02-14 12:37:13","updatedAt":"2024-02-14 12:37:13"},"item_1031":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":134,"fieldId":586,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"State","label":"State","placeholder":"State","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"attorney.State","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1031,"createdAt":"2024-02-14 12:37:13","updatedAt":"2024-02-14 12:37:13"},"item_1032":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":134,"fieldId":587,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"EmpType","label":"Emp Type","placeholder":"Emp Type","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"attorney.EmpType","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1032,"createdAt":"2024-02-14 12:37:13","updatedAt":"2024-02-14 12:37:13"},"item_1033":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":134,"fieldId":588,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":7,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"attorney.description","type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1033,"createdAt":"2024-02-14 12:37:13","updatedAt":"2024-02-14 12:37:13"},"item_1035":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":135,"fieldId":591,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"judgeID","label":"Judge Id","placeholder":"Judge Id","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"judge.judgeID","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1035,"createdAt":"2024-02-14 12:37:22","updatedAt":"2024-02-14 12:37:22"},"item_1036":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":135,"fieldId":592,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"name","label":"Name","placeholder":"Name","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"judge.name","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1036,"createdAt":"2024-02-14 12:37:22","updatedAt":"2024-02-14 12:37:22"},"item_1037":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":135,"fieldId":593,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"courtTyep","label":"Court Tyep","placeholder":"Court Tyep","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"judge.courtTyep","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1037,"createdAt":"2024-02-14 12:37:22","updatedAt":"2024-02-14 12:37:22"},"item_1038":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":135,"fieldId":594,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"Address","label":"Address","placeholder":"Address","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"judge.Address","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1038,"createdAt":"2024-02-14 12:37:22","updatedAt":"2024-02-14 12:37:22"},"item_1039":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":135,"fieldId":595,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"state","label":"State","placeholder":"State","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"judge.state","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1039,"createdAt":"2024-02-14 12:37:22","updatedAt":"2024-02-14 12:37:22"},"item_1040":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":135,"fieldId":596,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"Emptype","label":"Emptype","placeholder":"Emptype","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"judge.Emptype","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1040,"createdAt":"2024-02-14 12:37:22","updatedAt":"2024-02-14 12:37:22"},"item_1041":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":135,"fieldId":597,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":7,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"judge.description","type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1041,"createdAt":"2024-02-14 12:37:22","updatedAt":"2024-02-14 12:37:22"},"item_1057":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":138,"fieldId":600,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"address","label":"Address","placeholder":"Address","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"bar.address","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1057,"createdAt":"2024-02-14 13:01:36","updatedAt":"2024-02-14 13:01:36"},"item_1058":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":138,"fieldId":601,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"state","label":"State","placeholder":"State","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"bar.state","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1058,"createdAt":"2024-02-14 13:01:36","updatedAt":"2024-02-14 13:01:36"},"item_1059":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":138,"fieldId":602,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"location","label":"Location","placeholder":"Location","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"bar.location","type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1059,"createdAt":"2024-02-14 13:01:36","updatedAt":"2024-02-14 13:01:36"},"item_1060":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":138,"fieldId":603,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":"bar.description","type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1060,"createdAt":"2024-02-14 13:01:36","updatedAt":"2024-02-14 13:01:36"},"item_1014":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":132,"fieldId":589,"relationshipId":152,"relationshipCollectionName":"courts","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"courtsForSelect","name":"court_id","label":"Court","placeholder":"Court","order":0,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Court","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:courts,id"],"updateValidation":["required","exists:courts,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1014,"createdAt":"2024-02-14 11:59:02","updatedAt":"2024-02-14 12:33:08"},"item_1007":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":132,"fieldId":582,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"attorneyID","label":"Attorney Id","placeholder":"Attorney Id","order":1,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1007,"createdAt":"2024-02-14 11:59:02","updatedAt":"2024-02-14 12:33:08"},"item_1008":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":132,"fieldId":583,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"Name","label":"Name","placeholder":"Name","order":2,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1008,"createdAt":"2024-02-14 11:59:02","updatedAt":"2024-02-14 12:33:08"},"item_1010":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":132,"fieldId":585,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"Address","label":"Address","placeholder":"Address","order":3,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1010,"createdAt":"2024-02-14 11:59:02","updatedAt":"2024-02-14 12:33:08"},"item_1011":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":132,"fieldId":586,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"State","label":"State","placeholder":"State","order":4,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1011,"createdAt":"2024-02-14 11:59:02","updatedAt":"2024-02-14 12:33:08"},"item_1015":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":132,"fieldId":584,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"courtType","label":"Court Type","placeholder":"Court Type","order":5,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"Higher","label":"Higher"},{"value":"First","label":"First"},{"value":"Second","label":"Second"}],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1015,"createdAt":"2024-02-14 12:00:01","updatedAt":"2024-02-14 12:33:08"},"item_1016":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":132,"fieldId":587,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"EmpType","label":"Emp Type","placeholder":"Emp Type","order":6,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"Solder","label":"Solder"},{"value":"Civil","label":"Civil"}],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1016,"createdAt":"2024-02-14 12:00:05","updatedAt":"2024-02-14 12:33:08"},"item_1013":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":132,"fieldId":588,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":7,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1013,"createdAt":"2024-02-14 11:59:02","updatedAt":"2024-02-14 12:33:08"},"item_1024":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":133,"fieldId":598,"relationshipId":154,"relationshipCollectionName":"courts","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"courtsForSelect","name":"court_id","label":"Court","placeholder":"Court","order":0,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Court","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:courts,id"],"updateValidation":["required","exists:courts,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1024,"createdAt":"2024-02-14 12:33:01","updatedAt":"2024-02-14 12:36:32"},"item_1017":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":133,"fieldId":591,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"judgeID","label":"Judge Id","placeholder":"Judge Id","order":1,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1017,"createdAt":"2024-02-14 12:33:01","updatedAt":"2024-02-14 12:36:32"},"item_1018":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":133,"fieldId":592,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"name","label":"Name","placeholder":"Name","order":2,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1018,"createdAt":"2024-02-14 12:33:01","updatedAt":"2024-02-14 12:36:32"},"item_1020":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":133,"fieldId":594,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"Address","label":"Address","placeholder":"Address","order":3,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1020,"createdAt":"2024-02-14 12:33:01","updatedAt":"2024-02-14 12:36:32"},"item_1021":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":133,"fieldId":595,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"state","label":"State","placeholder":"State","order":4,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1021,"createdAt":"2024-02-14 12:33:01","updatedAt":"2024-02-14 12:36:32"},"item_1025":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":133,"fieldId":593,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"courtTyep","label":"Court Tyep","placeholder":"Court Tyep","order":5,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"Higher","label":"Higher"},{"value":"Lawyer","label":"Lawyer"},{"value":"Attorney","label":"Attorney"}],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1025,"createdAt":"2024-02-14 12:34:16","updatedAt":"2024-02-14 12:36:32"},"item_1026":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":133,"fieldId":596,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"Emptype","label":"Emptype","placeholder":"Emptype","order":6,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"Solder","label":"Solder"},{"value":"Civil","label":"Civil"}],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1026,"createdAt":"2024-02-14 12:35:36","updatedAt":"2024-02-14 12:36:32"},"item_1023":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":133,"fieldId":597,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":7,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1023,"createdAt":"2024-02-14 12:33:01","updatedAt":"2024-02-14 12:36:32"},"item_1047":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":136,"fieldId":604,"relationshipId":156,"relationshipCollectionName":"courts","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"courtsForSelect","name":"court_id","label":"Court","placeholder":"Court","order":0,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Court","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:courts,id"],"updateValidation":["required","exists:courts,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1047,"createdAt":"2024-02-14 12:45:55","updatedAt":"2024-02-14 12:46:26"},"item_1043":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":136,"fieldId":600,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"address","label":"Address","placeholder":"Address","order":1,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1043,"createdAt":"2024-02-14 12:45:55","updatedAt":"2024-02-14 12:46:26"},"item_1044":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":136,"fieldId":601,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"state","label":"State","placeholder":"State","order":2,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1044,"createdAt":"2024-02-14 12:45:55","updatedAt":"2024-02-14 12:46:26"},"item_1045":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":136,"fieldId":602,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"location","label":"Location","placeholder":"Location","order":3,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1045,"createdAt":"2024-02-14 12:45:55","updatedAt":"2024-02-14 12:46:26"},"item_1046":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":136,"fieldId":603,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":4,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1046,"createdAt":"2024-02-14 12:45:55","updatedAt":"2024-02-14 12:46:26"},"item_1048":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":137,"fieldId":613,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"deptName","label":"Dept Name","placeholder":"Dept Name","order":1,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1048,"createdAt":"2024-02-14 13:00:37","updatedAt":"2024-02-14 13:00:43"},"item_1049":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":137,"fieldId":614,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"mid","label":"Mid","placeholder":"Mid","order":2,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1049,"createdAt":"2024-02-14 13:00:37","updatedAt":"2024-02-14 13:00:49"},"item_1050":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":137,"fieldId":615,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"rank","label":"Rank","placeholder":"Rank","order":3,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1050,"createdAt":"2024-02-14 13:00:37","updatedAt":"2024-02-14 13:00:52"},"item_1051":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":137,"fieldId":616,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"name","label":"Name","placeholder":"Name","order":4,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1051,"createdAt":"2024-02-14 13:00:37","updatedAt":"2024-02-14 13:00:56"},"item_1052":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":137,"fieldId":617,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"address","label":"Address","placeholder":"Address","order":5,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1052,"createdAt":"2024-02-14 13:00:37","updatedAt":"2024-02-14 13:00:59"},"item_1053":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":137,"fieldId":618,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"state","label":"State","placeholder":"State","order":6,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1053,"createdAt":"2024-02-14 13:00:37","updatedAt":"2024-02-14 13:01:03"},"item_1054":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":137,"fieldId":619,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"crimeDescription","label":"Crime Description","placeholder":"Crime Description","order":7,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1054,"createdAt":"2024-02-14 13:00:37","updatedAt":"2024-02-14 13:01:09"},"item_1055":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":137,"fieldId":620,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"crimeDate","label":"Crime Date","placeholder":"Crime Date","order":8,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"datetime","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","date"],"updateValidation":["required","date"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1055,"createdAt":"2024-02-14 13:00:37","updatedAt":"2024-02-14 13:01:13"},"item_1056":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":137,"fieldId":621,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"ChargeDate","label":"Charge Date","placeholder":"Charge Date","order":9,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"datetime","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","date"],"updateValidation":["required","date"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1056,"createdAt":"2024-02-14 13:00:37","updatedAt":"2024-02-14 13:01:18"},"item_1062":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":139,"fieldId":606,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"wittnessID","label":"Wittness Id","placeholder":"Wittness Id","order":0,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1062,"createdAt":"2024-02-14 13:14:24","updatedAt":"2024-02-14 13:15:37"},"item_1063":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":139,"fieldId":607,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"name","label":"Name","placeholder":"Name","order":1,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1063,"createdAt":"2024-02-14 13:14:24","updatedAt":"2024-02-14 13:15:37"},"item_1064":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":139,"fieldId":608,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"address","label":"Address","placeholder":"Address","order":2,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1064,"createdAt":"2024-02-14 13:14:24","updatedAt":"2024-02-14 13:15:37"},"item_1065":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":139,"fieldId":609,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"state","label":"State","placeholder":"State","order":3,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1065,"createdAt":"2024-02-14 13:14:24","updatedAt":"2024-02-14 13:15:37"},"item_1068":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":139,"fieldId":610,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"wittnessType","label":"Wittness Type","placeholder":"Wittness Type","order":4,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"Attorney","label":"Attorney"},{"value":"Accused","label":"Accused"}],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1068,"createdAt":"2024-02-14 13:14:57","updatedAt":"2024-02-14 13:15:37"},"item_1067":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":139,"fieldId":611,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":5,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1067,"createdAt":"2024-02-14 13:14:24","updatedAt":"2024-02-14 13:15:37"},"item_1077":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":632,"relationshipId":158,"relationshipCollectionName":"courts","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"courtsForSelect","name":"court_id","label":"Court","placeholder":"Court","order":0,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Court","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:courts,id"],"updateValidation":["required","exists:courts,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1077,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1078":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":633,"relationshipId":160,"relationshipCollectionName":"judges","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"judgesForSelect","name":"judge_id","label":"Judge","placeholder":"Judge","order":1,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Judge","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:judges,id"],"updateValidation":["required","exists:judges,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1078,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1079":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":634,"relationshipId":162,"relationshipCollectionName":"attorneys","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"attorneysForSelect","name":"attorney_id","label":"Attorney","placeholder":"Attorney","order":2,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Attorney","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:attorneys,id"],"updateValidation":["required","exists:attorneys,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1079,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1080":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":635,"relationshipId":164,"relationshipCollectionName":"caseCharges","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"caseChargesForSelect","name":"case_charge_id","label":"Case Charge","placeholder":"Case Charge","order":3,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Case Charge","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:case_charges,id"],"updateValidation":["required","exists:case_charges,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1080,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1081":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":636,"relationshipId":166,"relationshipCollectionName":"wittnesses","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"wittnessesForSelect","name":"wittness_id","label":"Wittness","placeholder":"Wittness","order":4,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Wittness","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:wittnesses,id"],"updateValidation":["required","exists:wittnesses,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1081,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1069":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":623,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"CaseID","label":"Case Id","placeholder":"Case Id","order":5,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1069,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1070":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":624,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"casename","label":"Casename","placeholder":"Casename","order":6,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1070,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1071":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":626,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"fileNumber","label":"File Number","placeholder":"File Number","order":7,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1071,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1072":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":627,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"address","label":"Address","placeholder":"Address","order":8,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1072,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1073":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":628,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"state","label":"State","placeholder":"State","order":9,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1073,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1074":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":629,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"location","label":"Location","placeholder":"Location","order":10,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1074,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1075":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":630,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"caseStartDate","label":"Case Start Date","placeholder":"Case Start Date","order":11,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"datetime","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","date"],"updateValidation":["required","date"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1075,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1076":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":140,"fieldId":631,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":12,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1076,"createdAt":"2024-02-14 13:16:28","updatedAt":"2024-02-14 13:18:26"},"item_1084":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":141,"fieldId":645,"relationshipId":170,"relationshipCollectionName":"caseHears","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"caseHearsForSelect","name":"case_hear_id","label":"Case Hear","placeholder":"Case Hear","order":0,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Case Hear","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:case_hears,id"],"updateValidation":["required","exists:case_hears,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1084,"createdAt":"2024-02-14 13:34:34","updatedAt":"2024-02-14 14:27:34"},"item_1082":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":141,"fieldId":643,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"date","label":"Date","placeholder":"Date","order":1,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"datetime","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","date"],"updateValidation":["required","date"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1082,"createdAt":"2024-02-14 13:34:34","updatedAt":"2024-02-14 13:35:01"},"item_1083":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":141,"fieldId":644,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"Description","label":"Description","placeholder":"Description","order":2,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1083,"createdAt":"2024-02-14 13:34:34","updatedAt":"2024-02-14 13:35:01"},"item_1088":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":142,"fieldId":641,"relationshipId":168,"relationshipCollectionName":"caseHears","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"caseHearsForSelect","name":"case_hear_id","label":"Case Hear","placeholder":"Case Hear","order":0,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Case Hear","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:case_hears,id"],"updateValidation":["required","exists:case_hears,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1088,"createdAt":"2024-02-14 13:34:43","updatedAt":"2024-02-14 14:27:40"},"item_1085":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":142,"fieldId":638,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"decisionDate","label":"Decision Date","placeholder":"Decision Date","order":1,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"datetime","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","date"],"updateValidation":["required","date"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1085,"createdAt":"2024-02-14 13:34:43","updatedAt":"2024-02-14 13:35:45"},"item_1086":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":142,"fieldId":639,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"Decisiontype","label":"Decisiontype","placeholder":"Decisiontype","order":2,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1086,"createdAt":"2024-02-14 13:34:43","updatedAt":"2024-02-14 13:35:45"},"item_1087":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":142,"fieldId":640,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"Description","label":"Description","placeholder":"Description","order":3,"cols":12,"colsMedium":12,"colsLarge":"6","readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1087,"createdAt":"2024-02-14 13:34:43","updatedAt":"2024-02-14 13:35:45"}},"manytomanyrelationships":{"manytomanyrelationships":{"count":0,"lastPrimaryKey":2,"index":{},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"morphrelationships":{"morphrelationships":{"count":0,"lastPrimaryKey":1,"index":{},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"projects":{"projects":{"count":6,"lastPrimaryKey":9,"index":{"2":{"hasMany":{"entities.projectId":[3,4,7,5,2],"cruds.projectId":[1,11,3,17,20,21,22],"comments.projectId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"entities.projectId":[9,11,13,14,19,12,20,21,16,17,15,18],"cruds.projectId":[24,25,26,28,29,30,31,32,33,34,35,36]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"entities.projectId":[22,31,29,23,32,33,24,30,26],"cruds.projectId":[42,43,44,46,52,53,54,55,56]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{"entities.projectId":[39,44,46,41,43,38,45,47,42,40,36,35,34],"cruds.projectId":[67,74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"entities.projectId":[59,62,53,63,61,58,52,54,57,56,60,55,64],"cruds.projectId":[120,121,129]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"entities.projectId":[71,70,66,67,72,69,68,65,74,73],"cruds.projectId":[130,131,132,133,134,135,136,137,138,139,140,141,142]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_9":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"CCMS","url":"http://localhost:8000","mode":"draft","folder":"C:\\Users\\bingx\\Desktop\\ccms","authModelId":65,"tenancyModelId":null,"settings":{"cssFramework":"bootstrap","theme":"default","uiTemplate":"laravel_ui","mutateDatesToCarbon":true,"authModel":null,"massAssignment":"fillable","validationMode":"array","routesMode":"resource","viewsFormMode":"blade","modelsFolder":"/Models","policiesFolder":"/Policies","servicesFolder":"/Services","requestsFolder":"/Http/Requests","controllersFolder":"/Http/Controllers","apiControllersFolder":"/Http/Controllers/Api","viewsFolder":"/resources/views/app","controllerNameMode":"singular","schemaZoom":0.6000000000000001,"schemaScrollTop":4400,"schemaScrollLeft":4400,"turbolinks":false,"modules":[]},"codeSettings":{"options":{"forceGeneration":false,"deleteRemovedModules":true},"base":{"migrations":true,"models":true,"policies":true,"factories":true,"seeders":true,"routes":true,"apiRoutes":true,"apiSanctumAuth":true},"cruds":{"130":{"crudId":130,"name":"Users","requests":true,"controller":true,"views":true,"tests":true,"api":true},"131":{"crudId":131,"name":"Courts","requests":true,"controller":true,"views":true,"tests":true,"api":true},"132":{"crudId":132,"name":"Attorneys","requests":true,"controller":true,"views":true,"tests":true,"api":true},"133":{"crudId":133,"name":"Judges","requests":true,"controller":true,"views":true,"tests":true,"api":true},"134":{"crudId":134,"name":"Court Attorneys","requests":true,"controller":true,"views":true,"tests":true,"api":true},"135":{"crudId":135,"name":"Court Judges","requests":true,"controller":true,"views":true,"tests":true,"api":true},"136":{"crudId":136,"name":"Bars","requests":true,"controller":true,"views":true,"tests":true,"api":true},"137":{"crudId":137,"name":"Case Charges","requests":true,"controller":true,"views":true,"tests":true,"api":true},"138":{"crudId":138,"name":"Court Bars","requests":true,"controller":true,"views":true,"tests":true,"api":true},"139":{"crudId":139,"name":"Wittnesses","requests":true,"controller":true,"views":true,"tests":true,"api":true},"140":{"crudId":140,"name":"Case Hears","requests":true,"controller":true,"views":true,"tests":true,"api":true},"141":{"crudId":141,"name":"Appointments","requests":true,"controller":true,"views":true,"tests":true,"api":true},"142":{"crudId":142,"name":"Decisions","requests":true,"controller":true,"views":true,"tests":true,"api":true}},"modules":{"permissionsApi":true,"permissions":true,"uiTemplate":true},"generationCommands":{"checkDependencies":true,"gitClone":true,"composerInstall":true,"storageLink":true,"npmInstall":true,"compileAssets":true},"runCommands":{"compileAssets":true,"migrate":true,"serve":true,"openBrowser":true}},"connection":{"type":"mysql","host":"127.0.0.1","port":3306,"database":"csdb","username":"root","password":""},"modules":["auth","permissions","multiTenancy"],"version":"1.3.3","laravelVersion":10,"repositoryUrl":null,"repositoryBranch":null,"files":{".env":{"deleteOnGeneration":true,"content":"APP_NAME=\"CCMS\"\nAPP_ENV=local\nAPP_KEY=base64:A1PORQXY81GV4X8YT18XuG+zamjVGFijtKu1xEv6YO8=\nAPP_DEBUG=true\nAPP_URL=http://localhost:8000\n\nLOG_CHANNEL=stack\nLOG_DEPRECATIONS_CHANNEL=null\nLOG_LEVEL=debug\n\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=csdb\nDB_USERNAME=root\nDB_PASSWORD=\"\"\n\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nFILESYSTEM_DISK=local\nQUEUE_CONNECTION=sync\nSESSION_DRIVER=file\nSESSION_LIFETIME=120\nMEMCACHED_HOST=127.0.0.1\n\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\nMAIL_MAILER=smtp\nMAIL_HOST=mailpit\nMAIL_PORT=1025\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nMAIL_FROM_ADDRESS=\"hello@example.com\"\nMAIL_FROM_NAME=\"${APP_NAME}\"\n\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=\nAWS_USE_PATH_STYLE_ENDPOINT=false\n\nPUSHER_APP_ID=\nPUSHER_APP_KEY=\nPUSHER_APP_SECRET=\nPUSHER_HOST=\nPUSHER_PORT=443\nPUSHER_SCHEME=https\nPUSHER_APP_CLUSTER=mt1\nVITE_APP_NAME=\"${APP_NAME}\"\nVITE_PUSHER_APP_KEY=\"${PUSHER_APP_KEY}\"\nVITE_PUSHER_HOST=\"${PUSHER_HOST}\"\nVITE_PUSHER_PORT=\"${PUSHER_PORT}\"\nVITE_PUSHER_SCHEME=\"${PUSHER_SCHEME}\"\nVITE_PUSHER_APP_CLUSTER=\"${PUSHER_APP_CLUSTER}\"\n","module":"base","path":".env"},"\\app\\Providers\\AuthServiceProvider.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\Facades\\Gate;\nuse Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\n\nclass AuthServiceProvider extends ServiceProvider\n{\n    /**\n     * The policy mappings for the application.\n     *\n     * @var array<class-string, class-string>\n     */\n    protected $policies = [\n        // 'App\\Models\\Model' => 'App\\Policies\\ModelPolicy',\n    ];\n\n    /**\n     * Register any authentication / authorization services.\n     */\n    public function boot(): void\n    {\n        // Automatically finding the Policies\n        Gate::guessPolicyNamesUsing(function ($modelClass) {\n            return 'App\\\\Policies\\\\' . class_basename($modelClass) . 'Policy';\n        });\n\n        $this->registerPolicies();\n\n        // Implicitly grant \"Super Admin\" role all permission checks using can()\n        Gate::before(function ($user, $ability) {\n            if ($user->isSuperAdmin()) {\n                return true;\n            }\n        });\n    }\n}\n","module":"base","path":"\\app\\Providers\\AuthServiceProvider.php"},"\\app\\Providers\\AppServiceProvider.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Pagination\\Paginator;\nuse Illuminate\\Support\\ServiceProvider;\n\nclass AppServiceProvider extends ServiceProvider\n{\n    /**\n     * Register any application services.\n     */\n    public function register(): void\n    {\n        Paginator::useBootstrap();\n    }\n\n    /**\n     * Bootstrap any application services.\n     */\n    public function boot(): void\n    {\n        //\n    }\n}\n","module":"base","path":"\\app\\Providers\\AppServiceProvider.php"},"\\config\\auth.php":{"deleteOnGeneration":true,"content":"<?php\n\nreturn [\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Defaults\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default authentication \"guard\" and password\n    | reset options for your application. You may change these defaults\n    | as required, but they're a perfect start for most applications.\n    |\n    */\n\n    'defaults' => [\n        'guard' => 'web',\n        'passwords' => 'users',\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Guards\n    |--------------------------------------------------------------------------\n    |\n    | Next, you may define every authentication guard for your application.\n    | Of course, a great default configuration has been defined for you\n    | here which uses session storage and the Eloquent user provider.\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | Supported: \"session\", \"token\"\n    |\n    */\n\n    'guards' => [\n        'web' => [\n            'driver' => 'session',\n            'provider' => 'users',\n        ],\n\n        'api' => [\n            'driver' => 'token',\n            'provider' => 'users',\n            'hash' => false,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | User Providers\n    |--------------------------------------------------------------------------\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | If you have multiple user tables or models you may configure multiple\n    | sources which represent each model / table. These sources may then\n    | be assigned to any extra authentication guards you have defined.\n    |\n    | Supported: \"database\", \"eloquent\"\n    |\n    */\n\n    'providers' => [\n        'users' => [\n            'driver' => 'eloquent',\n            'model' => App\\Models\\User::class,\n        ],\n\n        // 'users' => [\n        //     'driver' => 'database',\n        //     'table' => 'users',\n        // ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Resetting Passwords\n    |--------------------------------------------------------------------------\n    |\n    | You may specify multiple password reset configurations if you have more\n    | than one user table or model in the application and you want to have\n    | separate password reset settings based on the specific user types.\n    |\n    | The expire time is the number of minutes that the reset token should be\n    | considered valid. This security feature keeps tokens short-lived so\n    | they have less time to be guessed. You may change this as needed.\n    |\n    */\n\n    'passwords' => [\n        'users' => [\n            'provider' => 'users',\n            'table' => 'password_reset_tokens',\n            'expire' => 60,\n            'throttle' => 60,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Password Confirmation Timeout\n    |--------------------------------------------------------------------------\n    |\n    | Here you may define the amount of seconds before a password confirmation\n    | times out and the user is prompted to re-enter their password via the\n    | confirmation screen. By default, the timeout lasts for three hours.\n    |\n    */\n\n    'password_timeout' => 10800,\n];\n","module":"base","path":"\\config\\auth.php"},"\\app\\Http\\Controllers\\Controller.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Routing\\Controller as BaseController;\nuse Illuminate\\Foundation\\Validation\\ValidatesRequests;\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\n\nclass Controller extends BaseController\n{\n    use AuthorizesRequests, ValidatesRequests;\n}\n","module":"base","path":"\\app\\Http\\Controllers\\Controller.php"},"\\app\\Http\\Requests\\UserStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => ['required', 'unique:users,email', 'email'],\n            'password' => ['required'],\n            'description' => ['nullable', 'max:255', 'string'],\n            'roles' => 'array',\n        ];\n    }\n}\n","module":"crud:130","path":"\\app\\Http\\Requests\\UserStoreRequest.php"},"\\app\\Http\\Requests\\UserUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => [\n                'required',\n                Rule::unique('users', 'email')->ignore($this->user),\n                'email',\n            ],\n            'password' => ['nullable'],\n            'description' => ['nullable', 'max:255', 'string'],\n            'roles' => 'array',\n        ];\n    }\n}\n","module":"crud:130","path":"\\app\\Http\\Requests\\UserUpdateRequest.php"},"\\app\\Http\\Controllers\\UserController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Spatie\\Permission\\Models\\Role;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\UserStoreRequest;\nuse App\\Http\\Requests\\UserUpdateRequest;\n\nclass UserController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.users.index', compact('users', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', User::class);\n\n        $roles = Role::get();\n\n        return view('app.users.create', compact('roles'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(UserStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validated();\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        $user->syncRoles($request->roles);\n\n        return redirect()\n            ->route('users.edit', $user)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, User $user): View\n    {\n        $this->authorize('view', $user);\n\n        return view('app.users.show', compact('user'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, User $user): View\n    {\n        $this->authorize('update', $user);\n\n        $roles = Role::get();\n\n        return view('app.users.edit', compact('user', 'roles'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        UserUpdateRequest $request,\n        User $user\n    ): RedirectResponse {\n        $this->authorize('update', $user);\n\n        $validated = $request->validated();\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        $user->syncRoles($request->roles);\n\n        return redirect()\n            ->route('users.edit', $user)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, User $user): RedirectResponse\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return redirect()\n            ->route('users.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:130","path":"\\app\\Http\\Controllers\\UserController.php"},"\\tests\\Feature\\Controllers\\UserControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_users(): void\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('users.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.index')\n            ->assertViewHas('users');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_user(): void\n    {\n        $response = $this->get(route('users.create'));\n\n        $response->assertOk()->assertViewIs('app.users.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user(): void\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->post(route('users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['two_factor_confirmed_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $user = User::latest('id')->first();\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.show', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.show')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.edit', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.edit')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->put(route('users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['two_factor_confirmed_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->delete(route('users.destroy', $user));\n\n        $response->assertRedirect(route('users.index'));\n\n        $this->assertModelMissing($user);\n    }\n}\n","module":"crud:130","path":"\\tests\\Feature\\Controllers\\UserControllerTest.php"},"\\resources\\views\\app\\users\\create.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.users.create_title')\n            </h4>\n\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('users.store') }}\"\n                class=\"mt-4\"\n            >\n                @include('app.users.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a href=\"{{ route('users.index') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.create')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:130","path":"\\resources\\views\\app\\users\\create.blade.php"},"\\resources\\views\\app\\users\\edit.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.users.edit_title')\n            </h4>\n\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('users.update', $user) }}\"\n                class=\"mt-4\"\n            >\n                @include('app.users.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a href=\"{{ route('users.index') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <a href=\"{{ route('users.create') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-add text-primary\"></i>\n                        @lang('crud.common.create')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.update')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:130","path":"\\resources\\views\\app\\users\\edit.blade.php"},"\\resources\\views\\app\\users\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($user) @endphp\n\n<div class=\"row\">\n    <x-inputs.group class=\"col-sm-12\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $user->name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12\">\n        <x-inputs.email\n            name=\"email\"\n            label=\"Email\"\n            :value=\"old('email', ($editing ? $user->email : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Email\"\n            required\n        ></x-inputs.email>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12\">\n        <x-inputs.password\n            name=\"password\"\n            label=\"Password\"\n            maxlength=\"255\"\n            placeholder=\"Password\"\n            :required=\"!$editing\"\n        ></x-inputs.password>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            >{{ old('description', ($editing ? $user->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <div class=\"form-group col-sm-12 mt-4\">\n        <h4>Assign @lang('crud.roles.name')</h4>\n\n        @foreach ($roles as $role)\n        <div>\n            <x-inputs.checkbox\n                id=\"role{{ $role->id }}\"\n                name=\"roles[]\"\n                label=\"{{ ucfirst($role->name) }}\"\n                value=\"{{ $role->id }}\"\n                :checked=\"isset($user) ? $user->hasRole($role) : false\"\n                :add-hidden-value=\"false\"\n            ></x-inputs.checkbox>\n        </div>\n        @endforeach\n    </div>\n</div>\n","module":"crud:130","path":"\\resources\\views\\app\\users\\form-inputs.blade.php"},"\\resources\\views\\app\\users\\show.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.users.show_title')\n            </h4>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.users.inputs.name')</h5>\n                    <span>{{ $user->name ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.users.inputs.email')</h5>\n                    <span>{{ $user->email ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.users.inputs.description')</h5>\n                    <span>{{ $user->description ?? '-' }}</span>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.roles.name')</h5>\n                    <div>\n                        @forelse ($user->roles as $role)\n                        <div class=\"badge badge-primary\">{{ $role->name }}</div>\n                        <br />\n                        @empty - @endforelse\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <a href=\"{{ route('users.index') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-return-left\"></i>\n                    @lang('crud.common.back')\n                </a>\n\n                @can('create', App\\Models\\User::class)\n                <a href=\"{{ route('users.create') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:130","path":"\\resources\\views\\app\\users\\show.blade.php"},"\\resources\\views\\app\\users\\index.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"searchbar mt-0 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form>\n                    <div class=\"input-group\">\n                        <input\n                            id=\"indexSearch\"\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"{{ __('crud.common.search') }}\"\n                            value=\"{{ $search ?? '' }}\"\n                            class=\"form-control\"\n                            autocomplete=\"off\"\n                        />\n                        <div class=\"input-group-append\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                <i class=\"icon ion-md-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6 text-right\">\n                @can('create', App\\Models\\User::class)\n                <a href=\"{{ route('users.create') }}\" class=\"btn btn-primary\">\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div style=\"display: flex; justify-content: space-between;\">\n                <h4 class=\"card-title\">@lang('crud.users.index_title')</h4>\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-borderless table-hover\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left\">\n                                @lang('crud.users.inputs.name')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.users.inputs.email')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.users.inputs.description')\n                            </th>\n                            <th class=\"text-center\">\n                                @lang('crud.common.actions')\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        @forelse($users as $user)\n                        <tr>\n                            <td>{{ $user->name ?? '-' }}</td>\n                            <td>{{ $user->email ?? '-' }}</td>\n                            <td>{{ $user->description ?? '-' }}</td>\n                            <td class=\"text-center\" style=\"width: 134px;\">\n                                <div\n                                    role=\"group\"\n                                    aria-label=\"Row Actions\"\n                                    class=\"btn-group\"\n                                >\n                                    @can('update', $user)\n                                    <a href=\"{{ route('users.edit', $user) }}\">\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-create\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('view', $user)\n                                    <a href=\"{{ route('users.show', $user) }}\">\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-eye\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('delete', $user)\n                                    <form\n                                        action=\"{{ route('users.destroy', $user) }}\"\n                                        method=\"POST\"\n                                        onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                    >\n                                        @csrf @method('DELETE')\n                                        <button\n                                            type=\"submit\"\n                                            class=\"btn btn-light text-danger\"\n                                        >\n                                            <i class=\"icon ion-md-trash\"></i>\n                                        </button>\n                                    </form>\n                                    @endcan\n                                </div>\n                            </td>\n                        </tr>\n                        @empty\n                        <tr>\n                            <td colspan=\"4\">\n                                @lang('crud.common.no_items_found')\n                            </td>\n                        </tr>\n                        @endforelse\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"4\">{!! $users->render() !!}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:130","path":"\\resources\\views\\app\\users\\index.blade.php"},"\\app\\Http\\Requests\\CourtStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CourtStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'courtID' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'courtType' => ['required', 'max:255', 'string'],\n            'speciality' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:131","path":"\\app\\Http\\Requests\\CourtStoreRequest.php"},"\\app\\Http\\Requests\\CourtUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CourtUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'courtID' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'courtType' => ['required', 'max:255', 'string'],\n            'speciality' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:131","path":"\\app\\Http\\Requests\\CourtUpdateRequest.php"},"\\app\\Http\\Controllers\\CourtController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Court;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\CourtStoreRequest;\nuse App\\Http\\Requests\\CourtUpdateRequest;\n\nclass CourtController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Court::class);\n\n        $search = $request->get('search', '');\n\n        $courts = Court::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.courts.index', compact('courts', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Court::class);\n\n        return view('app.courts.create');\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(CourtStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Court::class);\n\n        $validated = $request->validated();\n\n        $court = Court::create($validated);\n\n        return redirect()\n            ->route('courts.edit', $court)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Court $court): View\n    {\n        $this->authorize('view', $court);\n\n        return view('app.courts.show', compact('court'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Court $court): View\n    {\n        $this->authorize('update', $court);\n\n        return view('app.courts.edit', compact('court'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        CourtUpdateRequest $request,\n        Court $court\n    ): RedirectResponse {\n        $this->authorize('update', $court);\n\n        $validated = $request->validated();\n\n        $court->update($validated);\n\n        return redirect()\n            ->route('courts.edit', $court)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, Court $court): RedirectResponse\n    {\n        $this->authorize('delete', $court);\n\n        $court->delete();\n\n        return redirect()\n            ->route('courts.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:131","path":"\\app\\Http\\Controllers\\CourtController.php"},"\\tests\\Feature\\Controllers\\CourtControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Court;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CourtControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_courts(): void\n    {\n        $courts = Court::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('courts.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.courts.index')\n            ->assertViewHas('courts');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_court(): void\n    {\n        $response = $this->get(route('courts.create'));\n\n        $response->assertOk()->assertViewIs('app.courts.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_court(): void\n    {\n        $data = Court::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('courts.store'), $data);\n\n        $this->assertDatabaseHas('courts', $data);\n\n        $court = Court::latest('id')->first();\n\n        $response->assertRedirect(route('courts.edit', $court));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_court(): void\n    {\n        $court = Court::factory()->create();\n\n        $response = $this->get(route('courts.show', $court));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.courts.show')\n            ->assertViewHas('court');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_court(): void\n    {\n        $court = Court::factory()->create();\n\n        $response = $this->get(route('courts.edit', $court));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.courts.edit')\n            ->assertViewHas('court');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_court(): void\n    {\n        $court = Court::factory()->create();\n\n        $data = [\n            'courtID' => $this->faker->text(255),\n            'name' => $this->faker->name(),\n            'courtType' => $this->faker->text(255),\n            'speciality' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->put(route('courts.update', $court), $data);\n\n        $data['id'] = $court->id;\n\n        $this->assertDatabaseHas('courts', $data);\n\n        $response->assertRedirect(route('courts.edit', $court));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_court(): void\n    {\n        $court = Court::factory()->create();\n\n        $response = $this->delete(route('courts.destroy', $court));\n\n        $response->assertRedirect(route('courts.index'));\n\n        $this->assertModelMissing($court);\n    }\n}\n","module":"crud:131","path":"\\tests\\Feature\\Controllers\\CourtControllerTest.php"},"\\resources\\views\\app\\courts\\create.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('courts.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.courts.create_title')\n            </h4>\n\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('courts.store') }}\"\n                class=\"mt-4\"\n            >\n                @include('app.courts.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a href=\"{{ route('courts.index') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.create')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:131","path":"\\resources\\views\\app\\courts\\create.blade.php"},"\\resources\\views\\app\\courts\\edit.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('courts.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.courts.edit_title')\n            </h4>\n\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('courts.update', $court) }}\"\n                class=\"mt-4\"\n            >\n                @include('app.courts.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a href=\"{{ route('courts.index') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <a\n                        href=\"{{ route('courts.create') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-add text-primary\"></i>\n                        @lang('crud.common.create')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.update')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n\n    @can('view-any', App\\Models\\Attorney::class)\n    <div class=\"card mt-4\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title w-100 mb-2\">Attorneys</h4>\n\n            <livewire:court-attorneys-detail :court=\"$court\" />\n        </div>\n    </div>\n    @endcan @can('view-any', App\\Models\\Judge::class)\n    <div class=\"card mt-4\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title w-100 mb-2\">Judges</h4>\n\n            <livewire:court-judges-detail :court=\"$court\" />\n        </div>\n    </div>\n    @endcan @can('view-any', App\\Models\\Bar::class)\n    <div class=\"card mt-4\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title w-100 mb-2\">Bars</h4>\n\n            <livewire:court-bars-detail :court=\"$court\" />\n        </div>\n    </div>\n    @endcan\n</div>\n@endsection\n","module":"crud:131","path":"\\resources\\views\\app\\courts\\edit.blade.php"},"\\resources\\views\\app\\courts\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($court) @endphp\n\n<div class=\"row\">\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"courtID\"\n            label=\"Court Id\"\n            :value=\"old('courtID', ($editing ? $court->courtID : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Court Id\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $court->name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"courtType\" label=\"Court Type\">\n            @php $selected = old('courtType', ($editing ? $court->courtType : '')) @endphp\n            <option value=\"Higher\" {{ $selected == 'Higher' ? 'selected' : '' }} >Higher</option>\n            <option value=\"First\" {{ $selected == 'First' ? 'selected' : '' }} >First</option>\n            <option value=\"Second\" {{ $selected == 'Second' ? 'selected' : '' }} >Second</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"speciality\" label=\"Speciality\">\n            @php $selected = old('speciality', ($editing ? $court->speciality : '')) @endphp\n            <option value=\"Judge\" {{ $selected == 'Judge' ? 'selected' : '' }} >Judge</option>\n            <option value=\"Lawyer\" {{ $selected == 'Lawyer' ? 'selected' : '' }} >Lawyer</option>\n            <option value=\"Attorney\" {{ $selected == 'Attorney' ? 'selected' : '' }} >Attorney</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $court->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:131","path":"\\resources\\views\\app\\courts\\form-inputs.blade.php"},"\\resources\\views\\app\\courts\\show.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('courts.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.courts.show_title')\n            </h4>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.courts.inputs.courtID')</h5>\n                    <span>{{ $court->courtID ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.courts.inputs.name')</h5>\n                    <span>{{ $court->name ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.courts.inputs.courtType')</h5>\n                    <span>{{ $court->courtType ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.courts.inputs.speciality')</h5>\n                    <span>{{ $court->speciality ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.courts.inputs.description')</h5>\n                    <span>{{ $court->description ?? '-' }}</span>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <a href=\"{{ route('courts.index') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-return-left\"></i>\n                    @lang('crud.common.back')\n                </a>\n\n                @can('create', App\\Models\\Court::class)\n                <a href=\"{{ route('courts.create') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    @can('view-any', App\\Models\\Attorney::class)\n    <div class=\"card mt-4\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title w-100 mb-2\">Attorneys</h4>\n\n            <livewire:court-attorneys-detail :court=\"$court\" />\n        </div>\n    </div>\n    @endcan\n</div>\n@endsection\n","module":"crud:131","path":"\\resources\\views\\app\\courts\\show.blade.php"},"\\resources\\views\\app\\courts\\index.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"searchbar mt-0 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form>\n                    <div class=\"input-group\">\n                        <input\n                            id=\"indexSearch\"\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"{{ __('crud.common.search') }}\"\n                            value=\"{{ $search ?? '' }}\"\n                            class=\"form-control\"\n                            autocomplete=\"off\"\n                        />\n                        <div class=\"input-group-append\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                <i class=\"icon ion-md-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6 text-right\">\n                @can('create', App\\Models\\Court::class)\n                <a href=\"{{ route('courts.create') }}\" class=\"btn btn-primary\">\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div style=\"display: flex; justify-content: space-between;\">\n                <h4 class=\"card-title\">@lang('crud.courts.index_title')</h4>\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-borderless table-hover\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left\">\n                                @lang('crud.courts.inputs.courtID')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.courts.inputs.name')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.courts.inputs.courtType')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.courts.inputs.speciality')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.courts.inputs.description')\n                            </th>\n                            <th class=\"text-center\">\n                                @lang('crud.common.actions')\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        @forelse($courts as $court)\n                        <tr>\n                            <td>{{ $court->courtID ?? '-' }}</td>\n                            <td>{{ $court->name ?? '-' }}</td>\n                            <td>{{ $court->courtType ?? '-' }}</td>\n                            <td>{{ $court->speciality ?? '-' }}</td>\n                            <td>{{ $court->description ?? '-' }}</td>\n                            <td class=\"text-center\" style=\"width: 134px;\">\n                                <div\n                                    role=\"group\"\n                                    aria-label=\"Row Actions\"\n                                    class=\"btn-group\"\n                                >\n                                    @can('update', $court)\n                                    <a\n                                        href=\"{{ route('courts.edit', $court) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-create\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('view', $court)\n                                    <a\n                                        href=\"{{ route('courts.show', $court) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-eye\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('delete', $court)\n                                    <form\n                                        action=\"{{ route('courts.destroy', $court) }}\"\n                                        method=\"POST\"\n                                        onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                    >\n                                        @csrf @method('DELETE')\n                                        <button\n                                            type=\"submit\"\n                                            class=\"btn btn-light text-danger\"\n                                        >\n                                            <i class=\"icon ion-md-trash\"></i>\n                                        </button>\n                                    </form>\n                                    @endcan\n                                </div>\n                            </td>\n                        </tr>\n                        @empty\n                        <tr>\n                            <td colspan=\"6\">\n                                @lang('crud.common.no_items_found')\n                            </td>\n                        </tr>\n                        @endforelse\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"6\">{!! $courts->render() !!}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:131","path":"\\resources\\views\\app\\courts\\index.blade.php"},"\\app\\Http\\Requests\\AttorneyStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass AttorneyStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'court_id' => ['required', 'exists:courts,id'],\n            'attorneyID' => ['required', 'max:255', 'string'],\n            'Name' => ['required', 'max:255', 'string'],\n            'Address' => ['required', 'max:255', 'string'],\n            'State' => ['required', 'max:255', 'string'],\n            'courtType' => ['required', 'max:255', 'string'],\n            'EmpType' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:132","path":"\\app\\Http\\Requests\\AttorneyStoreRequest.php"},"\\app\\Http\\Requests\\AttorneyUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass AttorneyUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'court_id' => ['required', 'exists:courts,id'],\n            'attorneyID' => ['required', 'max:255', 'string'],\n            'Name' => ['required', 'max:255', 'string'],\n            'Address' => ['required', 'max:255', 'string'],\n            'State' => ['required', 'max:255', 'string'],\n            'courtType' => ['required', 'max:255', 'string'],\n            'EmpType' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:132","path":"\\app\\Http\\Requests\\AttorneyUpdateRequest.php"},"\\app\\Http\\Controllers\\AttorneyController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Court;\nuse App\\Models\\Attorney;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\AttorneyStoreRequest;\nuse App\\Http\\Requests\\AttorneyUpdateRequest;\n\nclass AttorneyController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Attorney::class);\n\n        $search = $request->get('search', '');\n\n        $attorneys = Attorney::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.attorneys.index', compact('attorneys', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Attorney::class);\n\n        $courts = Court::pluck('name', 'id');\n\n        return view('app.attorneys.create', compact('courts'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(AttorneyStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Attorney::class);\n\n        $validated = $request->validated();\n\n        $attorney = Attorney::create($validated);\n\n        return redirect()\n            ->route('attorneys.edit', $attorney)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Attorney $attorney): View\n    {\n        $this->authorize('view', $attorney);\n\n        return view('app.attorneys.show', compact('attorney'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Attorney $attorney): View\n    {\n        $this->authorize('update', $attorney);\n\n        $courts = Court::pluck('name', 'id');\n\n        return view('app.attorneys.edit', compact('attorney', 'courts'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        AttorneyUpdateRequest $request,\n        Attorney $attorney\n    ): RedirectResponse {\n        $this->authorize('update', $attorney);\n\n        $validated = $request->validated();\n\n        $attorney->update($validated);\n\n        return redirect()\n            ->route('attorneys.edit', $attorney)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Attorney $attorney\n    ): RedirectResponse {\n        $this->authorize('delete', $attorney);\n\n        $attorney->delete();\n\n        return redirect()\n            ->route('attorneys.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:132","path":"\\app\\Http\\Controllers\\AttorneyController.php"},"\\tests\\Feature\\Controllers\\AttorneyControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Attorney;\n\nuse App\\Models\\Court;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AttorneyControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_attorneys(): void\n    {\n        $attorneys = Attorney::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('attorneys.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.attorneys.index')\n            ->assertViewHas('attorneys');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_attorney(): void\n    {\n        $response = $this->get(route('attorneys.create'));\n\n        $response->assertOk()->assertViewIs('app.attorneys.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_attorney(): void\n    {\n        $data = Attorney::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('attorneys.store'), $data);\n\n        $this->assertDatabaseHas('attorneys', $data);\n\n        $attorney = Attorney::latest('id')->first();\n\n        $response->assertRedirect(route('attorneys.edit', $attorney));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_attorney(): void\n    {\n        $attorney = Attorney::factory()->create();\n\n        $response = $this->get(route('attorneys.show', $attorney));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.attorneys.show')\n            ->assertViewHas('attorney');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_attorney(): void\n    {\n        $attorney = Attorney::factory()->create();\n\n        $response = $this->get(route('attorneys.edit', $attorney));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.attorneys.edit')\n            ->assertViewHas('attorney');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_attorney(): void\n    {\n        $attorney = Attorney::factory()->create();\n\n        $court = Court::factory()->create();\n\n        $data = [\n            'attorneyID' => $this->faker->text(255),\n            'Name' => $this->faker->name(),\n            'courtType' => $this->faker->text(255),\n            'Address' => $this->faker->address(),\n            'State' => $this->faker->state(),\n            'EmpType' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n            'court_id' => $court->id,\n        ];\n\n        $response = $this->put(route('attorneys.update', $attorney), $data);\n\n        $data['id'] = $attorney->id;\n\n        $this->assertDatabaseHas('attorneys', $data);\n\n        $response->assertRedirect(route('attorneys.edit', $attorney));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_attorney(): void\n    {\n        $attorney = Attorney::factory()->create();\n\n        $response = $this->delete(route('attorneys.destroy', $attorney));\n\n        $response->assertRedirect(route('attorneys.index'));\n\n        $this->assertModelMissing($attorney);\n    }\n}\n","module":"crud:132","path":"\\tests\\Feature\\Controllers\\AttorneyControllerTest.php"},"\\resources\\views\\app\\attorneys\\create.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('attorneys.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.attorneys.create_title')\n            </h4>\n\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('attorneys.store') }}\"\n                class=\"mt-4\"\n            >\n                @include('app.attorneys.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('attorneys.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.create')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:132","path":"\\resources\\views\\app\\attorneys\\create.blade.php"},"\\resources\\views\\app\\attorneys\\edit.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('attorneys.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.attorneys.edit_title')\n            </h4>\n\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('attorneys.update', $attorney) }}\"\n                class=\"mt-4\"\n            >\n                @include('app.attorneys.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('attorneys.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <a\n                        href=\"{{ route('attorneys.create') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-add text-primary\"></i>\n                        @lang('crud.common.create')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.update')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:132","path":"\\resources\\views\\app\\attorneys\\edit.blade.php"},"\\resources\\views\\app\\attorneys\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($attorney) @endphp\n\n<div class=\"row\">\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"court_id\" label=\"Court\" required>\n            @php $selected = old('court_id', ($editing ? $attorney->court_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Court</option>\n            @foreach($courts as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"attorneyID\"\n            label=\"Attorney Id\"\n            :value=\"old('attorneyID', ($editing ? $attorney->attorneyID : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Attorney Id\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"Name\"\n            label=\"Name\"\n            :value=\"old('Name', ($editing ? $attorney->Name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"Address\"\n            label=\"Address\"\n            :value=\"old('Address', ($editing ? $attorney->Address : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Address\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"State\"\n            label=\"State\"\n            :value=\"old('State', ($editing ? $attorney->State : ''))\"\n            maxlength=\"255\"\n            placeholder=\"State\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"courtType\" label=\"Court Type\">\n            @php $selected = old('courtType', ($editing ? $attorney->courtType : '')) @endphp\n            <option value=\"Higher\" {{ $selected == 'Higher' ? 'selected' : '' }} >Higher</option>\n            <option value=\"First\" {{ $selected == 'First' ? 'selected' : '' }} >First</option>\n            <option value=\"Second\" {{ $selected == 'Second' ? 'selected' : '' }} >Second</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"EmpType\" label=\"Emp Type\">\n            @php $selected = old('EmpType', ($editing ? $attorney->EmpType : '')) @endphp\n            <option value=\"Solder\" {{ $selected == 'Solder' ? 'selected' : '' }} >Solder</option>\n            <option value=\"Civil\" {{ $selected == 'Civil' ? 'selected' : '' }} >Civil</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $attorney->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:132","path":"\\resources\\views\\app\\attorneys\\form-inputs.blade.php"},"\\resources\\views\\app\\attorneys\\show.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('attorneys.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.attorneys.show_title')\n            </h4>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.attorneys.inputs.court_id')</h5>\n                    <span>{{ optional($attorney->court)->name ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.attorneys.inputs.attorneyID')</h5>\n                    <span>{{ $attorney->attorneyID ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.attorneys.inputs.Name')</h5>\n                    <span>{{ $attorney->Name ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.attorneys.inputs.Address')</h5>\n                    <span>{{ $attorney->Address ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.attorneys.inputs.State')</h5>\n                    <span>{{ $attorney->State ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.attorneys.inputs.courtType')</h5>\n                    <span>{{ $attorney->courtType ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.attorneys.inputs.EmpType')</h5>\n                    <span>{{ $attorney->EmpType ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.attorneys.inputs.description')</h5>\n                    <span>{{ $attorney->description ?? '-' }}</span>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <a href=\"{{ route('attorneys.index') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-return-left\"></i>\n                    @lang('crud.common.back')\n                </a>\n\n                @can('create', App\\Models\\Attorney::class)\n                <a href=\"{{ route('attorneys.create') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:132","path":"\\resources\\views\\app\\attorneys\\show.blade.php"},"\\resources\\views\\app\\attorneys\\index.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"searchbar mt-0 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form>\n                    <div class=\"input-group\">\n                        <input\n                            id=\"indexSearch\"\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"{{ __('crud.common.search') }}\"\n                            value=\"{{ $search ?? '' }}\"\n                            class=\"form-control\"\n                            autocomplete=\"off\"\n                        />\n                        <div class=\"input-group-append\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                <i class=\"icon ion-md-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6 text-right\">\n                @can('create', App\\Models\\Attorney::class)\n                <a\n                    href=\"{{ route('attorneys.create') }}\"\n                    class=\"btn btn-primary\"\n                >\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div style=\"display: flex; justify-content: space-between;\">\n                <h4 class=\"card-title\">@lang('crud.attorneys.index_title')</h4>\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-borderless table-hover\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left\">\n                                @lang('crud.attorneys.inputs.court_id')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.attorneys.inputs.attorneyID')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.attorneys.inputs.Name')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.attorneys.inputs.Address')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.attorneys.inputs.State')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.attorneys.inputs.courtType')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.attorneys.inputs.EmpType')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.attorneys.inputs.description')\n                            </th>\n                            <th class=\"text-center\">\n                                @lang('crud.common.actions')\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        @forelse($attorneys as $attorney)\n                        <tr>\n                            <td>\n                                {{ optional($attorney->court)->name ?? '-' }}\n                            </td>\n                            <td>{{ $attorney->attorneyID ?? '-' }}</td>\n                            <td>{{ $attorney->Name ?? '-' }}</td>\n                            <td>{{ $attorney->Address ?? '-' }}</td>\n                            <td>{{ $attorney->State ?? '-' }}</td>\n                            <td>{{ $attorney->courtType ?? '-' }}</td>\n                            <td>{{ $attorney->EmpType ?? '-' }}</td>\n                            <td>{{ $attorney->description ?? '-' }}</td>\n                            <td class=\"text-center\" style=\"width: 134px;\">\n                                <div\n                                    role=\"group\"\n                                    aria-label=\"Row Actions\"\n                                    class=\"btn-group\"\n                                >\n                                    @can('update', $attorney)\n                                    <a\n                                        href=\"{{ route('attorneys.edit', $attorney) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-create\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('view', $attorney)\n                                    <a\n                                        href=\"{{ route('attorneys.show', $attorney) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-eye\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('delete', $attorney)\n                                    <form\n                                        action=\"{{ route('attorneys.destroy', $attorney) }}\"\n                                        method=\"POST\"\n                                        onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                    >\n                                        @csrf @method('DELETE')\n                                        <button\n                                            type=\"submit\"\n                                            class=\"btn btn-light text-danger\"\n                                        >\n                                            <i class=\"icon ion-md-trash\"></i>\n                                        </button>\n                                    </form>\n                                    @endcan\n                                </div>\n                            </td>\n                        </tr>\n                        @empty\n                        <tr>\n                            <td colspan=\"9\">\n                                @lang('crud.common.no_items_found')\n                            </td>\n                        </tr>\n                        @endforelse\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"9\">{!! $attorneys->render() !!}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:132","path":"\\resources\\views\\app\\attorneys\\index.blade.php"},"\\app\\Http\\Requests\\JudgeStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass JudgeStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'court_id' => ['required', 'exists:courts,id'],\n            'judgeID' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'Address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'courtTyep' => ['required', 'max:255', 'string'],\n            'Emptype' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:133","path":"\\app\\Http\\Requests\\JudgeStoreRequest.php"},"\\app\\Http\\Requests\\JudgeUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass JudgeUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'court_id' => ['required', 'exists:courts,id'],\n            'judgeID' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'Address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'courtTyep' => ['required', 'max:255', 'string'],\n            'Emptype' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:133","path":"\\app\\Http\\Requests\\JudgeUpdateRequest.php"},"\\app\\Http\\Controllers\\JudgeController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Judge;\nuse App\\Models\\Court;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\JudgeStoreRequest;\nuse App\\Http\\Requests\\JudgeUpdateRequest;\n\nclass JudgeController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Judge::class);\n\n        $search = $request->get('search', '');\n\n        $judges = Judge::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.judges.index', compact('judges', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Judge::class);\n\n        $courts = Court::pluck('name', 'id');\n\n        return view('app.judges.create', compact('courts'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(JudgeStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Judge::class);\n\n        $validated = $request->validated();\n\n        $judge = Judge::create($validated);\n\n        return redirect()\n            ->route('judges.edit', $judge)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Judge $judge): View\n    {\n        $this->authorize('view', $judge);\n\n        return view('app.judges.show', compact('judge'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Judge $judge): View\n    {\n        $this->authorize('update', $judge);\n\n        $courts = Court::pluck('name', 'id');\n\n        return view('app.judges.edit', compact('judge', 'courts'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        JudgeUpdateRequest $request,\n        Judge $judge\n    ): RedirectResponse {\n        $this->authorize('update', $judge);\n\n        $validated = $request->validated();\n\n        $judge->update($validated);\n\n        return redirect()\n            ->route('judges.edit', $judge)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, Judge $judge): RedirectResponse\n    {\n        $this->authorize('delete', $judge);\n\n        $judge->delete();\n\n        return redirect()\n            ->route('judges.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:133","path":"\\app\\Http\\Controllers\\JudgeController.php"},"\\tests\\Feature\\Controllers\\JudgeControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Judge;\n\nuse App\\Models\\Court;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass JudgeControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_judges(): void\n    {\n        $judges = Judge::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('judges.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.judges.index')\n            ->assertViewHas('judges');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_judge(): void\n    {\n        $response = $this->get(route('judges.create'));\n\n        $response->assertOk()->assertViewIs('app.judges.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_judge(): void\n    {\n        $data = Judge::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('judges.store'), $data);\n\n        $this->assertDatabaseHas('judges', $data);\n\n        $judge = Judge::latest('id')->first();\n\n        $response->assertRedirect(route('judges.edit', $judge));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_judge(): void\n    {\n        $judge = Judge::factory()->create();\n\n        $response = $this->get(route('judges.show', $judge));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.judges.show')\n            ->assertViewHas('judge');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_judge(): void\n    {\n        $judge = Judge::factory()->create();\n\n        $response = $this->get(route('judges.edit', $judge));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.judges.edit')\n            ->assertViewHas('judge');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_judge(): void\n    {\n        $judge = Judge::factory()->create();\n\n        $court = Court::factory()->create();\n\n        $data = [\n            'judgeID' => $this->faker->text(255),\n            'name' => $this->faker->name(),\n            'courtTyep' => $this->faker->text(255),\n            'Address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'Emptype' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n            'court_id' => $court->id,\n        ];\n\n        $response = $this->put(route('judges.update', $judge), $data);\n\n        $data['id'] = $judge->id;\n\n        $this->assertDatabaseHas('judges', $data);\n\n        $response->assertRedirect(route('judges.edit', $judge));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_judge(): void\n    {\n        $judge = Judge::factory()->create();\n\n        $response = $this->delete(route('judges.destroy', $judge));\n\n        $response->assertRedirect(route('judges.index'));\n\n        $this->assertModelMissing($judge);\n    }\n}\n","module":"crud:133","path":"\\tests\\Feature\\Controllers\\JudgeControllerTest.php"},"\\resources\\views\\app\\judges\\create.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('judges.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.judges.create_title')\n            </h4>\n\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('judges.store') }}\"\n                class=\"mt-4\"\n            >\n                @include('app.judges.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a href=\"{{ route('judges.index') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.create')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:133","path":"\\resources\\views\\app\\judges\\create.blade.php"},"\\resources\\views\\app\\judges\\edit.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('judges.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.judges.edit_title')\n            </h4>\n\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('judges.update', $judge) }}\"\n                class=\"mt-4\"\n            >\n                @include('app.judges.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a href=\"{{ route('judges.index') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <a\n                        href=\"{{ route('judges.create') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-add text-primary\"></i>\n                        @lang('crud.common.create')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.update')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:133","path":"\\resources\\views\\app\\judges\\edit.blade.php"},"\\resources\\views\\app\\judges\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($judge) @endphp\n\n<div class=\"row\">\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"court_id\" label=\"Court\" required>\n            @php $selected = old('court_id', ($editing ? $judge->court_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Court</option>\n            @foreach($courts as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"judgeID\"\n            label=\"Judge Id\"\n            :value=\"old('judgeID', ($editing ? $judge->judgeID : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Judge Id\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $judge->name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"Address\"\n            label=\"Address\"\n            :value=\"old('Address', ($editing ? $judge->Address : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Address\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"state\"\n            label=\"State\"\n            :value=\"old('state', ($editing ? $judge->state : ''))\"\n            maxlength=\"255\"\n            placeholder=\"State\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"courtTyep\" label=\"Court Tyep\">\n            @php $selected = old('courtTyep', ($editing ? $judge->courtTyep : '')) @endphp\n            <option value=\"Higher\" {{ $selected == 'Higher' ? 'selected' : '' }} >Higher</option>\n            <option value=\"Lawyer\" {{ $selected == 'Lawyer' ? 'selected' : '' }} >Lawyer</option>\n            <option value=\"Attorney\" {{ $selected == 'Attorney' ? 'selected' : '' }} >Attorney</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"Emptype\" label=\"Emptype\">\n            @php $selected = old('Emptype', ($editing ? $judge->Emptype : '')) @endphp\n            <option value=\"Solder\" {{ $selected == 'Solder' ? 'selected' : '' }} >Solder</option>\n            <option value=\"Civil\" {{ $selected == 'Civil' ? 'selected' : '' }} >Civil</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $judge->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:133","path":"\\resources\\views\\app\\judges\\form-inputs.blade.php"},"\\resources\\views\\app\\judges\\show.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('judges.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.judges.show_title')\n            </h4>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.judges.inputs.court_id')</h5>\n                    <span>{{ optional($judge->court)->name ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.judges.inputs.judgeID')</h5>\n                    <span>{{ $judge->judgeID ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.judges.inputs.name')</h5>\n                    <span>{{ $judge->name ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.judges.inputs.Address')</h5>\n                    <span>{{ $judge->Address ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.judges.inputs.state')</h5>\n                    <span>{{ $judge->state ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.judges.inputs.courtTyep')</h5>\n                    <span>{{ $judge->courtTyep ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.judges.inputs.Emptype')</h5>\n                    <span>{{ $judge->Emptype ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.judges.inputs.description')</h5>\n                    <span>{{ $judge->description ?? '-' }}</span>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <a href=\"{{ route('judges.index') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-return-left\"></i>\n                    @lang('crud.common.back')\n                </a>\n\n                @can('create', App\\Models\\Judge::class)\n                <a href=\"{{ route('judges.create') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:133","path":"\\resources\\views\\app\\judges\\show.blade.php"},"\\resources\\views\\app\\judges\\index.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"searchbar mt-0 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form>\n                    <div class=\"input-group\">\n                        <input\n                            id=\"indexSearch\"\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"{{ __('crud.common.search') }}\"\n                            value=\"{{ $search ?? '' }}\"\n                            class=\"form-control\"\n                            autocomplete=\"off\"\n                        />\n                        <div class=\"input-group-append\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                <i class=\"icon ion-md-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6 text-right\">\n                @can('create', App\\Models\\Judge::class)\n                <a href=\"{{ route('judges.create') }}\" class=\"btn btn-primary\">\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div style=\"display: flex; justify-content: space-between;\">\n                <h4 class=\"card-title\">@lang('crud.judges.index_title')</h4>\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-borderless table-hover\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left\">\n                                @lang('crud.judges.inputs.court_id')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.judges.inputs.judgeID')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.judges.inputs.name')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.judges.inputs.Address')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.judges.inputs.state')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.judges.inputs.courtTyep')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.judges.inputs.Emptype')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.judges.inputs.description')\n                            </th>\n                            <th class=\"text-center\">\n                                @lang('crud.common.actions')\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        @forelse($judges as $judge)\n                        <tr>\n                            <td>{{ optional($judge->court)->name ?? '-' }}</td>\n                            <td>{{ $judge->judgeID ?? '-' }}</td>\n                            <td>{{ $judge->name ?? '-' }}</td>\n                            <td>{{ $judge->Address ?? '-' }}</td>\n                            <td>{{ $judge->state ?? '-' }}</td>\n                            <td>{{ $judge->courtTyep ?? '-' }}</td>\n                            <td>{{ $judge->Emptype ?? '-' }}</td>\n                            <td>{{ $judge->description ?? '-' }}</td>\n                            <td class=\"text-center\" style=\"width: 134px;\">\n                                <div\n                                    role=\"group\"\n                                    aria-label=\"Row Actions\"\n                                    class=\"btn-group\"\n                                >\n                                    @can('update', $judge)\n                                    <a\n                                        href=\"{{ route('judges.edit', $judge) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-create\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('view', $judge)\n                                    <a\n                                        href=\"{{ route('judges.show', $judge) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-eye\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('delete', $judge)\n                                    <form\n                                        action=\"{{ route('judges.destroy', $judge) }}\"\n                                        method=\"POST\"\n                                        onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                    >\n                                        @csrf @method('DELETE')\n                                        <button\n                                            type=\"submit\"\n                                            class=\"btn btn-light text-danger\"\n                                        >\n                                            <i class=\"icon ion-md-trash\"></i>\n                                        </button>\n                                    </form>\n                                    @endcan\n                                </div>\n                            </td>\n                        </tr>\n                        @empty\n                        <tr>\n                            <td colspan=\"9\">\n                                @lang('crud.common.no_items_found')\n                            </td>\n                        </tr>\n                        @endforelse\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"9\">{!! $judges->render() !!}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:133","path":"\\resources\\views\\app\\judges\\index.blade.php"},"\\app\\Http\\Requests\\BarStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass BarStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'court_id' => ['required', 'exists:courts,id'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'location' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:136","path":"\\app\\Http\\Requests\\BarStoreRequest.php"},"\\app\\Http\\Requests\\BarUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass BarUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'court_id' => ['required', 'exists:courts,id'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'location' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:136","path":"\\app\\Http\\Requests\\BarUpdateRequest.php"},"\\app\\Http\\Controllers\\BarController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Bar;\nuse App\\Models\\Court;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\BarStoreRequest;\nuse App\\Http\\Requests\\BarUpdateRequest;\n\nclass BarController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Bar::class);\n\n        $search = $request->get('search', '');\n\n        $bars = Bar::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.bars.index', compact('bars', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Bar::class);\n\n        $courts = Court::pluck('name', 'id');\n\n        return view('app.bars.create', compact('courts'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(BarStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Bar::class);\n\n        $validated = $request->validated();\n\n        $bar = Bar::create($validated);\n\n        return redirect()\n            ->route('bars.edit', $bar)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Bar $bar): View\n    {\n        $this->authorize('view', $bar);\n\n        return view('app.bars.show', compact('bar'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Bar $bar): View\n    {\n        $this->authorize('update', $bar);\n\n        $courts = Court::pluck('name', 'id');\n\n        return view('app.bars.edit', compact('bar', 'courts'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        BarUpdateRequest $request,\n        Bar $bar\n    ): RedirectResponse {\n        $this->authorize('update', $bar);\n\n        $validated = $request->validated();\n\n        $bar->update($validated);\n\n        return redirect()\n            ->route('bars.edit', $bar)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, Bar $bar): RedirectResponse\n    {\n        $this->authorize('delete', $bar);\n\n        $bar->delete();\n\n        return redirect()\n            ->route('bars.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:136","path":"\\app\\Http\\Controllers\\BarController.php"},"\\tests\\Feature\\Controllers\\BarControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\Bar;\nuse App\\Models\\User;\n\nuse App\\Models\\Court;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass BarControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_bars(): void\n    {\n        $bars = Bar::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('bars.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.bars.index')\n            ->assertViewHas('bars');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_bar(): void\n    {\n        $response = $this->get(route('bars.create'));\n\n        $response->assertOk()->assertViewIs('app.bars.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_bar(): void\n    {\n        $data = Bar::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('bars.store'), $data);\n\n        $this->assertDatabaseHas('bars', $data);\n\n        $bar = Bar::latest('id')->first();\n\n        $response->assertRedirect(route('bars.edit', $bar));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_bar(): void\n    {\n        $bar = Bar::factory()->create();\n\n        $response = $this->get(route('bars.show', $bar));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.bars.show')\n            ->assertViewHas('bar');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_bar(): void\n    {\n        $bar = Bar::factory()->create();\n\n        $response = $this->get(route('bars.edit', $bar));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.bars.edit')\n            ->assertViewHas('bar');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_bar(): void\n    {\n        $bar = Bar::factory()->create();\n\n        $court = Court::factory()->create();\n\n        $data = [\n            'address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'location' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n            'court_id' => $court->id,\n        ];\n\n        $response = $this->put(route('bars.update', $bar), $data);\n\n        $data['id'] = $bar->id;\n\n        $this->assertDatabaseHas('bars', $data);\n\n        $response->assertRedirect(route('bars.edit', $bar));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_bar(): void\n    {\n        $bar = Bar::factory()->create();\n\n        $response = $this->delete(route('bars.destroy', $bar));\n\n        $response->assertRedirect(route('bars.index'));\n\n        $this->assertModelMissing($bar);\n    }\n}\n","module":"crud:136","path":"\\tests\\Feature\\Controllers\\BarControllerTest.php"},"\\resources\\views\\app\\bars\\create.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('bars.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.bars.create_title')\n            </h4>\n\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('bars.store') }}\"\n                class=\"mt-4\"\n            >\n                @include('app.bars.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a href=\"{{ route('bars.index') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.create')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:136","path":"\\resources\\views\\app\\bars\\create.blade.php"},"\\resources\\views\\app\\bars\\edit.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('bars.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.bars.edit_title')\n            </h4>\n\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('bars.update', $bar) }}\"\n                class=\"mt-4\"\n            >\n                @include('app.bars.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a href=\"{{ route('bars.index') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <a href=\"{{ route('bars.create') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-add text-primary\"></i>\n                        @lang('crud.common.create')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.update')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:136","path":"\\resources\\views\\app\\bars\\edit.blade.php"},"\\resources\\views\\app\\bars\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($bar) @endphp\n\n<div class=\"row\">\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"court_id\" label=\"Court\" required>\n            @php $selected = old('court_id', ($editing ? $bar->court_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Court</option>\n            @foreach($courts as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"address\"\n            label=\"Address\"\n            :value=\"old('address', ($editing ? $bar->address : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Address\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"state\"\n            label=\"State\"\n            :value=\"old('state', ($editing ? $bar->state : ''))\"\n            maxlength=\"255\"\n            placeholder=\"State\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"location\"\n            label=\"Location\"\n            :value=\"old('location', ($editing ? $bar->location : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Location\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $bar->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:136","path":"\\resources\\views\\app\\bars\\form-inputs.blade.php"},"\\resources\\views\\app\\bars\\show.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('bars.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.bars.show_title')\n            </h4>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.bars.inputs.court_id')</h5>\n                    <span>{{ optional($bar->court)->name ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.bars.inputs.address')</h5>\n                    <span>{{ $bar->address ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.bars.inputs.state')</h5>\n                    <span>{{ $bar->state ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.bars.inputs.location')</h5>\n                    <span>{{ $bar->location ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.bars.inputs.description')</h5>\n                    <span>{{ $bar->description ?? '-' }}</span>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <a href=\"{{ route('bars.index') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-return-left\"></i>\n                    @lang('crud.common.back')\n                </a>\n\n                @can('create', App\\Models\\Bar::class)\n                <a href=\"{{ route('bars.create') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:136","path":"\\resources\\views\\app\\bars\\show.blade.php"},"\\resources\\views\\app\\bars\\index.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"searchbar mt-0 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form>\n                    <div class=\"input-group\">\n                        <input\n                            id=\"indexSearch\"\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"{{ __('crud.common.search') }}\"\n                            value=\"{{ $search ?? '' }}\"\n                            class=\"form-control\"\n                            autocomplete=\"off\"\n                        />\n                        <div class=\"input-group-append\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                <i class=\"icon ion-md-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6 text-right\">\n                @can('create', App\\Models\\Bar::class)\n                <a href=\"{{ route('bars.create') }}\" class=\"btn btn-primary\">\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div style=\"display: flex; justify-content: space-between;\">\n                <h4 class=\"card-title\">@lang('crud.bars.index_title')</h4>\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-borderless table-hover\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left\">\n                                @lang('crud.bars.inputs.court_id')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.bars.inputs.address')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.bars.inputs.state')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.bars.inputs.location')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.bars.inputs.description')\n                            </th>\n                            <th class=\"text-center\">\n                                @lang('crud.common.actions')\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        @forelse($bars as $bar)\n                        <tr>\n                            <td>{{ optional($bar->court)->name ?? '-' }}</td>\n                            <td>{{ $bar->address ?? '-' }}</td>\n                            <td>{{ $bar->state ?? '-' }}</td>\n                            <td>{{ $bar->location ?? '-' }}</td>\n                            <td>{{ $bar->description ?? '-' }}</td>\n                            <td class=\"text-center\" style=\"width: 134px;\">\n                                <div\n                                    role=\"group\"\n                                    aria-label=\"Row Actions\"\n                                    class=\"btn-group\"\n                                >\n                                    @can('update', $bar)\n                                    <a href=\"{{ route('bars.edit', $bar) }}\">\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-create\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('view', $bar)\n                                    <a href=\"{{ route('bars.show', $bar) }}\">\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-eye\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('delete', $bar)\n                                    <form\n                                        action=\"{{ route('bars.destroy', $bar) }}\"\n                                        method=\"POST\"\n                                        onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                    >\n                                        @csrf @method('DELETE')\n                                        <button\n                                            type=\"submit\"\n                                            class=\"btn btn-light text-danger\"\n                                        >\n                                            <i class=\"icon ion-md-trash\"></i>\n                                        </button>\n                                    </form>\n                                    @endcan\n                                </div>\n                            </td>\n                        </tr>\n                        @empty\n                        <tr>\n                            <td colspan=\"6\">\n                                @lang('crud.common.no_items_found')\n                            </td>\n                        </tr>\n                        @endforelse\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"6\">{!! $bars->render() !!}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:136","path":"\\resources\\views\\app\\bars\\index.blade.php"},"\\app\\Http\\Requests\\CaseChargeStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CaseChargeStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'deptName' => ['required', 'max:255', 'string'],\n            'mid' => ['required', 'max:255', 'string'],\n            'rank' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'crimeDescription' => ['required', 'max:255', 'string'],\n            'crimeDate' => ['required', 'date'],\n            'ChargeDate' => ['required', 'date'],\n        ];\n    }\n}\n","module":"crud:137","path":"\\app\\Http\\Requests\\CaseChargeStoreRequest.php"},"\\app\\Http\\Requests\\CaseChargeUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CaseChargeUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'deptName' => ['required', 'max:255', 'string'],\n            'mid' => ['required', 'max:255', 'string'],\n            'rank' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'crimeDescription' => ['required', 'max:255', 'string'],\n            'crimeDate' => ['required', 'date'],\n            'ChargeDate' => ['required', 'date'],\n        ];\n    }\n}\n","module":"crud:137","path":"\\app\\Http\\Requests\\CaseChargeUpdateRequest.php"},"\\app\\Http\\Controllers\\CaseChargeController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\View\\View;\nuse App\\Models\\CaseCharge;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\CaseChargeStoreRequest;\nuse App\\Http\\Requests\\CaseChargeUpdateRequest;\n\nclass CaseChargeController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', CaseCharge::class);\n\n        $search = $request->get('search', '');\n\n        $caseCharges = CaseCharge::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.case_charges.index', compact('caseCharges', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', CaseCharge::class);\n\n        return view('app.case_charges.create');\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(CaseChargeStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', CaseCharge::class);\n\n        $validated = $request->validated();\n\n        $caseCharge = CaseCharge::create($validated);\n\n        return redirect()\n            ->route('case-charges.edit', $caseCharge)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, CaseCharge $caseCharge): View\n    {\n        $this->authorize('view', $caseCharge);\n\n        return view('app.case_charges.show', compact('caseCharge'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, CaseCharge $caseCharge): View\n    {\n        $this->authorize('update', $caseCharge);\n\n        return view('app.case_charges.edit', compact('caseCharge'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        CaseChargeUpdateRequest $request,\n        CaseCharge $caseCharge\n    ): RedirectResponse {\n        $this->authorize('update', $caseCharge);\n\n        $validated = $request->validated();\n\n        $caseCharge->update($validated);\n\n        return redirect()\n            ->route('case-charges.edit', $caseCharge)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        CaseCharge $caseCharge\n    ): RedirectResponse {\n        $this->authorize('delete', $caseCharge);\n\n        $caseCharge->delete();\n\n        return redirect()\n            ->route('case-charges.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:137","path":"\\app\\Http\\Controllers\\CaseChargeController.php"},"\\tests\\Feature\\Controllers\\CaseChargeControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\CaseCharge;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CaseChargeControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_case_charges(): void\n    {\n        $caseCharges = CaseCharge::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('case-charges.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.case_charges.index')\n            ->assertViewHas('caseCharges');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_case_charge(): void\n    {\n        $response = $this->get(route('case-charges.create'));\n\n        $response->assertOk()->assertViewIs('app.case_charges.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_case_charge(): void\n    {\n        $data = CaseCharge::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('case-charges.store'), $data);\n\n        $this->assertDatabaseHas('case_charges', $data);\n\n        $caseCharge = CaseCharge::latest('id')->first();\n\n        $response->assertRedirect(route('case-charges.edit', $caseCharge));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_case_charge(): void\n    {\n        $caseCharge = CaseCharge::factory()->create();\n\n        $response = $this->get(route('case-charges.show', $caseCharge));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.case_charges.show')\n            ->assertViewHas('caseCharge');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_case_charge(): void\n    {\n        $caseCharge = CaseCharge::factory()->create();\n\n        $response = $this->get(route('case-charges.edit', $caseCharge));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.case_charges.edit')\n            ->assertViewHas('caseCharge');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_case_charge(): void\n    {\n        $caseCharge = CaseCharge::factory()->create();\n\n        $data = [\n            'deptName' => $this->faker->text(255),\n            'mid' => $this->faker->text(255),\n            'rank' => $this->faker->text(255),\n            'name' => $this->faker->name(),\n            'address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'crimeDescription' => $this->faker->text(),\n            'crimeDate' => $this->faker->dateTime(),\n            'ChargeDate' => $this->faker->dateTime(),\n        ];\n\n        $response = $this->put(\n            route('case-charges.update', $caseCharge),\n            $data\n        );\n\n        $data['id'] = $caseCharge->id;\n\n        $this->assertDatabaseHas('case_charges', $data);\n\n        $response->assertRedirect(route('case-charges.edit', $caseCharge));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_case_charge(): void\n    {\n        $caseCharge = CaseCharge::factory()->create();\n\n        $response = $this->delete(route('case-charges.destroy', $caseCharge));\n\n        $response->assertRedirect(route('case-charges.index'));\n\n        $this->assertModelMissing($caseCharge);\n    }\n}\n","module":"crud:137","path":"\\tests\\Feature\\Controllers\\CaseChargeControllerTest.php"},"\\resources\\views\\app\\case_charges\\create.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('case-charges.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.case_charges.create_title')\n            </h4>\n\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('case-charges.store') }}\"\n                class=\"mt-4\"\n            >\n                @include('app.case_charges.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('case-charges.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.create')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:137","path":"\\resources\\views\\app\\case_charges\\create.blade.php"},"\\resources\\views\\app\\case_charges\\edit.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('case-charges.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.case_charges.edit_title')\n            </h4>\n\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('case-charges.update', $caseCharge) }}\"\n                class=\"mt-4\"\n            >\n                @include('app.case_charges.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('case-charges.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <a\n                        href=\"{{ route('case-charges.create') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-add text-primary\"></i>\n                        @lang('crud.common.create')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.update')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:137","path":"\\resources\\views\\app\\case_charges\\edit.blade.php"},"\\resources\\views\\app\\case_charges\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($caseCharge) @endphp\n\n<div class=\"row\">\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"deptName\"\n            label=\"Dept Name\"\n            :value=\"old('deptName', ($editing ? $caseCharge->deptName : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Dept Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"mid\"\n            label=\"Mid\"\n            :value=\"old('mid', ($editing ? $caseCharge->mid : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Mid\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"rank\"\n            label=\"Rank\"\n            :value=\"old('rank', ($editing ? $caseCharge->rank : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Rank\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $caseCharge->name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"address\"\n            label=\"Address\"\n            :value=\"old('address', ($editing ? $caseCharge->address : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Address\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"state\"\n            label=\"State\"\n            :value=\"old('state', ($editing ? $caseCharge->state : ''))\"\n            maxlength=\"255\"\n            placeholder=\"State\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.textarea\n            name=\"crimeDescription\"\n            label=\"Crime Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('crimeDescription', ($editing ?\n            $caseCharge->crimeDescription : '')) }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.datetime\n            name=\"crimeDate\"\n            label=\"Crime Date\"\n            value=\"{{ old('crimeDate', ($editing ? optional($caseCharge->crimeDate)->format('Y-m-d\\TH:i:s') : '')) }}\"\n            max=\"255\"\n            required\n        ></x-inputs.datetime>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.datetime\n            name=\"ChargeDate\"\n            label=\"Charge Date\"\n            value=\"{{ old('ChargeDate', ($editing ? optional($caseCharge->ChargeDate)->format('Y-m-d\\TH:i:s') : '')) }}\"\n            max=\"255\"\n            required\n        ></x-inputs.datetime>\n    </x-inputs.group>\n</div>\n","module":"crud:137","path":"\\resources\\views\\app\\case_charges\\form-inputs.blade.php"},"\\resources\\views\\app\\case_charges\\show.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('case-charges.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.case_charges.show_title')\n            </h4>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_charges.inputs.deptName')</h5>\n                    <span>{{ $caseCharge->deptName ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_charges.inputs.mid')</h5>\n                    <span>{{ $caseCharge->mid ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_charges.inputs.rank')</h5>\n                    <span>{{ $caseCharge->rank ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_charges.inputs.name')</h5>\n                    <span>{{ $caseCharge->name ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_charges.inputs.address')</h5>\n                    <span>{{ $caseCharge->address ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_charges.inputs.state')</h5>\n                    <span>{{ $caseCharge->state ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_charges.inputs.crimeDescription')</h5>\n                    <span>{{ $caseCharge->crimeDescription ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_charges.inputs.crimeDate')</h5>\n                    <span>{{ $caseCharge->crimeDate ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_charges.inputs.ChargeDate')</h5>\n                    <span>{{ $caseCharge->ChargeDate ?? '-' }}</span>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <a\n                    href=\"{{ route('case-charges.index') }}\"\n                    class=\"btn btn-light\"\n                >\n                    <i class=\"icon ion-md-return-left\"></i>\n                    @lang('crud.common.back')\n                </a>\n\n                @can('create', App\\Models\\CaseCharge::class)\n                <a\n                    href=\"{{ route('case-charges.create') }}\"\n                    class=\"btn btn-light\"\n                >\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:137","path":"\\resources\\views\\app\\case_charges\\show.blade.php"},"\\resources\\views\\app\\case_charges\\index.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"searchbar mt-0 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form>\n                    <div class=\"input-group\">\n                        <input\n                            id=\"indexSearch\"\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"{{ __('crud.common.search') }}\"\n                            value=\"{{ $search ?? '' }}\"\n                            class=\"form-control\"\n                            autocomplete=\"off\"\n                        />\n                        <div class=\"input-group-append\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                <i class=\"icon ion-md-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6 text-right\">\n                @can('create', App\\Models\\CaseCharge::class)\n                <a\n                    href=\"{{ route('case-charges.create') }}\"\n                    class=\"btn btn-primary\"\n                >\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div style=\"display: flex; justify-content: space-between;\">\n                <h4 class=\"card-title\">\n                    @lang('crud.case_charges.index_title')\n                </h4>\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-borderless table-hover\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left\">\n                                @lang('crud.case_charges.inputs.deptName')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_charges.inputs.mid')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_charges.inputs.rank')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_charges.inputs.name')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_charges.inputs.address')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_charges.inputs.state')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_charges.inputs.crimeDescription')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_charges.inputs.crimeDate')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_charges.inputs.ChargeDate')\n                            </th>\n                            <th class=\"text-center\">\n                                @lang('crud.common.actions')\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        @forelse($caseCharges as $caseCharge)\n                        <tr>\n                            <td>{{ $caseCharge->deptName ?? '-' }}</td>\n                            <td>{{ $caseCharge->mid ?? '-' }}</td>\n                            <td>{{ $caseCharge->rank ?? '-' }}</td>\n                            <td>{{ $caseCharge->name ?? '-' }}</td>\n                            <td>{{ $caseCharge->address ?? '-' }}</td>\n                            <td>{{ $caseCharge->state ?? '-' }}</td>\n                            <td>{{ $caseCharge->crimeDescription ?? '-' }}</td>\n                            <td>{{ $caseCharge->crimeDate ?? '-' }}</td>\n                            <td>{{ $caseCharge->ChargeDate ?? '-' }}</td>\n                            <td class=\"text-center\" style=\"width: 134px;\">\n                                <div\n                                    role=\"group\"\n                                    aria-label=\"Row Actions\"\n                                    class=\"btn-group\"\n                                >\n                                    @can('update', $caseCharge)\n                                    <a\n                                        href=\"{{ route('case-charges.edit', $caseCharge) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-create\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('view', $caseCharge)\n                                    <a\n                                        href=\"{{ route('case-charges.show', $caseCharge) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-eye\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('delete', $caseCharge)\n                                    <form\n                                        action=\"{{ route('case-charges.destroy', $caseCharge) }}\"\n                                        method=\"POST\"\n                                        onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                    >\n                                        @csrf @method('DELETE')\n                                        <button\n                                            type=\"submit\"\n                                            class=\"btn btn-light text-danger\"\n                                        >\n                                            <i class=\"icon ion-md-trash\"></i>\n                                        </button>\n                                    </form>\n                                    @endcan\n                                </div>\n                            </td>\n                        </tr>\n                        @empty\n                        <tr>\n                            <td colspan=\"10\">\n                                @lang('crud.common.no_items_found')\n                            </td>\n                        </tr>\n                        @endforelse\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"10\">{!! $caseCharges->render() !!}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:137","path":"\\resources\\views\\app\\case_charges\\index.blade.php"},"\\app\\Http\\Requests\\WittnessStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass WittnessStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'wittnessID' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'wittnessType' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:139","path":"\\app\\Http\\Requests\\WittnessStoreRequest.php"},"\\app\\Http\\Requests\\WittnessUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass WittnessUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'wittnessID' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'wittnessType' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:139","path":"\\app\\Http\\Requests\\WittnessUpdateRequest.php"},"\\app\\Http\\Controllers\\WittnessController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Wittness;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\WittnessStoreRequest;\nuse App\\Http\\Requests\\WittnessUpdateRequest;\n\nclass WittnessController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Wittness::class);\n\n        $search = $request->get('search', '');\n\n        $wittnesses = Wittness::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.wittnesses.index', compact('wittnesses', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Wittness::class);\n\n        return view('app.wittnesses.create');\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(WittnessStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Wittness::class);\n\n        $validated = $request->validated();\n\n        $wittness = Wittness::create($validated);\n\n        return redirect()\n            ->route('wittnesses.edit', $wittness)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Wittness $wittness): View\n    {\n        $this->authorize('view', $wittness);\n\n        return view('app.wittnesses.show', compact('wittness'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Wittness $wittness): View\n    {\n        $this->authorize('update', $wittness);\n\n        return view('app.wittnesses.edit', compact('wittness'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        WittnessUpdateRequest $request,\n        Wittness $wittness\n    ): RedirectResponse {\n        $this->authorize('update', $wittness);\n\n        $validated = $request->validated();\n\n        $wittness->update($validated);\n\n        return redirect()\n            ->route('wittnesses.edit', $wittness)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Wittness $wittness\n    ): RedirectResponse {\n        $this->authorize('delete', $wittness);\n\n        $wittness->delete();\n\n        return redirect()\n            ->route('wittnesses.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:139","path":"\\app\\Http\\Controllers\\WittnessController.php"},"\\tests\\Feature\\Controllers\\WittnessControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Wittness;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass WittnessControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_wittnesses(): void\n    {\n        $wittnesses = Wittness::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('wittnesses.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.wittnesses.index')\n            ->assertViewHas('wittnesses');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_wittness(): void\n    {\n        $response = $this->get(route('wittnesses.create'));\n\n        $response->assertOk()->assertViewIs('app.wittnesses.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_wittness(): void\n    {\n        $data = Wittness::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('wittnesses.store'), $data);\n\n        $this->assertDatabaseHas('wittnesses', $data);\n\n        $wittness = Wittness::latest('id')->first();\n\n        $response->assertRedirect(route('wittnesses.edit', $wittness));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_wittness(): void\n    {\n        $wittness = Wittness::factory()->create();\n\n        $response = $this->get(route('wittnesses.show', $wittness));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.wittnesses.show')\n            ->assertViewHas('wittness');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_wittness(): void\n    {\n        $wittness = Wittness::factory()->create();\n\n        $response = $this->get(route('wittnesses.edit', $wittness));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.wittnesses.edit')\n            ->assertViewHas('wittness');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_wittness(): void\n    {\n        $wittness = Wittness::factory()->create();\n\n        $data = [\n            'wittnessID' => $this->faker->text(255),\n            'name' => $this->faker->name(),\n            'address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'wittnessType' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->put(route('wittnesses.update', $wittness), $data);\n\n        $data['id'] = $wittness->id;\n\n        $this->assertDatabaseHas('wittnesses', $data);\n\n        $response->assertRedirect(route('wittnesses.edit', $wittness));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_wittness(): void\n    {\n        $wittness = Wittness::factory()->create();\n\n        $response = $this->delete(route('wittnesses.destroy', $wittness));\n\n        $response->assertRedirect(route('wittnesses.index'));\n\n        $this->assertModelMissing($wittness);\n    }\n}\n","module":"crud:139","path":"\\tests\\Feature\\Controllers\\WittnessControllerTest.php"},"\\resources\\views\\app\\wittnesses\\create.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('wittnesses.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.wittnesses.create_title')\n            </h4>\n\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('wittnesses.store') }}\"\n                class=\"mt-4\"\n            >\n                @include('app.wittnesses.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('wittnesses.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.create')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:139","path":"\\resources\\views\\app\\wittnesses\\create.blade.php"},"\\resources\\views\\app\\wittnesses\\edit.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('wittnesses.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.wittnesses.edit_title')\n            </h4>\n\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('wittnesses.update', $wittness) }}\"\n                class=\"mt-4\"\n            >\n                @include('app.wittnesses.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('wittnesses.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <a\n                        href=\"{{ route('wittnesses.create') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-add text-primary\"></i>\n                        @lang('crud.common.create')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.update')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:139","path":"\\resources\\views\\app\\wittnesses\\edit.blade.php"},"\\resources\\views\\app\\wittnesses\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($wittness) @endphp\n\n<div class=\"row\">\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"wittnessID\"\n            label=\"Wittness Id\"\n            :value=\"old('wittnessID', ($editing ? $wittness->wittnessID : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Wittness Id\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $wittness->name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"address\"\n            label=\"Address\"\n            :value=\"old('address', ($editing ? $wittness->address : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Address\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"state\"\n            label=\"State\"\n            :value=\"old('state', ($editing ? $wittness->state : ''))\"\n            maxlength=\"255\"\n            placeholder=\"State\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"wittnessType\" label=\"Wittness Type\">\n            @php $selected = old('wittnessType', ($editing ? $wittness->wittnessType : '')) @endphp\n            <option value=\"Attorney\" {{ $selected == 'Attorney' ? 'selected' : '' }} >Attorney</option>\n            <option value=\"Accused\" {{ $selected == 'Accused' ? 'selected' : '' }} >Accused</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $wittness->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:139","path":"\\resources\\views\\app\\wittnesses\\form-inputs.blade.php"},"\\resources\\views\\app\\wittnesses\\show.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('wittnesses.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.wittnesses.show_title')\n            </h4>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.wittnesses.inputs.wittnessID')</h5>\n                    <span>{{ $wittness->wittnessID ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.wittnesses.inputs.name')</h5>\n                    <span>{{ $wittness->name ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.wittnesses.inputs.address')</h5>\n                    <span>{{ $wittness->address ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.wittnesses.inputs.state')</h5>\n                    <span>{{ $wittness->state ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.wittnesses.inputs.wittnessType')</h5>\n                    <span>{{ $wittness->wittnessType ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.wittnesses.inputs.description')</h5>\n                    <span>{{ $wittness->description ?? '-' }}</span>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <a href=\"{{ route('wittnesses.index') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-return-left\"></i>\n                    @lang('crud.common.back')\n                </a>\n\n                @can('create', App\\Models\\Wittness::class)\n                <a\n                    href=\"{{ route('wittnesses.create') }}\"\n                    class=\"btn btn-light\"\n                >\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:139","path":"\\resources\\views\\app\\wittnesses\\show.blade.php"},"\\resources\\views\\app\\wittnesses\\index.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"searchbar mt-0 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form>\n                    <div class=\"input-group\">\n                        <input\n                            id=\"indexSearch\"\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"{{ __('crud.common.search') }}\"\n                            value=\"{{ $search ?? '' }}\"\n                            class=\"form-control\"\n                            autocomplete=\"off\"\n                        />\n                        <div class=\"input-group-append\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                <i class=\"icon ion-md-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6 text-right\">\n                @can('create', App\\Models\\Wittness::class)\n                <a\n                    href=\"{{ route('wittnesses.create') }}\"\n                    class=\"btn btn-primary\"\n                >\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div style=\"display: flex; justify-content: space-between;\">\n                <h4 class=\"card-title\">@lang('crud.wittnesses.index_title')</h4>\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-borderless table-hover\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left\">\n                                @lang('crud.wittnesses.inputs.wittnessID')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.wittnesses.inputs.name')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.wittnesses.inputs.address')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.wittnesses.inputs.state')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.wittnesses.inputs.wittnessType')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.wittnesses.inputs.description')\n                            </th>\n                            <th class=\"text-center\">\n                                @lang('crud.common.actions')\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        @forelse($wittnesses as $wittness)\n                        <tr>\n                            <td>{{ $wittness->wittnessID ?? '-' }}</td>\n                            <td>{{ $wittness->name ?? '-' }}</td>\n                            <td>{{ $wittness->address ?? '-' }}</td>\n                            <td>{{ $wittness->state ?? '-' }}</td>\n                            <td>{{ $wittness->wittnessType ?? '-' }}</td>\n                            <td>{{ $wittness->description ?? '-' }}</td>\n                            <td class=\"text-center\" style=\"width: 134px;\">\n                                <div\n                                    role=\"group\"\n                                    aria-label=\"Row Actions\"\n                                    class=\"btn-group\"\n                                >\n                                    @can('update', $wittness)\n                                    <a\n                                        href=\"{{ route('wittnesses.edit', $wittness) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-create\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('view', $wittness)\n                                    <a\n                                        href=\"{{ route('wittnesses.show', $wittness) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-eye\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('delete', $wittness)\n                                    <form\n                                        action=\"{{ route('wittnesses.destroy', $wittness) }}\"\n                                        method=\"POST\"\n                                        onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                    >\n                                        @csrf @method('DELETE')\n                                        <button\n                                            type=\"submit\"\n                                            class=\"btn btn-light text-danger\"\n                                        >\n                                            <i class=\"icon ion-md-trash\"></i>\n                                        </button>\n                                    </form>\n                                    @endcan\n                                </div>\n                            </td>\n                        </tr>\n                        @empty\n                        <tr>\n                            <td colspan=\"7\">\n                                @lang('crud.common.no_items_found')\n                            </td>\n                        </tr>\n                        @endforelse\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"7\">{!! $wittnesses->render() !!}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:139","path":"\\resources\\views\\app\\wittnesses\\index.blade.php"},"\\app\\Http\\Requests\\CaseHearStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CaseHearStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'court_id' => ['required', 'exists:courts,id'],\n            'judge_id' => ['required', 'exists:judges,id'],\n            'attorney_id' => ['required', 'exists:attorneys,id'],\n            'case_charge_id' => ['required', 'exists:case_charges,id'],\n            'wittness_id' => ['required', 'exists:wittnesses,id'],\n            'CaseID' => ['required', 'max:255', 'string'],\n            'casename' => ['required', 'max:255', 'string'],\n            'fileNumber' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'location' => ['required', 'max:255', 'string'],\n            'caseStartDate' => ['required', 'date'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:140","path":"\\app\\Http\\Requests\\CaseHearStoreRequest.php"},"\\app\\Http\\Requests\\CaseHearUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CaseHearUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'court_id' => ['required', 'exists:courts,id'],\n            'judge_id' => ['required', 'exists:judges,id'],\n            'attorney_id' => ['required', 'exists:attorneys,id'],\n            'case_charge_id' => ['required', 'exists:case_charges,id'],\n            'wittness_id' => ['required', 'exists:wittnesses,id'],\n            'CaseID' => ['required', 'max:255', 'string'],\n            'casename' => ['required', 'max:255', 'string'],\n            'fileNumber' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'location' => ['required', 'max:255', 'string'],\n            'caseStartDate' => ['required', 'date'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:140","path":"\\app\\Http\\Requests\\CaseHearUpdateRequest.php"},"\\app\\Http\\Controllers\\CaseHearController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Court;\nuse App\\Models\\Judge;\nuse App\\Models\\CaseHear;\nuse App\\Models\\Attorney;\nuse App\\Models\\Wittness;\nuse Illuminate\\View\\View;\nuse App\\Models\\CaseCharge;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\CaseHearStoreRequest;\nuse App\\Http\\Requests\\CaseHearUpdateRequest;\n\nclass CaseHearController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', CaseHear::class);\n\n        $search = $request->get('search', '');\n\n        $caseHears = CaseHear::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.case_hears.index', compact('caseHears', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', CaseHear::class);\n\n        $courts = Court::pluck('name', 'id');\n        $judges = Judge::pluck('name', 'id');\n        $attorneys = Attorney::pluck('attorneyID', 'id');\n        $caseCharges = CaseCharge::pluck('name', 'id');\n        $wittnesses = Wittness::pluck('name', 'id');\n\n        return view(\n            'app.case_hears.create',\n            compact(\n                'courts',\n                'judges',\n                'attorneys',\n                'caseCharges',\n                'wittnesses'\n            )\n        );\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(CaseHearStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', CaseHear::class);\n\n        $validated = $request->validated();\n\n        $caseHear = CaseHear::create($validated);\n\n        return redirect()\n            ->route('case-hears.edit', $caseHear)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, CaseHear $caseHear): View\n    {\n        $this->authorize('view', $caseHear);\n\n        return view('app.case_hears.show', compact('caseHear'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, CaseHear $caseHear): View\n    {\n        $this->authorize('update', $caseHear);\n\n        $courts = Court::pluck('name', 'id');\n        $judges = Judge::pluck('name', 'id');\n        $attorneys = Attorney::pluck('attorneyID', 'id');\n        $caseCharges = CaseCharge::pluck('name', 'id');\n        $wittnesses = Wittness::pluck('name', 'id');\n\n        return view(\n            'app.case_hears.edit',\n            compact(\n                'caseHear',\n                'courts',\n                'judges',\n                'attorneys',\n                'caseCharges',\n                'wittnesses'\n            )\n        );\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        CaseHearUpdateRequest $request,\n        CaseHear $caseHear\n    ): RedirectResponse {\n        $this->authorize('update', $caseHear);\n\n        $validated = $request->validated();\n\n        $caseHear->update($validated);\n\n        return redirect()\n            ->route('case-hears.edit', $caseHear)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        CaseHear $caseHear\n    ): RedirectResponse {\n        $this->authorize('delete', $caseHear);\n\n        $caseHear->delete();\n\n        return redirect()\n            ->route('case-hears.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:140","path":"\\app\\Http\\Controllers\\CaseHearController.php"},"\\tests\\Feature\\Controllers\\CaseHearControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\CaseHear;\n\nuse App\\Models\\Court;\nuse App\\Models\\Judge;\nuse App\\Models\\Attorney;\nuse App\\Models\\Wittness;\nuse App\\Models\\CaseCharge;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CaseHearControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_case_hears(): void\n    {\n        $caseHears = CaseHear::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('case-hears.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.case_hears.index')\n            ->assertViewHas('caseHears');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_case_hear(): void\n    {\n        $response = $this->get(route('case-hears.create'));\n\n        $response->assertOk()->assertViewIs('app.case_hears.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_case_hear(): void\n    {\n        $data = CaseHear::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('case-hears.store'), $data);\n\n        $this->assertDatabaseHas('case_hears', $data);\n\n        $caseHear = CaseHear::latest('id')->first();\n\n        $response->assertRedirect(route('case-hears.edit', $caseHear));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_case_hear(): void\n    {\n        $caseHear = CaseHear::factory()->create();\n\n        $response = $this->get(route('case-hears.show', $caseHear));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.case_hears.show')\n            ->assertViewHas('caseHear');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_case_hear(): void\n    {\n        $caseHear = CaseHear::factory()->create();\n\n        $response = $this->get(route('case-hears.edit', $caseHear));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.case_hears.edit')\n            ->assertViewHas('caseHear');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_case_hear(): void\n    {\n        $caseHear = CaseHear::factory()->create();\n\n        $court = Court::factory()->create();\n        $judge = Judge::factory()->create();\n        $attorney = Attorney::factory()->create();\n        $caseCharge = CaseCharge::factory()->create();\n        $wittness = Wittness::factory()->create();\n\n        $data = [\n            'CaseID' => $this->faker->text(255),\n            'casename' => $this->faker->text(255),\n            'fileNumber' => $this->faker->text(255),\n            'address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'location' => $this->faker->text(255),\n            'caseStartDate' => $this->faker->dateTime(),\n            'description' => $this->faker->sentence(15),\n            'court_id' => $court->id,\n            'judge_id' => $judge->id,\n            'attorney_id' => $attorney->id,\n            'case_charge_id' => $caseCharge->id,\n            'wittness_id' => $wittness->id,\n        ];\n\n        $response = $this->put(route('case-hears.update', $caseHear), $data);\n\n        $data['id'] = $caseHear->id;\n\n        $this->assertDatabaseHas('case_hears', $data);\n\n        $response->assertRedirect(route('case-hears.edit', $caseHear));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_case_hear(): void\n    {\n        $caseHear = CaseHear::factory()->create();\n\n        $response = $this->delete(route('case-hears.destroy', $caseHear));\n\n        $response->assertRedirect(route('case-hears.index'));\n\n        $this->assertModelMissing($caseHear);\n    }\n}\n","module":"crud:140","path":"\\tests\\Feature\\Controllers\\CaseHearControllerTest.php"},"\\resources\\views\\app\\case_hears\\create.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('case-hears.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.case_hears.create_title')\n            </h4>\n\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('case-hears.store') }}\"\n                class=\"mt-4\"\n            >\n                @include('app.case_hears.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('case-hears.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.create')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:140","path":"\\resources\\views\\app\\case_hears\\create.blade.php"},"\\resources\\views\\app\\case_hears\\edit.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('case-hears.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.case_hears.edit_title')\n            </h4>\n\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('case-hears.update', $caseHear) }}\"\n                class=\"mt-4\"\n            >\n                @include('app.case_hears.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('case-hears.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <a\n                        href=\"{{ route('case-hears.create') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-add text-primary\"></i>\n                        @lang('crud.common.create')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.update')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:140","path":"\\resources\\views\\app\\case_hears\\edit.blade.php"},"\\resources\\views\\app\\case_hears\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($caseHear) @endphp\n\n<div class=\"row\">\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"court_id\" label=\"Court\" required>\n            @php $selected = old('court_id', ($editing ? $caseHear->court_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Court</option>\n            @foreach($courts as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"judge_id\" label=\"Judge\" required>\n            @php $selected = old('judge_id', ($editing ? $caseHear->judge_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Judge</option>\n            @foreach($judges as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"attorney_id\" label=\"Attorney\" required>\n            @php $selected = old('attorney_id', ($editing ? $caseHear->attorney_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Attorney</option>\n            @foreach($attorneys as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"case_charge_id\" label=\"Case Charge\" required>\n            @php $selected = old('case_charge_id', ($editing ? $caseHear->case_charge_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Case Charge</option>\n            @foreach($caseCharges as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.select name=\"wittness_id\" label=\"Wittness\" required>\n            @php $selected = old('wittness_id', ($editing ? $caseHear->wittness_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Wittness</option>\n            @foreach($wittnesses as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"CaseID\"\n            label=\"Case Id\"\n            :value=\"old('CaseID', ($editing ? $caseHear->CaseID : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Case Id\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"casename\"\n            label=\"Casename\"\n            :value=\"old('casename', ($editing ? $caseHear->casename : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Casename\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"fileNumber\"\n            label=\"File Number\"\n            :value=\"old('fileNumber', ($editing ? $caseHear->fileNumber : ''))\"\n            maxlength=\"255\"\n            placeholder=\"File Number\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"address\"\n            label=\"Address\"\n            :value=\"old('address', ($editing ? $caseHear->address : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Address\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"state\"\n            label=\"State\"\n            :value=\"old('state', ($editing ? $caseHear->state : ''))\"\n            maxlength=\"255\"\n            placeholder=\"State\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"location\"\n            label=\"Location\"\n            :value=\"old('location', ($editing ? $caseHear->location : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Location\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.datetime\n            name=\"caseStartDate\"\n            label=\"Case Start Date\"\n            value=\"{{ old('caseStartDate', ($editing ? optional($caseHear->caseStartDate)->format('Y-m-d\\TH:i:s') : '')) }}\"\n            max=\"255\"\n            required\n        ></x-inputs.datetime>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $caseHear->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:140","path":"\\resources\\views\\app\\case_hears\\form-inputs.blade.php"},"\\resources\\views\\app\\case_hears\\show.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('case-hears.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.case_hears.show_title')\n            </h4>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.court_id')</h5>\n                    <span>{{ optional($caseHear->court)->name ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.judge_id')</h5>\n                    <span>{{ optional($caseHear->judge)->name ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.attorney_id')</h5>\n                    <span\n                        >{{ optional($caseHear->attorney)->attorneyID ?? '-'\n                        }}</span\n                    >\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.case_charge_id')</h5>\n                    <span\n                        >{{ optional($caseHear->caseCharge)->name ?? '-'\n                        }}</span\n                    >\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.wittness_id')</h5>\n                    <span\n                        >{{ optional($caseHear->wittness)->name ?? '-' }}</span\n                    >\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.CaseID')</h5>\n                    <span>{{ $caseHear->CaseID ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.casename')</h5>\n                    <span>{{ $caseHear->casename ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.fileNumber')</h5>\n                    <span>{{ $caseHear->fileNumber ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.address')</h5>\n                    <span>{{ $caseHear->address ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.state')</h5>\n                    <span>{{ $caseHear->state ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.location')</h5>\n                    <span>{{ $caseHear->location ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.caseStartDate')</h5>\n                    <span>{{ $caseHear->caseStartDate ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.case_hears.inputs.description')</h5>\n                    <span>{{ $caseHear->description ?? '-' }}</span>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <a href=\"{{ route('case-hears.index') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-return-left\"></i>\n                    @lang('crud.common.back')\n                </a>\n\n                @can('create', App\\Models\\CaseHear::class)\n                <a\n                    href=\"{{ route('case-hears.create') }}\"\n                    class=\"btn btn-light\"\n                >\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:140","path":"\\resources\\views\\app\\case_hears\\show.blade.php"},"\\resources\\views\\app\\case_hears\\index.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"searchbar mt-0 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form>\n                    <div class=\"input-group\">\n                        <input\n                            id=\"indexSearch\"\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"{{ __('crud.common.search') }}\"\n                            value=\"{{ $search ?? '' }}\"\n                            class=\"form-control\"\n                            autocomplete=\"off\"\n                        />\n                        <div class=\"input-group-append\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                <i class=\"icon ion-md-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6 text-right\">\n                @can('create', App\\Models\\CaseHear::class)\n                <a\n                    href=\"{{ route('case-hears.create') }}\"\n                    class=\"btn btn-primary\"\n                >\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div style=\"display: flex; justify-content: space-between;\">\n                <h4 class=\"card-title\">@lang('crud.case_hears.index_title')</h4>\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-borderless table-hover\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.court_id')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.judge_id')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.attorney_id')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.case_charge_id')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.wittness_id')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.CaseID')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.casename')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.fileNumber')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.address')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.state')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.location')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.caseStartDate')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.case_hears.inputs.description')\n                            </th>\n                            <th class=\"text-center\">\n                                @lang('crud.common.actions')\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        @forelse($caseHears as $caseHear)\n                        <tr>\n                            <td>\n                                {{ optional($caseHear->court)->name ?? '-' }}\n                            </td>\n                            <td>\n                                {{ optional($caseHear->judge)->name ?? '-' }}\n                            </td>\n                            <td>\n                                {{ optional($caseHear->attorney)->attorneyID ??\n                                '-' }}\n                            </td>\n                            <td>\n                                {{ optional($caseHear->caseCharge)->name ?? '-'\n                                }}\n                            </td>\n                            <td>\n                                {{ optional($caseHear->wittness)->name ?? '-' }}\n                            </td>\n                            <td>{{ $caseHear->CaseID ?? '-' }}</td>\n                            <td>{{ $caseHear->casename ?? '-' }}</td>\n                            <td>{{ $caseHear->fileNumber ?? '-' }}</td>\n                            <td>{{ $caseHear->address ?? '-' }}</td>\n                            <td>{{ $caseHear->state ?? '-' }}</td>\n                            <td>{{ $caseHear->location ?? '-' }}</td>\n                            <td>{{ $caseHear->caseStartDate ?? '-' }}</td>\n                            <td>{{ $caseHear->description ?? '-' }}</td>\n                            <td class=\"text-center\" style=\"width: 134px;\">\n                                <div\n                                    role=\"group\"\n                                    aria-label=\"Row Actions\"\n                                    class=\"btn-group\"\n                                >\n                                    @can('update', $caseHear)\n                                    <a\n                                        href=\"{{ route('case-hears.edit', $caseHear) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-create\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('view', $caseHear)\n                                    <a\n                                        href=\"{{ route('case-hears.show', $caseHear) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-eye\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('delete', $caseHear)\n                                    <form\n                                        action=\"{{ route('case-hears.destroy', $caseHear) }}\"\n                                        method=\"POST\"\n                                        onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                    >\n                                        @csrf @method('DELETE')\n                                        <button\n                                            type=\"submit\"\n                                            class=\"btn btn-light text-danger\"\n                                        >\n                                            <i class=\"icon ion-md-trash\"></i>\n                                        </button>\n                                    </form>\n                                    @endcan\n                                </div>\n                            </td>\n                        </tr>\n                        @empty\n                        <tr>\n                            <td colspan=\"14\">\n                                @lang('crud.common.no_items_found')\n                            </td>\n                        </tr>\n                        @endforelse\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"14\">{!! $caseHears->render() !!}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:140","path":"\\resources\\views\\app\\case_hears\\index.blade.php"},"\\app\\Http\\Requests\\AppointmentStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass AppointmentStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'case_hear_id' => ['required', 'exists:case_hears,id'],\n            'date' => ['required', 'date'],\n            'Description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:141","path":"\\app\\Http\\Requests\\AppointmentStoreRequest.php"},"\\app\\Http\\Requests\\AppointmentUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass AppointmentUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'case_hear_id' => ['required', 'exists:case_hears,id'],\n            'date' => ['required', 'date'],\n            'Description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:141","path":"\\app\\Http\\Requests\\AppointmentUpdateRequest.php"},"\\app\\Http\\Controllers\\AppointmentController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\CaseHear;\nuse Illuminate\\View\\View;\nuse App\\Models\\Appointment;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\AppointmentStoreRequest;\nuse App\\Http\\Requests\\AppointmentUpdateRequest;\n\nclass AppointmentController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Appointment::class);\n\n        $search = $request->get('search', '');\n\n        $appointments = Appointment::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view(\n            'app.appointments.index',\n            compact('appointments', 'search')\n        );\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Appointment::class);\n\n        $caseHears = CaseHear::pluck('CaseID', 'id');\n\n        return view('app.appointments.create', compact('caseHears'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(AppointmentStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Appointment::class);\n\n        $validated = $request->validated();\n\n        $appointment = Appointment::create($validated);\n\n        return redirect()\n            ->route('appointments.edit', $appointment)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Appointment $appointment): View\n    {\n        $this->authorize('view', $appointment);\n\n        return view('app.appointments.show', compact('appointment'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Appointment $appointment): View\n    {\n        $this->authorize('update', $appointment);\n\n        $caseHears = CaseHear::pluck('CaseID', 'id');\n\n        return view(\n            'app.appointments.edit',\n            compact('appointment', 'caseHears')\n        );\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        AppointmentUpdateRequest $request,\n        Appointment $appointment\n    ): RedirectResponse {\n        $this->authorize('update', $appointment);\n\n        $validated = $request->validated();\n\n        $appointment->update($validated);\n\n        return redirect()\n            ->route('appointments.edit', $appointment)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Appointment $appointment\n    ): RedirectResponse {\n        $this->authorize('delete', $appointment);\n\n        $appointment->delete();\n\n        return redirect()\n            ->route('appointments.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:141","path":"\\app\\Http\\Controllers\\AppointmentController.php"},"\\tests\\Feature\\Controllers\\AppointmentControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Appointment;\n\nuse App\\Models\\CaseHear;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AppointmentControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_appointments(): void\n    {\n        $appointments = Appointment::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('appointments.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.appointments.index')\n            ->assertViewHas('appointments');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_appointment(): void\n    {\n        $response = $this->get(route('appointments.create'));\n\n        $response->assertOk()->assertViewIs('app.appointments.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_appointment(): void\n    {\n        $data = Appointment::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('appointments.store'), $data);\n\n        $this->assertDatabaseHas('appointments', $data);\n\n        $appointment = Appointment::latest('id')->first();\n\n        $response->assertRedirect(route('appointments.edit', $appointment));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_appointment(): void\n    {\n        $appointment = Appointment::factory()->create();\n\n        $response = $this->get(route('appointments.show', $appointment));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.appointments.show')\n            ->assertViewHas('appointment');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_appointment(): void\n    {\n        $appointment = Appointment::factory()->create();\n\n        $response = $this->get(route('appointments.edit', $appointment));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.appointments.edit')\n            ->assertViewHas('appointment');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_appointment(): void\n    {\n        $appointment = Appointment::factory()->create();\n\n        $caseHear = CaseHear::factory()->create();\n\n        $data = [\n            'date' => $this->faker->dateTime(),\n            'Description' => $this->faker->sentence(15),\n            'case_hear_id' => $caseHear->id,\n        ];\n\n        $response = $this->put(\n            route('appointments.update', $appointment),\n            $data\n        );\n\n        $data['id'] = $appointment->id;\n\n        $this->assertDatabaseHas('appointments', $data);\n\n        $response->assertRedirect(route('appointments.edit', $appointment));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_appointment(): void\n    {\n        $appointment = Appointment::factory()->create();\n\n        $response = $this->delete(route('appointments.destroy', $appointment));\n\n        $response->assertRedirect(route('appointments.index'));\n\n        $this->assertModelMissing($appointment);\n    }\n}\n","module":"crud:141","path":"\\tests\\Feature\\Controllers\\AppointmentControllerTest.php"},"\\resources\\views\\app\\appointments\\create.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('appointments.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.appointments.create_title')\n            </h4>\n\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('appointments.store') }}\"\n                class=\"mt-4\"\n            >\n                @include('app.appointments.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('appointments.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.create')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:141","path":"\\resources\\views\\app\\appointments\\create.blade.php"},"\\resources\\views\\app\\appointments\\edit.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('appointments.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.appointments.edit_title')\n            </h4>\n\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('appointments.update', $appointment) }}\"\n                class=\"mt-4\"\n            >\n                @include('app.appointments.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('appointments.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <a\n                        href=\"{{ route('appointments.create') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-add text-primary\"></i>\n                        @lang('crud.common.create')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.update')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:141","path":"\\resources\\views\\app\\appointments\\edit.blade.php"},"\\resources\\views\\app\\appointments\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($appointment) @endphp\n\n<div class=\"row\">\n    <x-inputs.group class=\"col-sm-12\">\n        <x-inputs.select name=\"case_hear_id\" label=\"Case Hear\" required>\n            @php $selected = old('case_hear_id', ($editing ? $appointment->case_hear_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Case Hear</option>\n            @foreach($caseHears as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.datetime\n            name=\"date\"\n            label=\"Date\"\n            value=\"{{ old('date', ($editing ? optional($appointment->date)->format('Y-m-d\\TH:i:s') : '')) }}\"\n            max=\"255\"\n            required\n        ></x-inputs.datetime>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.textarea\n            name=\"Description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('Description', ($editing ? $appointment->Description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:141","path":"\\resources\\views\\app\\appointments\\form-inputs.blade.php"},"\\resources\\views\\app\\appointments\\show.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('appointments.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.appointments.show_title')\n            </h4>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.appointments.inputs.case_hear_id')</h5>\n                    <span\n                        >{{ optional($appointment->caseHear)->CaseID ?? '-'\n                        }}</span\n                    >\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.appointments.inputs.date')</h5>\n                    <span>{{ $appointment->date ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.appointments.inputs.Description')</h5>\n                    <span>{{ $appointment->Description ?? '-' }}</span>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <a\n                    href=\"{{ route('appointments.index') }}\"\n                    class=\"btn btn-light\"\n                >\n                    <i class=\"icon ion-md-return-left\"></i>\n                    @lang('crud.common.back')\n                </a>\n\n                @can('create', App\\Models\\Appointment::class)\n                <a\n                    href=\"{{ route('appointments.create') }}\"\n                    class=\"btn btn-light\"\n                >\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:141","path":"\\resources\\views\\app\\appointments\\show.blade.php"},"\\resources\\views\\app\\appointments\\index.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"searchbar mt-0 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form>\n                    <div class=\"input-group\">\n                        <input\n                            id=\"indexSearch\"\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"{{ __('crud.common.search') }}\"\n                            value=\"{{ $search ?? '' }}\"\n                            class=\"form-control\"\n                            autocomplete=\"off\"\n                        />\n                        <div class=\"input-group-append\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                <i class=\"icon ion-md-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6 text-right\">\n                @can('create', App\\Models\\Appointment::class)\n                <a\n                    href=\"{{ route('appointments.create') }}\"\n                    class=\"btn btn-primary\"\n                >\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div style=\"display: flex; justify-content: space-between;\">\n                <h4 class=\"card-title\">\n                    @lang('crud.appointments.index_title')\n                </h4>\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-borderless table-hover\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left\">\n                                @lang('crud.appointments.inputs.case_hear_id')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.appointments.inputs.date')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.appointments.inputs.Description')\n                            </th>\n                            <th class=\"text-center\">\n                                @lang('crud.common.actions')\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        @forelse($appointments as $appointment)\n                        <tr>\n                            <td>\n                                {{ optional($appointment->caseHear)->CaseID ??\n                                '-' }}\n                            </td>\n                            <td>{{ $appointment->date ?? '-' }}</td>\n                            <td>{{ $appointment->Description ?? '-' }}</td>\n                            <td class=\"text-center\" style=\"width: 134px;\">\n                                <div\n                                    role=\"group\"\n                                    aria-label=\"Row Actions\"\n                                    class=\"btn-group\"\n                                >\n                                    @can('update', $appointment)\n                                    <a\n                                        href=\"{{ route('appointments.edit', $appointment) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-create\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('view', $appointment)\n                                    <a\n                                        href=\"{{ route('appointments.show', $appointment) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-eye\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('delete', $appointment)\n                                    <form\n                                        action=\"{{ route('appointments.destroy', $appointment) }}\"\n                                        method=\"POST\"\n                                        onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                    >\n                                        @csrf @method('DELETE')\n                                        <button\n                                            type=\"submit\"\n                                            class=\"btn btn-light text-danger\"\n                                        >\n                                            <i class=\"icon ion-md-trash\"></i>\n                                        </button>\n                                    </form>\n                                    @endcan\n                                </div>\n                            </td>\n                        </tr>\n                        @empty\n                        <tr>\n                            <td colspan=\"4\">\n                                @lang('crud.common.no_items_found')\n                            </td>\n                        </tr>\n                        @endforelse\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"4\">{!! $appointments->render() !!}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:141","path":"\\resources\\views\\app\\appointments\\index.blade.php"},"\\app\\Http\\Requests\\DecisionStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass DecisionStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'case_hear_id' => ['required', 'exists:case_hears,id'],\n            'decisionDate' => ['required', 'date'],\n            'Decisiontype' => ['required', 'max:255', 'string'],\n            'Description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:142","path":"\\app\\Http\\Requests\\DecisionStoreRequest.php"},"\\app\\Http\\Requests\\DecisionUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass DecisionUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'case_hear_id' => ['required', 'exists:case_hears,id'],\n            'decisionDate' => ['required', 'date'],\n            'Decisiontype' => ['required', 'max:255', 'string'],\n            'Description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:142","path":"\\app\\Http\\Requests\\DecisionUpdateRequest.php"},"\\app\\Http\\Controllers\\DecisionController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Decision;\nuse App\\Models\\CaseHear;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\DecisionStoreRequest;\nuse App\\Http\\Requests\\DecisionUpdateRequest;\n\nclass DecisionController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Decision::class);\n\n        $search = $request->get('search', '');\n\n        $decisions = Decision::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.decisions.index', compact('decisions', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Decision::class);\n\n        $caseHears = CaseHear::pluck('CaseID', 'id');\n\n        return view('app.decisions.create', compact('caseHears'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(DecisionStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Decision::class);\n\n        $validated = $request->validated();\n\n        $decision = Decision::create($validated);\n\n        return redirect()\n            ->route('decisions.edit', $decision)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Decision $decision): View\n    {\n        $this->authorize('view', $decision);\n\n        return view('app.decisions.show', compact('decision'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Decision $decision): View\n    {\n        $this->authorize('update', $decision);\n\n        $caseHears = CaseHear::pluck('CaseID', 'id');\n\n        return view('app.decisions.edit', compact('decision', 'caseHears'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        DecisionUpdateRequest $request,\n        Decision $decision\n    ): RedirectResponse {\n        $this->authorize('update', $decision);\n\n        $validated = $request->validated();\n\n        $decision->update($validated);\n\n        return redirect()\n            ->route('decisions.edit', $decision)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Decision $decision\n    ): RedirectResponse {\n        $this->authorize('delete', $decision);\n\n        $decision->delete();\n\n        return redirect()\n            ->route('decisions.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:142","path":"\\app\\Http\\Controllers\\DecisionController.php"},"\\tests\\Feature\\Controllers\\DecisionControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Decision;\n\nuse App\\Models\\CaseHear;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass DecisionControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_decisions(): void\n    {\n        $decisions = Decision::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('decisions.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.decisions.index')\n            ->assertViewHas('decisions');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_decision(): void\n    {\n        $response = $this->get(route('decisions.create'));\n\n        $response->assertOk()->assertViewIs('app.decisions.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_decision(): void\n    {\n        $data = Decision::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('decisions.store'), $data);\n\n        $this->assertDatabaseHas('decisions', $data);\n\n        $decision = Decision::latest('id')->first();\n\n        $response->assertRedirect(route('decisions.edit', $decision));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_decision(): void\n    {\n        $decision = Decision::factory()->create();\n\n        $response = $this->get(route('decisions.show', $decision));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.decisions.show')\n            ->assertViewHas('decision');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_decision(): void\n    {\n        $decision = Decision::factory()->create();\n\n        $response = $this->get(route('decisions.edit', $decision));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.decisions.edit')\n            ->assertViewHas('decision');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_decision(): void\n    {\n        $decision = Decision::factory()->create();\n\n        $caseHear = CaseHear::factory()->create();\n\n        $data = [\n            'decisionDate' => $this->faker->dateTime(),\n            'Decisiontype' => $this->faker->text(255),\n            'Description' => $this->faker->sentence(15),\n            'case_hear_id' => $caseHear->id,\n        ];\n\n        $response = $this->put(route('decisions.update', $decision), $data);\n\n        $data['id'] = $decision->id;\n\n        $this->assertDatabaseHas('decisions', $data);\n\n        $response->assertRedirect(route('decisions.edit', $decision));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_decision(): void\n    {\n        $decision = Decision::factory()->create();\n\n        $response = $this->delete(route('decisions.destroy', $decision));\n\n        $response->assertRedirect(route('decisions.index'));\n\n        $this->assertModelMissing($decision);\n    }\n}\n","module":"crud:142","path":"\\tests\\Feature\\Controllers\\DecisionControllerTest.php"},"\\resources\\views\\app\\decisions\\create.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('decisions.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.decisions.create_title')\n            </h4>\n\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('decisions.store') }}\"\n                class=\"mt-4\"\n            >\n                @include('app.decisions.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('decisions.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.create')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:142","path":"\\resources\\views\\app\\decisions\\create.blade.php"},"\\resources\\views\\app\\decisions\\edit.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('decisions.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.decisions.edit_title')\n            </h4>\n\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('decisions.update', $decision) }}\"\n                class=\"mt-4\"\n            >\n                @include('app.decisions.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('decisions.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <a\n                        href=\"{{ route('decisions.create') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-add text-primary\"></i>\n                        @lang('crud.common.create')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.update')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:142","path":"\\resources\\views\\app\\decisions\\edit.blade.php"},"\\resources\\views\\app\\decisions\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($decision) @endphp\n\n<div class=\"row\">\n    <x-inputs.group class=\"col-sm-12\">\n        <x-inputs.select name=\"case_hear_id\" label=\"Case Hear\" required>\n            @php $selected = old('case_hear_id', ($editing ? $decision->case_hear_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Case Hear</option>\n            @foreach($caseHears as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.datetime\n            name=\"decisionDate\"\n            label=\"Decision Date\"\n            value=\"{{ old('decisionDate', ($editing ? optional($decision->decisionDate)->format('Y-m-d\\TH:i:s') : '')) }}\"\n            max=\"255\"\n            required\n        ></x-inputs.datetime>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.text\n            name=\"Decisiontype\"\n            label=\"Decisiontype\"\n            :value=\"old('Decisiontype', ($editing ? $decision->Decisiontype : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Decisiontype\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"col-sm-12 col-lg-6\">\n        <x-inputs.textarea\n            name=\"Description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('Description', ($editing ? $decision->Description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:142","path":"\\resources\\views\\app\\decisions\\form-inputs.blade.php"},"\\resources\\views\\app\\decisions\\show.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('decisions.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.decisions.show_title')\n            </h4>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.decisions.inputs.case_hear_id')</h5>\n                    <span\n                        >{{ optional($decision->caseHear)->CaseID ?? '-'\n                        }}</span\n                    >\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.decisions.inputs.decisionDate')</h5>\n                    <span>{{ $decision->decisionDate ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.decisions.inputs.Decisiontype')</h5>\n                    <span>{{ $decision->Decisiontype ?? '-' }}</span>\n                </div>\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.decisions.inputs.Description')</h5>\n                    <span>{{ $decision->Description ?? '-' }}</span>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <a href=\"{{ route('decisions.index') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-return-left\"></i>\n                    @lang('crud.common.back')\n                </a>\n\n                @can('create', App\\Models\\Decision::class)\n                <a href=\"{{ route('decisions.create') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:142","path":"\\resources\\views\\app\\decisions\\show.blade.php"},"\\resources\\views\\app\\decisions\\index.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"searchbar mt-0 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form>\n                    <div class=\"input-group\">\n                        <input\n                            id=\"indexSearch\"\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"{{ __('crud.common.search') }}\"\n                            value=\"{{ $search ?? '' }}\"\n                            class=\"form-control\"\n                            autocomplete=\"off\"\n                        />\n                        <div class=\"input-group-append\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                <i class=\"icon ion-md-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6 text-right\">\n                @can('create', App\\Models\\Decision::class)\n                <a\n                    href=\"{{ route('decisions.create') }}\"\n                    class=\"btn btn-primary\"\n                >\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div style=\"display: flex; justify-content: space-between;\">\n                <h4 class=\"card-title\">@lang('crud.decisions.index_title')</h4>\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-borderless table-hover\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left\">\n                                @lang('crud.decisions.inputs.case_hear_id')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.decisions.inputs.decisionDate')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.decisions.inputs.Decisiontype')\n                            </th>\n                            <th class=\"text-left\">\n                                @lang('crud.decisions.inputs.Description')\n                            </th>\n                            <th class=\"text-center\">\n                                @lang('crud.common.actions')\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        @forelse($decisions as $decision)\n                        <tr>\n                            <td>\n                                {{ optional($decision->caseHear)->CaseID ?? '-'\n                                }}\n                            </td>\n                            <td>{{ $decision->decisionDate ?? '-' }}</td>\n                            <td>{{ $decision->Decisiontype ?? '-' }}</td>\n                            <td>{{ $decision->Description ?? '-' }}</td>\n                            <td class=\"text-center\" style=\"width: 134px;\">\n                                <div\n                                    role=\"group\"\n                                    aria-label=\"Row Actions\"\n                                    class=\"btn-group\"\n                                >\n                                    @can('update', $decision)\n                                    <a\n                                        href=\"{{ route('decisions.edit', $decision) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-create\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('view', $decision)\n                                    <a\n                                        href=\"{{ route('decisions.show', $decision) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-eye\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('delete', $decision)\n                                    <form\n                                        action=\"{{ route('decisions.destroy', $decision) }}\"\n                                        method=\"POST\"\n                                        onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                    >\n                                        @csrf @method('DELETE')\n                                        <button\n                                            type=\"submit\"\n                                            class=\"btn btn-light text-danger\"\n                                        >\n                                            <i class=\"icon ion-md-trash\"></i>\n                                        </button>\n                                    </form>\n                                    @endcan\n                                </div>\n                            </td>\n                        </tr>\n                        @empty\n                        <tr>\n                            <td colspan=\"5\">\n                                @lang('crud.common.no_items_found')\n                            </td>\n                        </tr>\n                        @endforelse\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"5\">{!! $decisions->render() !!}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud:142","path":"\\resources\\views\\app\\decisions\\index.blade.php"},"\\app\\Http\\Resources\\UserResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass UserResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:65","path":"\\app\\Http\\Resources\\UserResource.php"},"\\app\\Http\\Resources\\UserCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass UserCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:65","path":"\\app\\Http\\Resources\\UserCollection.php"},"\\app\\Http\\Controllers\\Api\\UserController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Resources\\UserResource;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Http\\Resources\\UserCollection;\nuse App\\Http\\Requests\\UserStoreRequest;\nuse App\\Http\\Requests\\UserUpdateRequest;\n\nclass UserController extends Controller\n{\n    public function index(Request $request): UserCollection\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate();\n\n        return new UserCollection($users);\n    }\n\n    public function store(UserStoreRequest $request): UserResource\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validated();\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        $user->syncRoles($request->roles);\n\n        return new UserResource($user);\n    }\n\n    public function show(Request $request, User $user): UserResource\n    {\n        $this->authorize('view', $user);\n\n        return new UserResource($user);\n    }\n\n    public function update(UserUpdateRequest $request, User $user): UserResource\n    {\n        $this->authorize('update', $user);\n\n        $validated = $request->validated();\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        $user->syncRoles($request->roles);\n\n        return new UserResource($user);\n    }\n\n    public function destroy(Request $request, User $user): Response\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:130","path":"\\app\\Http\\Controllers\\Api\\UserController.php"},"\\tests\\Feature\\Api\\UserTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_users_list(): void\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.users.index'));\n\n        $response->assertOk()->assertSee($users[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user(): void\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->postJson(route('api.users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['two_factor_confirmed_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->putJson(route('api.users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['two_factor_confirmed_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->deleteJson(route('api.users.destroy', $user));\n\n        $this->assertModelMissing($user);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:130","path":"\\tests\\Feature\\Api\\UserTest.php"},"\\app\\Http\\Resources\\CourtResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass CourtResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:66","path":"\\app\\Http\\Resources\\CourtResource.php"},"\\app\\Http\\Resources\\CourtCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass CourtCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:66","path":"\\app\\Http\\Resources\\CourtCollection.php"},"\\app\\Http\\Controllers\\Api\\CourtController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Court;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CourtResource;\nuse App\\Http\\Resources\\CourtCollection;\nuse App\\Http\\Requests\\CourtStoreRequest;\nuse App\\Http\\Requests\\CourtUpdateRequest;\n\nclass CourtController extends Controller\n{\n    public function index(Request $request): CourtCollection\n    {\n        $this->authorize('view-any', Court::class);\n\n        $search = $request->get('search', '');\n\n        $courts = Court::search($search)\n            ->latest()\n            ->paginate();\n\n        return new CourtCollection($courts);\n    }\n\n    public function store(CourtStoreRequest $request): CourtResource\n    {\n        $this->authorize('create', Court::class);\n\n        $validated = $request->validated();\n\n        $court = Court::create($validated);\n\n        return new CourtResource($court);\n    }\n\n    public function show(Request $request, Court $court): CourtResource\n    {\n        $this->authorize('view', $court);\n\n        return new CourtResource($court);\n    }\n\n    public function update(\n        CourtUpdateRequest $request,\n        Court $court\n    ): CourtResource {\n        $this->authorize('update', $court);\n\n        $validated = $request->validated();\n\n        $court->update($validated);\n\n        return new CourtResource($court);\n    }\n\n    public function destroy(Request $request, Court $court): Response\n    {\n        $this->authorize('delete', $court);\n\n        $court->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:131","path":"\\app\\Http\\Controllers\\Api\\CourtController.php"},"\\tests\\Feature\\Api\\CourtTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Court;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CourtTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_courts_list(): void\n    {\n        $courts = Court::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.courts.index'));\n\n        $response->assertOk()->assertSee($courts[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_court(): void\n    {\n        $data = Court::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.courts.store'), $data);\n\n        $this->assertDatabaseHas('courts', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_court(): void\n    {\n        $court = Court::factory()->create();\n\n        $data = [\n            'courtID' => $this->faker->text(255),\n            'name' => $this->faker->name(),\n            'courtType' => $this->faker->text(255),\n            'speciality' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->putJson(route('api.courts.update', $court), $data);\n\n        $data['id'] = $court->id;\n\n        $this->assertDatabaseHas('courts', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_court(): void\n    {\n        $court = Court::factory()->create();\n\n        $response = $this->deleteJson(route('api.courts.destroy', $court));\n\n        $this->assertModelMissing($court);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:131","path":"\\tests\\Feature\\Api\\CourtTest.php"},"\\app\\Http\\Resources\\AttorneyResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass AttorneyResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:67","path":"\\app\\Http\\Resources\\AttorneyResource.php"},"\\app\\Http\\Resources\\AttorneyCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass AttorneyCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:67","path":"\\app\\Http\\Resources\\AttorneyCollection.php"},"\\app\\Http\\Controllers\\Api\\CourtAttorneysController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Court;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\AttorneyResource;\nuse App\\Http\\Resources\\AttorneyCollection;\n\nclass CourtAttorneysController extends Controller\n{\n    public function index(Request $request, Court $court): AttorneyCollection\n    {\n        $this->authorize('view', $court);\n\n        $search = $request->get('search', '');\n\n        $attorneys = $court\n            ->attorneys()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new AttorneyCollection($attorneys);\n    }\n\n    public function store(Request $request, Court $court): AttorneyResource\n    {\n        $this->authorize('create', Attorney::class);\n\n        $validated = $request->validate([\n            'attorneyID' => ['required', 'max:255', 'string'],\n            'Name' => ['required', 'max:255', 'string'],\n            'Address' => ['required', 'max:255', 'string'],\n            'State' => ['required', 'max:255', 'string'],\n            'courtType' => ['required', 'max:255', 'string'],\n            'EmpType' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ]);\n\n        $attorney = $court->attorneys()->create($validated);\n\n        return new AttorneyResource($attorney);\n    }\n}\n","module":"crud:131","path":"\\app\\Http\\Controllers\\Api\\CourtAttorneysController.php"},"\\tests\\Feature\\Api\\CourtAttorneysTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Court;\nuse App\\Models\\Attorney;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CourtAttorneysTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_court_attorneys(): void\n    {\n        $court = Court::factory()->create();\n        $attorneys = Attorney::factory()\n            ->count(2)\n            ->create([\n                'court_id' => $court->id,\n            ]);\n\n        $response = $this->getJson(route('api.courts.attorneys.index', $court));\n\n        $response->assertOk()->assertSee($attorneys[0]->attorneyID);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_court_attorneys(): void\n    {\n        $court = Court::factory()->create();\n        $data = Attorney::factory()\n            ->make([\n                'court_id' => $court->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.courts.attorneys.store', $court),\n            $data\n        );\n\n        $this->assertDatabaseHas('attorneys', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $attorney = Attorney::latest('id')->first();\n\n        $this->assertEquals($court->id, $attorney->court_id);\n    }\n}\n","module":"crud:131","path":"\\tests\\Feature\\Api\\CourtAttorneysTest.php"},"\\app\\Http\\Resources\\JudgeResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass JudgeResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:68","path":"\\app\\Http\\Resources\\JudgeResource.php"},"\\app\\Http\\Resources\\JudgeCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass JudgeCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:68","path":"\\app\\Http\\Resources\\JudgeCollection.php"},"\\app\\Http\\Controllers\\Api\\CourtJudgesController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Court;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\JudgeResource;\nuse App\\Http\\Resources\\JudgeCollection;\n\nclass CourtJudgesController extends Controller\n{\n    public function index(Request $request, Court $court): JudgeCollection\n    {\n        $this->authorize('view', $court);\n\n        $search = $request->get('search', '');\n\n        $judges = $court\n            ->judges()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new JudgeCollection($judges);\n    }\n\n    public function store(Request $request, Court $court): JudgeResource\n    {\n        $this->authorize('create', Judge::class);\n\n        $validated = $request->validate([\n            'judgeID' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'Address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'courtTyep' => ['required', 'max:255', 'string'],\n            'Emptype' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ]);\n\n        $judge = $court->judges()->create($validated);\n\n        return new JudgeResource($judge);\n    }\n}\n","module":"crud:131","path":"\\app\\Http\\Controllers\\Api\\CourtJudgesController.php"},"\\tests\\Feature\\Api\\CourtJudgesTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Court;\nuse App\\Models\\Judge;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CourtJudgesTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_court_judges(): void\n    {\n        $court = Court::factory()->create();\n        $judges = Judge::factory()\n            ->count(2)\n            ->create([\n                'court_id' => $court->id,\n            ]);\n\n        $response = $this->getJson(route('api.courts.judges.index', $court));\n\n        $response->assertOk()->assertSee($judges[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_court_judges(): void\n    {\n        $court = Court::factory()->create();\n        $data = Judge::factory()\n            ->make([\n                'court_id' => $court->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.courts.judges.store', $court),\n            $data\n        );\n\n        $this->assertDatabaseHas('judges', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $judge = Judge::latest('id')->first();\n\n        $this->assertEquals($court->id, $judge->court_id);\n    }\n}\n","module":"crud:131","path":"\\tests\\Feature\\Api\\CourtJudgesTest.php"},"\\app\\Http\\Resources\\BarResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass BarResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:69","path":"\\app\\Http\\Resources\\BarResource.php"},"\\app\\Http\\Resources\\BarCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass BarCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:69","path":"\\app\\Http\\Resources\\BarCollection.php"},"\\app\\Http\\Controllers\\Api\\CourtBarsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Court;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\BarResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\BarCollection;\n\nclass CourtBarsController extends Controller\n{\n    public function index(Request $request, Court $court): BarCollection\n    {\n        $this->authorize('view', $court);\n\n        $search = $request->get('search', '');\n\n        $bars = $court\n            ->bars()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new BarCollection($bars);\n    }\n\n    public function store(Request $request, Court $court): BarResource\n    {\n        $this->authorize('create', Bar::class);\n\n        $validated = $request->validate([\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'location' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ]);\n\n        $bar = $court->bars()->create($validated);\n\n        return new BarResource($bar);\n    }\n}\n","module":"crud:131","path":"\\app\\Http\\Controllers\\Api\\CourtBarsController.php"},"\\tests\\Feature\\Api\\CourtBarsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\Bar;\nuse App\\Models\\User;\nuse App\\Models\\Court;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CourtBarsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_court_bars(): void\n    {\n        $court = Court::factory()->create();\n        $bars = Bar::factory()\n            ->count(2)\n            ->create([\n                'court_id' => $court->id,\n            ]);\n\n        $response = $this->getJson(route('api.courts.bars.index', $court));\n\n        $response->assertOk()->assertSee($bars[0]->address);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_court_bars(): void\n    {\n        $court = Court::factory()->create();\n        $data = Bar::factory()\n            ->make([\n                'court_id' => $court->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.courts.bars.store', $court),\n            $data\n        );\n\n        $this->assertDatabaseHas('bars', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $bar = Bar::latest('id')->first();\n\n        $this->assertEquals($court->id, $bar->court_id);\n    }\n}\n","module":"crud:131","path":"\\tests\\Feature\\Api\\CourtBarsTest.php"},"\\app\\Http\\Resources\\CaseHearResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass CaseHearResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:72","path":"\\app\\Http\\Resources\\CaseHearResource.php"},"\\app\\Http\\Resources\\CaseHearCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass CaseHearCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:72","path":"\\app\\Http\\Resources\\CaseHearCollection.php"},"\\app\\Http\\Controllers\\Api\\CourtCaseHearsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Court;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CaseHearResource;\nuse App\\Http\\Resources\\CaseHearCollection;\n\nclass CourtCaseHearsController extends Controller\n{\n    public function index(Request $request, Court $court): CaseHearCollection\n    {\n        $this->authorize('view', $court);\n\n        $search = $request->get('search', '');\n\n        $caseHears = $court\n            ->caseHears()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new CaseHearCollection($caseHears);\n    }\n\n    public function store(Request $request, Court $court): CaseHearResource\n    {\n        $this->authorize('create', CaseHear::class);\n\n        $validated = $request->validate([\n            'judge_id' => ['required', 'exists:judges,id'],\n            'attorney_id' => ['required', 'exists:attorneys,id'],\n            'case_charge_id' => ['required', 'exists:case_charges,id'],\n            'wittness_id' => ['required', 'exists:wittnesses,id'],\n            'CaseID' => ['required', 'max:255', 'string'],\n            'casename' => ['required', 'max:255', 'string'],\n            'fileNumber' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'location' => ['required', 'max:255', 'string'],\n            'caseStartDate' => ['required', 'date'],\n            'description' => ['required', 'max:255', 'string'],\n        ]);\n\n        $caseHear = $court->caseHears()->create($validated);\n\n        return new CaseHearResource($caseHear);\n    }\n}\n","module":"crud:131","path":"\\app\\Http\\Controllers\\Api\\CourtCaseHearsController.php"},"\\tests\\Feature\\Api\\CourtCaseHearsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Court;\nuse App\\Models\\CaseHear;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CourtCaseHearsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_court_case_hears(): void\n    {\n        $court = Court::factory()->create();\n        $caseHears = CaseHear::factory()\n            ->count(2)\n            ->create([\n                'court_id' => $court->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.courts.case-hears.index', $court)\n        );\n\n        $response->assertOk()->assertSee($caseHears[0]->CaseID);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_court_case_hears(): void\n    {\n        $court = Court::factory()->create();\n        $data = CaseHear::factory()\n            ->make([\n                'court_id' => $court->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.courts.case-hears.store', $court),\n            $data\n        );\n\n        $this->assertDatabaseHas('case_hears', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $caseHear = CaseHear::latest('id')->first();\n\n        $this->assertEquals($court->id, $caseHear->court_id);\n    }\n}\n","module":"crud:131","path":"\\tests\\Feature\\Api\\CourtCaseHearsTest.php"},"\\app\\Http\\Controllers\\Api\\AttorneyController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Attorney;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\AttorneyResource;\nuse App\\Http\\Resources\\AttorneyCollection;\nuse App\\Http\\Requests\\AttorneyStoreRequest;\nuse App\\Http\\Requests\\AttorneyUpdateRequest;\n\nclass AttorneyController extends Controller\n{\n    public function index(Request $request): AttorneyCollection\n    {\n        $this->authorize('view-any', Attorney::class);\n\n        $search = $request->get('search', '');\n\n        $attorneys = Attorney::search($search)\n            ->latest()\n            ->paginate();\n\n        return new AttorneyCollection($attorneys);\n    }\n\n    public function store(AttorneyStoreRequest $request): AttorneyResource\n    {\n        $this->authorize('create', Attorney::class);\n\n        $validated = $request->validated();\n\n        $attorney = Attorney::create($validated);\n\n        return new AttorneyResource($attorney);\n    }\n\n    public function show(Request $request, Attorney $attorney): AttorneyResource\n    {\n        $this->authorize('view', $attorney);\n\n        return new AttorneyResource($attorney);\n    }\n\n    public function update(\n        AttorneyUpdateRequest $request,\n        Attorney $attorney\n    ): AttorneyResource {\n        $this->authorize('update', $attorney);\n\n        $validated = $request->validated();\n\n        $attorney->update($validated);\n\n        return new AttorneyResource($attorney);\n    }\n\n    public function destroy(Request $request, Attorney $attorney): Response\n    {\n        $this->authorize('delete', $attorney);\n\n        $attorney->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:132","path":"\\app\\Http\\Controllers\\Api\\AttorneyController.php"},"\\tests\\Feature\\Api\\AttorneyTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Attorney;\n\nuse App\\Models\\Court;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AttorneyTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_attorneys_list(): void\n    {\n        $attorneys = Attorney::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.attorneys.index'));\n\n        $response->assertOk()->assertSee($attorneys[0]->attorneyID);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_attorney(): void\n    {\n        $data = Attorney::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.attorneys.store'), $data);\n\n        $this->assertDatabaseHas('attorneys', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_attorney(): void\n    {\n        $attorney = Attorney::factory()->create();\n\n        $court = Court::factory()->create();\n\n        $data = [\n            'attorneyID' => $this->faker->text(255),\n            'Name' => $this->faker->name(),\n            'courtType' => $this->faker->text(255),\n            'Address' => $this->faker->address(),\n            'State' => $this->faker->state(),\n            'EmpType' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n            'court_id' => $court->id,\n        ];\n\n        $response = $this->putJson(\n            route('api.attorneys.update', $attorney),\n            $data\n        );\n\n        $data['id'] = $attorney->id;\n\n        $this->assertDatabaseHas('attorneys', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_attorney(): void\n    {\n        $attorney = Attorney::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.attorneys.destroy', $attorney)\n        );\n\n        $this->assertModelMissing($attorney);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:132","path":"\\tests\\Feature\\Api\\AttorneyTest.php"},"\\app\\Http\\Controllers\\Api\\AttorneyCaseHearsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Attorney;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CaseHearResource;\nuse App\\Http\\Resources\\CaseHearCollection;\n\nclass AttorneyCaseHearsController extends Controller\n{\n    public function index(\n        Request $request,\n        Attorney $attorney\n    ): CaseHearCollection {\n        $this->authorize('view', $attorney);\n\n        $search = $request->get('search', '');\n\n        $caseHears = $attorney\n            ->caseHears()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new CaseHearCollection($caseHears);\n    }\n\n    public function store(\n        Request $request,\n        Attorney $attorney\n    ): CaseHearResource {\n        $this->authorize('create', CaseHear::class);\n\n        $validated = $request->validate([\n            'court_id' => ['required', 'exists:courts,id'],\n            'judge_id' => ['required', 'exists:judges,id'],\n            'case_charge_id' => ['required', 'exists:case_charges,id'],\n            'wittness_id' => ['required', 'exists:wittnesses,id'],\n            'CaseID' => ['required', 'max:255', 'string'],\n            'casename' => ['required', 'max:255', 'string'],\n            'fileNumber' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'location' => ['required', 'max:255', 'string'],\n            'caseStartDate' => ['required', 'date'],\n            'description' => ['required', 'max:255', 'string'],\n        ]);\n\n        $caseHear = $attorney->caseHears()->create($validated);\n\n        return new CaseHearResource($caseHear);\n    }\n}\n","module":"crud:132","path":"\\app\\Http\\Controllers\\Api\\AttorneyCaseHearsController.php"},"\\tests\\Feature\\Api\\AttorneyCaseHearsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Attorney;\nuse App\\Models\\CaseHear;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AttorneyCaseHearsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_attorney_case_hears(): void\n    {\n        $attorney = Attorney::factory()->create();\n        $caseHears = CaseHear::factory()\n            ->count(2)\n            ->create([\n                'attorney_id' => $attorney->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.attorneys.case-hears.index', $attorney)\n        );\n\n        $response->assertOk()->assertSee($caseHears[0]->CaseID);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_attorney_case_hears(): void\n    {\n        $attorney = Attorney::factory()->create();\n        $data = CaseHear::factory()\n            ->make([\n                'attorney_id' => $attorney->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.attorneys.case-hears.store', $attorney),\n            $data\n        );\n\n        $this->assertDatabaseHas('case_hears', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $caseHear = CaseHear::latest('id')->first();\n\n        $this->assertEquals($attorney->id, $caseHear->attorney_id);\n    }\n}\n","module":"crud:132","path":"\\tests\\Feature\\Api\\AttorneyCaseHearsTest.php"},"\\app\\Http\\Controllers\\Api\\JudgeController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Judge;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\JudgeResource;\nuse App\\Http\\Resources\\JudgeCollection;\nuse App\\Http\\Requests\\JudgeStoreRequest;\nuse App\\Http\\Requests\\JudgeUpdateRequest;\n\nclass JudgeController extends Controller\n{\n    public function index(Request $request): JudgeCollection\n    {\n        $this->authorize('view-any', Judge::class);\n\n        $search = $request->get('search', '');\n\n        $judges = Judge::search($search)\n            ->latest()\n            ->paginate();\n\n        return new JudgeCollection($judges);\n    }\n\n    public function store(JudgeStoreRequest $request): JudgeResource\n    {\n        $this->authorize('create', Judge::class);\n\n        $validated = $request->validated();\n\n        $judge = Judge::create($validated);\n\n        return new JudgeResource($judge);\n    }\n\n    public function show(Request $request, Judge $judge): JudgeResource\n    {\n        $this->authorize('view', $judge);\n\n        return new JudgeResource($judge);\n    }\n\n    public function update(\n        JudgeUpdateRequest $request,\n        Judge $judge\n    ): JudgeResource {\n        $this->authorize('update', $judge);\n\n        $validated = $request->validated();\n\n        $judge->update($validated);\n\n        return new JudgeResource($judge);\n    }\n\n    public function destroy(Request $request, Judge $judge): Response\n    {\n        $this->authorize('delete', $judge);\n\n        $judge->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:133","path":"\\app\\Http\\Controllers\\Api\\JudgeController.php"},"\\tests\\Feature\\Api\\JudgeTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Judge;\n\nuse App\\Models\\Court;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass JudgeTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_judges_list(): void\n    {\n        $judges = Judge::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.judges.index'));\n\n        $response->assertOk()->assertSee($judges[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_judge(): void\n    {\n        $data = Judge::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.judges.store'), $data);\n\n        $this->assertDatabaseHas('judges', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_judge(): void\n    {\n        $judge = Judge::factory()->create();\n\n        $court = Court::factory()->create();\n\n        $data = [\n            'judgeID' => $this->faker->text(255),\n            'name' => $this->faker->name(),\n            'courtTyep' => $this->faker->text(255),\n            'Address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'Emptype' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n            'court_id' => $court->id,\n        ];\n\n        $response = $this->putJson(route('api.judges.update', $judge), $data);\n\n        $data['id'] = $judge->id;\n\n        $this->assertDatabaseHas('judges', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_judge(): void\n    {\n        $judge = Judge::factory()->create();\n\n        $response = $this->deleteJson(route('api.judges.destroy', $judge));\n\n        $this->assertModelMissing($judge);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:133","path":"\\tests\\Feature\\Api\\JudgeTest.php"},"\\app\\Http\\Controllers\\Api\\JudgeCaseHearsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Judge;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CaseHearResource;\nuse App\\Http\\Resources\\CaseHearCollection;\n\nclass JudgeCaseHearsController extends Controller\n{\n    public function index(Request $request, Judge $judge): CaseHearCollection\n    {\n        $this->authorize('view', $judge);\n\n        $search = $request->get('search', '');\n\n        $caseHears = $judge\n            ->caseHears()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new CaseHearCollection($caseHears);\n    }\n\n    public function store(Request $request, Judge $judge): CaseHearResource\n    {\n        $this->authorize('create', CaseHear::class);\n\n        $validated = $request->validate([\n            'court_id' => ['required', 'exists:courts,id'],\n            'attorney_id' => ['required', 'exists:attorneys,id'],\n            'case_charge_id' => ['required', 'exists:case_charges,id'],\n            'wittness_id' => ['required', 'exists:wittnesses,id'],\n            'CaseID' => ['required', 'max:255', 'string'],\n            'casename' => ['required', 'max:255', 'string'],\n            'fileNumber' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'location' => ['required', 'max:255', 'string'],\n            'caseStartDate' => ['required', 'date'],\n            'description' => ['required', 'max:255', 'string'],\n        ]);\n\n        $caseHear = $judge->caseHears()->create($validated);\n\n        return new CaseHearResource($caseHear);\n    }\n}\n","module":"crud:133","path":"\\app\\Http\\Controllers\\Api\\JudgeCaseHearsController.php"},"\\tests\\Feature\\Api\\JudgeCaseHearsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Judge;\nuse App\\Models\\CaseHear;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass JudgeCaseHearsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_judge_case_hears(): void\n    {\n        $judge = Judge::factory()->create();\n        $caseHears = CaseHear::factory()\n            ->count(2)\n            ->create([\n                'judge_id' => $judge->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.judges.case-hears.index', $judge)\n        );\n\n        $response->assertOk()->assertSee($caseHears[0]->CaseID);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_judge_case_hears(): void\n    {\n        $judge = Judge::factory()->create();\n        $data = CaseHear::factory()\n            ->make([\n                'judge_id' => $judge->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.judges.case-hears.store', $judge),\n            $data\n        );\n\n        $this->assertDatabaseHas('case_hears', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $caseHear = CaseHear::latest('id')->first();\n\n        $this->assertEquals($judge->id, $caseHear->judge_id);\n    }\n}\n","module":"crud:133","path":"\\tests\\Feature\\Api\\JudgeCaseHearsTest.php"},"\\app\\Http\\Controllers\\Api\\BarController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Bar;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Resources\\BarResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\BarCollection;\nuse App\\Http\\Requests\\BarStoreRequest;\nuse App\\Http\\Requests\\BarUpdateRequest;\n\nclass BarController extends Controller\n{\n    public function index(Request $request): BarCollection\n    {\n        $this->authorize('view-any', Bar::class);\n\n        $search = $request->get('search', '');\n\n        $bars = Bar::search($search)\n            ->latest()\n            ->paginate();\n\n        return new BarCollection($bars);\n    }\n\n    public function store(BarStoreRequest $request): BarResource\n    {\n        $this->authorize('create', Bar::class);\n\n        $validated = $request->validated();\n\n        $bar = Bar::create($validated);\n\n        return new BarResource($bar);\n    }\n\n    public function show(Request $request, Bar $bar): BarResource\n    {\n        $this->authorize('view', $bar);\n\n        return new BarResource($bar);\n    }\n\n    public function update(BarUpdateRequest $request, Bar $bar): BarResource\n    {\n        $this->authorize('update', $bar);\n\n        $validated = $request->validated();\n\n        $bar->update($validated);\n\n        return new BarResource($bar);\n    }\n\n    public function destroy(Request $request, Bar $bar): Response\n    {\n        $this->authorize('delete', $bar);\n\n        $bar->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:136","path":"\\app\\Http\\Controllers\\Api\\BarController.php"},"\\tests\\Feature\\Api\\BarTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\Bar;\nuse App\\Models\\User;\n\nuse App\\Models\\Court;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass BarTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_bars_list(): void\n    {\n        $bars = Bar::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.bars.index'));\n\n        $response->assertOk()->assertSee($bars[0]->address);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_bar(): void\n    {\n        $data = Bar::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.bars.store'), $data);\n\n        $this->assertDatabaseHas('bars', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_bar(): void\n    {\n        $bar = Bar::factory()->create();\n\n        $court = Court::factory()->create();\n\n        $data = [\n            'address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'location' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n            'court_id' => $court->id,\n        ];\n\n        $response = $this->putJson(route('api.bars.update', $bar), $data);\n\n        $data['id'] = $bar->id;\n\n        $this->assertDatabaseHas('bars', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_bar(): void\n    {\n        $bar = Bar::factory()->create();\n\n        $response = $this->deleteJson(route('api.bars.destroy', $bar));\n\n        $this->assertModelMissing($bar);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:136","path":"\\tests\\Feature\\Api\\BarTest.php"},"\\app\\Http\\Resources\\CaseChargeResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass CaseChargeResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:71","path":"\\app\\Http\\Resources\\CaseChargeResource.php"},"\\app\\Http\\Resources\\CaseChargeCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass CaseChargeCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:71","path":"\\app\\Http\\Resources\\CaseChargeCollection.php"},"\\app\\Http\\Controllers\\Api\\CaseChargeController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\CaseCharge;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CaseChargeResource;\nuse App\\Http\\Resources\\CaseChargeCollection;\nuse App\\Http\\Requests\\CaseChargeStoreRequest;\nuse App\\Http\\Requests\\CaseChargeUpdateRequest;\n\nclass CaseChargeController extends Controller\n{\n    public function index(Request $request): CaseChargeCollection\n    {\n        $this->authorize('view-any', CaseCharge::class);\n\n        $search = $request->get('search', '');\n\n        $caseCharges = CaseCharge::search($search)\n            ->latest()\n            ->paginate();\n\n        return new CaseChargeCollection($caseCharges);\n    }\n\n    public function store(CaseChargeStoreRequest $request): CaseChargeResource\n    {\n        $this->authorize('create', CaseCharge::class);\n\n        $validated = $request->validated();\n\n        $caseCharge = CaseCharge::create($validated);\n\n        return new CaseChargeResource($caseCharge);\n    }\n\n    public function show(\n        Request $request,\n        CaseCharge $caseCharge\n    ): CaseChargeResource {\n        $this->authorize('view', $caseCharge);\n\n        return new CaseChargeResource($caseCharge);\n    }\n\n    public function update(\n        CaseChargeUpdateRequest $request,\n        CaseCharge $caseCharge\n    ): CaseChargeResource {\n        $this->authorize('update', $caseCharge);\n\n        $validated = $request->validated();\n\n        $caseCharge->update($validated);\n\n        return new CaseChargeResource($caseCharge);\n    }\n\n    public function destroy(Request $request, CaseCharge $caseCharge): Response\n    {\n        $this->authorize('delete', $caseCharge);\n\n        $caseCharge->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:137","path":"\\app\\Http\\Controllers\\Api\\CaseChargeController.php"},"\\tests\\Feature\\Api\\CaseChargeTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\CaseCharge;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CaseChargeTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_case_charges_list(): void\n    {\n        $caseCharges = CaseCharge::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.case-charges.index'));\n\n        $response->assertOk()->assertSee($caseCharges[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_case_charge(): void\n    {\n        $data = CaseCharge::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.case-charges.store'), $data);\n\n        $this->assertDatabaseHas('case_charges', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_case_charge(): void\n    {\n        $caseCharge = CaseCharge::factory()->create();\n\n        $data = [\n            'deptName' => $this->faker->text(255),\n            'mid' => $this->faker->text(255),\n            'rank' => $this->faker->text(255),\n            'name' => $this->faker->name(),\n            'address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'crimeDescription' => $this->faker->text(),\n            'crimeDate' => $this->faker->dateTime(),\n            'ChargeDate' => $this->faker->dateTime(),\n        ];\n\n        $response = $this->putJson(\n            route('api.case-charges.update', $caseCharge),\n            $data\n        );\n\n        $data['id'] = $caseCharge->id;\n\n        $this->assertDatabaseHas('case_charges', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_case_charge(): void\n    {\n        $caseCharge = CaseCharge::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.case-charges.destroy', $caseCharge)\n        );\n\n        $this->assertModelMissing($caseCharge);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:137","path":"\\tests\\Feature\\Api\\CaseChargeTest.php"},"\\app\\Http\\Controllers\\Api\\CaseChargeCaseHearsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\CaseCharge;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CaseHearResource;\nuse App\\Http\\Resources\\CaseHearCollection;\n\nclass CaseChargeCaseHearsController extends Controller\n{\n    public function index(\n        Request $request,\n        CaseCharge $caseCharge\n    ): CaseHearCollection {\n        $this->authorize('view', $caseCharge);\n\n        $search = $request->get('search', '');\n\n        $caseHears = $caseCharge\n            ->caseHears()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new CaseHearCollection($caseHears);\n    }\n\n    public function store(\n        Request $request,\n        CaseCharge $caseCharge\n    ): CaseHearResource {\n        $this->authorize('create', CaseHear::class);\n\n        $validated = $request->validate([\n            'court_id' => ['required', 'exists:courts,id'],\n            'judge_id' => ['required', 'exists:judges,id'],\n            'attorney_id' => ['required', 'exists:attorneys,id'],\n            'wittness_id' => ['required', 'exists:wittnesses,id'],\n            'CaseID' => ['required', 'max:255', 'string'],\n            'casename' => ['required', 'max:255', 'string'],\n            'fileNumber' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'location' => ['required', 'max:255', 'string'],\n            'caseStartDate' => ['required', 'date'],\n            'description' => ['required', 'max:255', 'string'],\n        ]);\n\n        $caseHear = $caseCharge->caseHears()->create($validated);\n\n        return new CaseHearResource($caseHear);\n    }\n}\n","module":"crud:137","path":"\\app\\Http\\Controllers\\Api\\CaseChargeCaseHearsController.php"},"\\tests\\Feature\\Api\\CaseChargeCaseHearsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\CaseHear;\nuse App\\Models\\CaseCharge;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CaseChargeCaseHearsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_case_charge_case_hears(): void\n    {\n        $caseCharge = CaseCharge::factory()->create();\n        $caseHears = CaseHear::factory()\n            ->count(2)\n            ->create([\n                'case_charge_id' => $caseCharge->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.case-charges.case-hears.index', $caseCharge)\n        );\n\n        $response->assertOk()->assertSee($caseHears[0]->CaseID);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_case_charge_case_hears(): void\n    {\n        $caseCharge = CaseCharge::factory()->create();\n        $data = CaseHear::factory()\n            ->make([\n                'case_charge_id' => $caseCharge->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.case-charges.case-hears.store', $caseCharge),\n            $data\n        );\n\n        $this->assertDatabaseHas('case_hears', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $caseHear = CaseHear::latest('id')->first();\n\n        $this->assertEquals($caseCharge->id, $caseHear->case_charge_id);\n    }\n}\n","module":"crud:137","path":"\\tests\\Feature\\Api\\CaseChargeCaseHearsTest.php"},"\\app\\Http\\Resources\\WittnessResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass WittnessResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:70","path":"\\app\\Http\\Resources\\WittnessResource.php"},"\\app\\Http\\Resources\\WittnessCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass WittnessCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:70","path":"\\app\\Http\\Resources\\WittnessCollection.php"},"\\app\\Http\\Controllers\\Api\\WittnessController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Wittness;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\WittnessResource;\nuse App\\Http\\Resources\\WittnessCollection;\nuse App\\Http\\Requests\\WittnessStoreRequest;\nuse App\\Http\\Requests\\WittnessUpdateRequest;\n\nclass WittnessController extends Controller\n{\n    public function index(Request $request): WittnessCollection\n    {\n        $this->authorize('view-any', Wittness::class);\n\n        $search = $request->get('search', '');\n\n        $wittnesses = Wittness::search($search)\n            ->latest()\n            ->paginate();\n\n        return new WittnessCollection($wittnesses);\n    }\n\n    public function store(WittnessStoreRequest $request): WittnessResource\n    {\n        $this->authorize('create', Wittness::class);\n\n        $validated = $request->validated();\n\n        $wittness = Wittness::create($validated);\n\n        return new WittnessResource($wittness);\n    }\n\n    public function show(Request $request, Wittness $wittness): WittnessResource\n    {\n        $this->authorize('view', $wittness);\n\n        return new WittnessResource($wittness);\n    }\n\n    public function update(\n        WittnessUpdateRequest $request,\n        Wittness $wittness\n    ): WittnessResource {\n        $this->authorize('update', $wittness);\n\n        $validated = $request->validated();\n\n        $wittness->update($validated);\n\n        return new WittnessResource($wittness);\n    }\n\n    public function destroy(Request $request, Wittness $wittness): Response\n    {\n        $this->authorize('delete', $wittness);\n\n        $wittness->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:139","path":"\\app\\Http\\Controllers\\Api\\WittnessController.php"},"\\tests\\Feature\\Api\\WittnessTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Wittness;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass WittnessTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_wittnesses_list(): void\n    {\n        $wittnesses = Wittness::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.wittnesses.index'));\n\n        $response->assertOk()->assertSee($wittnesses[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_wittness(): void\n    {\n        $data = Wittness::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.wittnesses.store'), $data);\n\n        $this->assertDatabaseHas('wittnesses', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_wittness(): void\n    {\n        $wittness = Wittness::factory()->create();\n\n        $data = [\n            'wittnessID' => $this->faker->text(255),\n            'name' => $this->faker->name(),\n            'address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'wittnessType' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->putJson(\n            route('api.wittnesses.update', $wittness),\n            $data\n        );\n\n        $data['id'] = $wittness->id;\n\n        $this->assertDatabaseHas('wittnesses', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_wittness(): void\n    {\n        $wittness = Wittness::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.wittnesses.destroy', $wittness)\n        );\n\n        $this->assertModelMissing($wittness);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:139","path":"\\tests\\Feature\\Api\\WittnessTest.php"},"\\app\\Http\\Controllers\\Api\\WittnessCaseHearsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Wittness;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CaseHearResource;\nuse App\\Http\\Resources\\CaseHearCollection;\n\nclass WittnessCaseHearsController extends Controller\n{\n    public function index(\n        Request $request,\n        Wittness $wittness\n    ): CaseHearCollection {\n        $this->authorize('view', $wittness);\n\n        $search = $request->get('search', '');\n\n        $caseHears = $wittness\n            ->caseHears()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new CaseHearCollection($caseHears);\n    }\n\n    public function store(\n        Request $request,\n        Wittness $wittness\n    ): CaseHearResource {\n        $this->authorize('create', CaseHear::class);\n\n        $validated = $request->validate([\n            'court_id' => ['required', 'exists:courts,id'],\n            'judge_id' => ['required', 'exists:judges,id'],\n            'attorney_id' => ['required', 'exists:attorneys,id'],\n            'case_charge_id' => ['required', 'exists:case_charges,id'],\n            'CaseID' => ['required', 'max:255', 'string'],\n            'casename' => ['required', 'max:255', 'string'],\n            'fileNumber' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'state' => ['required', 'max:255', 'string'],\n            'location' => ['required', 'max:255', 'string'],\n            'caseStartDate' => ['required', 'date'],\n            'description' => ['required', 'max:255', 'string'],\n        ]);\n\n        $caseHear = $wittness->caseHears()->create($validated);\n\n        return new CaseHearResource($caseHear);\n    }\n}\n","module":"crud:139","path":"\\app\\Http\\Controllers\\Api\\WittnessCaseHearsController.php"},"\\tests\\Feature\\Api\\WittnessCaseHearsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Wittness;\nuse App\\Models\\CaseHear;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass WittnessCaseHearsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_wittness_case_hears(): void\n    {\n        $wittness = Wittness::factory()->create();\n        $caseHears = CaseHear::factory()\n            ->count(2)\n            ->create([\n                'wittness_id' => $wittness->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.wittnesses.case-hears.index', $wittness)\n        );\n\n        $response->assertOk()->assertSee($caseHears[0]->CaseID);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_wittness_case_hears(): void\n    {\n        $wittness = Wittness::factory()->create();\n        $data = CaseHear::factory()\n            ->make([\n                'wittness_id' => $wittness->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.wittnesses.case-hears.store', $wittness),\n            $data\n        );\n\n        $this->assertDatabaseHas('case_hears', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $caseHear = CaseHear::latest('id')->first();\n\n        $this->assertEquals($wittness->id, $caseHear->wittness_id);\n    }\n}\n","module":"crud:139","path":"\\tests\\Feature\\Api\\WittnessCaseHearsTest.php"},"\\app\\Http\\Controllers\\Api\\CaseHearController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\CaseHear;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CaseHearResource;\nuse App\\Http\\Resources\\CaseHearCollection;\nuse App\\Http\\Requests\\CaseHearStoreRequest;\nuse App\\Http\\Requests\\CaseHearUpdateRequest;\n\nclass CaseHearController extends Controller\n{\n    public function index(Request $request): CaseHearCollection\n    {\n        $this->authorize('view-any', CaseHear::class);\n\n        $search = $request->get('search', '');\n\n        $caseHears = CaseHear::search($search)\n            ->latest()\n            ->paginate();\n\n        return new CaseHearCollection($caseHears);\n    }\n\n    public function store(CaseHearStoreRequest $request): CaseHearResource\n    {\n        $this->authorize('create', CaseHear::class);\n\n        $validated = $request->validated();\n\n        $caseHear = CaseHear::create($validated);\n\n        return new CaseHearResource($caseHear);\n    }\n\n    public function show(Request $request, CaseHear $caseHear): CaseHearResource\n    {\n        $this->authorize('view', $caseHear);\n\n        return new CaseHearResource($caseHear);\n    }\n\n    public function update(\n        CaseHearUpdateRequest $request,\n        CaseHear $caseHear\n    ): CaseHearResource {\n        $this->authorize('update', $caseHear);\n\n        $validated = $request->validated();\n\n        $caseHear->update($validated);\n\n        return new CaseHearResource($caseHear);\n    }\n\n    public function destroy(Request $request, CaseHear $caseHear): Response\n    {\n        $this->authorize('delete', $caseHear);\n\n        $caseHear->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:140","path":"\\app\\Http\\Controllers\\Api\\CaseHearController.php"},"\\tests\\Feature\\Api\\CaseHearTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\CaseHear;\n\nuse App\\Models\\Court;\nuse App\\Models\\Judge;\nuse App\\Models\\Attorney;\nuse App\\Models\\Wittness;\nuse App\\Models\\CaseCharge;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CaseHearTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_case_hears_list(): void\n    {\n        $caseHears = CaseHear::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.case-hears.index'));\n\n        $response->assertOk()->assertSee($caseHears[0]->CaseID);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_case_hear(): void\n    {\n        $data = CaseHear::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.case-hears.store'), $data);\n\n        $this->assertDatabaseHas('case_hears', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_case_hear(): void\n    {\n        $caseHear = CaseHear::factory()->create();\n\n        $court = Court::factory()->create();\n        $judge = Judge::factory()->create();\n        $attorney = Attorney::factory()->create();\n        $caseCharge = CaseCharge::factory()->create();\n        $wittness = Wittness::factory()->create();\n\n        $data = [\n            'CaseID' => $this->faker->text(255),\n            'casename' => $this->faker->text(255),\n            'fileNumber' => $this->faker->text(255),\n            'address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'location' => $this->faker->text(255),\n            'caseStartDate' => $this->faker->dateTime(),\n            'description' => $this->faker->sentence(15),\n            'court_id' => $court->id,\n            'judge_id' => $judge->id,\n            'attorney_id' => $attorney->id,\n            'case_charge_id' => $caseCharge->id,\n            'wittness_id' => $wittness->id,\n        ];\n\n        $response = $this->putJson(\n            route('api.case-hears.update', $caseHear),\n            $data\n        );\n\n        $data['id'] = $caseHear->id;\n\n        $this->assertDatabaseHas('case_hears', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_case_hear(): void\n    {\n        $caseHear = CaseHear::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.case-hears.destroy', $caseHear)\n        );\n\n        $this->assertModelMissing($caseHear);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:140","path":"\\tests\\Feature\\Api\\CaseHearTest.php"},"\\app\\Http\\Resources\\DecisionResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass DecisionResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:73","path":"\\app\\Http\\Resources\\DecisionResource.php"},"\\app\\Http\\Resources\\DecisionCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass DecisionCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:73","path":"\\app\\Http\\Resources\\DecisionCollection.php"},"\\app\\Http\\Controllers\\Api\\CaseHearDecisionsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\CaseHear;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\DecisionResource;\nuse App\\Http\\Resources\\DecisionCollection;\n\nclass CaseHearDecisionsController extends Controller\n{\n    public function index(\n        Request $request,\n        CaseHear $caseHear\n    ): DecisionCollection {\n        $this->authorize('view', $caseHear);\n\n        $search = $request->get('search', '');\n\n        $decisions = $caseHear\n            ->decisions()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new DecisionCollection($decisions);\n    }\n\n    public function store(\n        Request $request,\n        CaseHear $caseHear\n    ): DecisionResource {\n        $this->authorize('create', Decision::class);\n\n        $validated = $request->validate([\n            'decisionDate' => ['required', 'date'],\n            'Decisiontype' => ['required', 'max:255', 'string'],\n            'Description' => ['required', 'max:255', 'string'],\n        ]);\n\n        $decision = $caseHear->decisions()->create($validated);\n\n        return new DecisionResource($decision);\n    }\n}\n","module":"crud:140","path":"\\app\\Http\\Controllers\\Api\\CaseHearDecisionsController.php"},"\\tests\\Feature\\Api\\CaseHearDecisionsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\CaseHear;\nuse App\\Models\\Decision;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CaseHearDecisionsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_case_hear_decisions(): void\n    {\n        $caseHear = CaseHear::factory()->create();\n        $decisions = Decision::factory()\n            ->count(2)\n            ->create([\n                'case_hear_id' => $caseHear->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.case-hears.decisions.index', $caseHear)\n        );\n\n        $response->assertOk()->assertSee($decisions[0]->Decisiontype);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_case_hear_decisions(): void\n    {\n        $caseHear = CaseHear::factory()->create();\n        $data = Decision::factory()\n            ->make([\n                'case_hear_id' => $caseHear->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.case-hears.decisions.store', $caseHear),\n            $data\n        );\n\n        $this->assertDatabaseHas('decisions', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $decision = Decision::latest('id')->first();\n\n        $this->assertEquals($caseHear->id, $decision->case_hear_id);\n    }\n}\n","module":"crud:140","path":"\\tests\\Feature\\Api\\CaseHearDecisionsTest.php"},"\\app\\Http\\Resources\\AppointmentResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass AppointmentResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:74","path":"\\app\\Http\\Resources\\AppointmentResource.php"},"\\app\\Http\\Resources\\AppointmentCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass AppointmentCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:74","path":"\\app\\Http\\Resources\\AppointmentCollection.php"},"\\app\\Http\\Controllers\\Api\\CaseHearAppointmentsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\CaseHear;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\AppointmentResource;\nuse App\\Http\\Resources\\AppointmentCollection;\n\nclass CaseHearAppointmentsController extends Controller\n{\n    public function index(\n        Request $request,\n        CaseHear $caseHear\n    ): AppointmentCollection {\n        $this->authorize('view', $caseHear);\n\n        $search = $request->get('search', '');\n\n        $appointments = $caseHear\n            ->appointments()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new AppointmentCollection($appointments);\n    }\n\n    public function store(\n        Request $request,\n        CaseHear $caseHear\n    ): AppointmentResource {\n        $this->authorize('create', Appointment::class);\n\n        $validated = $request->validate([\n            'date' => ['required', 'date'],\n            'Description' => ['required', 'max:255', 'string'],\n        ]);\n\n        $appointment = $caseHear->appointments()->create($validated);\n\n        return new AppointmentResource($appointment);\n    }\n}\n","module":"crud:140","path":"\\app\\Http\\Controllers\\Api\\CaseHearAppointmentsController.php"},"\\tests\\Feature\\Api\\CaseHearAppointmentsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\CaseHear;\nuse App\\Models\\Appointment;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CaseHearAppointmentsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_case_hear_appointments(): void\n    {\n        $caseHear = CaseHear::factory()->create();\n        $appointments = Appointment::factory()\n            ->count(2)\n            ->create([\n                'case_hear_id' => $caseHear->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.case-hears.appointments.index', $caseHear)\n        );\n\n        $response->assertOk()->assertSee($appointments[0]->Description);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_case_hear_appointments(): void\n    {\n        $caseHear = CaseHear::factory()->create();\n        $data = Appointment::factory()\n            ->make([\n                'case_hear_id' => $caseHear->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.case-hears.appointments.store', $caseHear),\n            $data\n        );\n\n        $this->assertDatabaseHas('appointments', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $appointment = Appointment::latest('id')->first();\n\n        $this->assertEquals($caseHear->id, $appointment->case_hear_id);\n    }\n}\n","module":"crud:140","path":"\\tests\\Feature\\Api\\CaseHearAppointmentsTest.php"},"\\app\\Http\\Controllers\\Api\\AppointmentController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Appointment;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\AppointmentResource;\nuse App\\Http\\Resources\\AppointmentCollection;\nuse App\\Http\\Requests\\AppointmentStoreRequest;\nuse App\\Http\\Requests\\AppointmentUpdateRequest;\n\nclass AppointmentController extends Controller\n{\n    public function index(Request $request): AppointmentCollection\n    {\n        $this->authorize('view-any', Appointment::class);\n\n        $search = $request->get('search', '');\n\n        $appointments = Appointment::search($search)\n            ->latest()\n            ->paginate();\n\n        return new AppointmentCollection($appointments);\n    }\n\n    public function store(AppointmentStoreRequest $request): AppointmentResource\n    {\n        $this->authorize('create', Appointment::class);\n\n        $validated = $request->validated();\n\n        $appointment = Appointment::create($validated);\n\n        return new AppointmentResource($appointment);\n    }\n\n    public function show(\n        Request $request,\n        Appointment $appointment\n    ): AppointmentResource {\n        $this->authorize('view', $appointment);\n\n        return new AppointmentResource($appointment);\n    }\n\n    public function update(\n        AppointmentUpdateRequest $request,\n        Appointment $appointment\n    ): AppointmentResource {\n        $this->authorize('update', $appointment);\n\n        $validated = $request->validated();\n\n        $appointment->update($validated);\n\n        return new AppointmentResource($appointment);\n    }\n\n    public function destroy(\n        Request $request,\n        Appointment $appointment\n    ): Response {\n        $this->authorize('delete', $appointment);\n\n        $appointment->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:141","path":"\\app\\Http\\Controllers\\Api\\AppointmentController.php"},"\\tests\\Feature\\Api\\AppointmentTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Appointment;\n\nuse App\\Models\\CaseHear;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AppointmentTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_appointments_list(): void\n    {\n        $appointments = Appointment::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.appointments.index'));\n\n        $response->assertOk()->assertSee($appointments[0]->Description);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_appointment(): void\n    {\n        $data = Appointment::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.appointments.store'), $data);\n\n        $this->assertDatabaseHas('appointments', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_appointment(): void\n    {\n        $appointment = Appointment::factory()->create();\n\n        $caseHear = CaseHear::factory()->create();\n\n        $data = [\n            'date' => $this->faker->dateTime(),\n            'Description' => $this->faker->sentence(15),\n            'case_hear_id' => $caseHear->id,\n        ];\n\n        $response = $this->putJson(\n            route('api.appointments.update', $appointment),\n            $data\n        );\n\n        $data['id'] = $appointment->id;\n\n        $this->assertDatabaseHas('appointments', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_appointment(): void\n    {\n        $appointment = Appointment::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.appointments.destroy', $appointment)\n        );\n\n        $this->assertModelMissing($appointment);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:141","path":"\\tests\\Feature\\Api\\AppointmentTest.php"},"\\app\\Http\\Controllers\\Api\\DecisionController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Decision;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\DecisionResource;\nuse App\\Http\\Resources\\DecisionCollection;\nuse App\\Http\\Requests\\DecisionStoreRequest;\nuse App\\Http\\Requests\\DecisionUpdateRequest;\n\nclass DecisionController extends Controller\n{\n    public function index(Request $request): DecisionCollection\n    {\n        $this->authorize('view-any', Decision::class);\n\n        $search = $request->get('search', '');\n\n        $decisions = Decision::search($search)\n            ->latest()\n            ->paginate();\n\n        return new DecisionCollection($decisions);\n    }\n\n    public function store(DecisionStoreRequest $request): DecisionResource\n    {\n        $this->authorize('create', Decision::class);\n\n        $validated = $request->validated();\n\n        $decision = Decision::create($validated);\n\n        return new DecisionResource($decision);\n    }\n\n    public function show(Request $request, Decision $decision): DecisionResource\n    {\n        $this->authorize('view', $decision);\n\n        return new DecisionResource($decision);\n    }\n\n    public function update(\n        DecisionUpdateRequest $request,\n        Decision $decision\n    ): DecisionResource {\n        $this->authorize('update', $decision);\n\n        $validated = $request->validated();\n\n        $decision->update($validated);\n\n        return new DecisionResource($decision);\n    }\n\n    public function destroy(Request $request, Decision $decision): Response\n    {\n        $this->authorize('delete', $decision);\n\n        $decision->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:142","path":"\\app\\Http\\Controllers\\Api\\DecisionController.php"},"\\tests\\Feature\\Api\\DecisionTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Decision;\n\nuse App\\Models\\CaseHear;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass DecisionTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_decisions_list(): void\n    {\n        $decisions = Decision::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.decisions.index'));\n\n        $response->assertOk()->assertSee($decisions[0]->Decisiontype);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_decision(): void\n    {\n        $data = Decision::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.decisions.store'), $data);\n\n        $this->assertDatabaseHas('decisions', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_decision(): void\n    {\n        $decision = Decision::factory()->create();\n\n        $caseHear = CaseHear::factory()->create();\n\n        $data = [\n            'decisionDate' => $this->faker->dateTime(),\n            'Decisiontype' => $this->faker->text(255),\n            'Description' => $this->faker->sentence(15),\n            'case_hear_id' => $caseHear->id,\n        ];\n\n        $response = $this->putJson(\n            route('api.decisions.update', $decision),\n            $data\n        );\n\n        $data['id'] = $decision->id;\n\n        $this->assertDatabaseHas('decisions', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_decision(): void\n    {\n        $decision = Decision::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.decisions.destroy', $decision)\n        );\n\n        $this->assertModelMissing($decision);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:142","path":"\\tests\\Feature\\Api\\DecisionTest.php"},"\\lang\\en\\crud.php":{"deleteOnGeneration":true,"content":"<?php\n\nreturn [\n    'common' => [\n        'actions' => 'Actions',\n        'create' => 'Create',\n        'edit' => 'Edit',\n        'update' => 'Update',\n        'new' => 'New',\n        'cancel' => 'Cancel',\n        'attach' => 'Attach',\n        'detach' => 'Detach',\n        'save' => 'Save',\n        'delete' => 'Delete',\n        'delete_selected' => 'Delete selected',\n        'search' => 'Search...',\n        'back' => 'Back to Index',\n        'are_you_sure' => 'Are you sure?',\n        'no_items_found' => 'No items found',\n        'created' => 'Successfully created',\n        'saved' => 'Saved successfully',\n        'removed' => 'Successfully removed',\n    ],\n\n    'users' => [\n        'name' => 'Users',\n        'index_title' => 'Users List',\n        'new_title' => 'New User',\n        'create_title' => 'Create User',\n        'edit_title' => 'Edit User',\n        'show_title' => 'Show User',\n        'inputs' => [\n            'name' => 'Name',\n            'email' => 'Email',\n            'password' => 'Password',\n            'description' => 'Description',\n        ],\n    ],\n\n    'courts' => [\n        'name' => 'Courts',\n        'index_title' => 'Courts List',\n        'new_title' => 'New Court',\n        'create_title' => 'Create Court',\n        'edit_title' => 'Edit Court',\n        'show_title' => 'Show Court',\n        'inputs' => [\n            'courtID' => 'Court Id',\n            'name' => 'Name',\n            'courtType' => 'Court Type',\n            'speciality' => 'Speciality',\n            'description' => 'Description',\n        ],\n    ],\n\n    'attorneys' => [\n        'name' => 'Attorneys',\n        'index_title' => 'Attorneys List',\n        'new_title' => 'New Attorney',\n        'create_title' => 'Create Attorney',\n        'edit_title' => 'Edit Attorney',\n        'show_title' => 'Show Attorney',\n        'inputs' => [\n            'court_id' => 'Court',\n            'attorneyID' => 'Attorney Id',\n            'Name' => 'Name',\n            'Address' => 'Address',\n            'State' => 'State',\n            'courtType' => 'Court Type',\n            'EmpType' => 'Emp Type',\n            'description' => 'Description',\n        ],\n    ],\n\n    'judges' => [\n        'name' => 'Judges',\n        'index_title' => 'Judges List',\n        'new_title' => 'New Judge',\n        'create_title' => 'Create Judge',\n        'edit_title' => 'Edit Judge',\n        'show_title' => 'Show Judge',\n        'inputs' => [\n            'court_id' => 'Court',\n            'judgeID' => 'Judge Id',\n            'name' => 'Name',\n            'Address' => 'Address',\n            'state' => 'State',\n            'courtTyep' => 'Court Tyep',\n            'Emptype' => 'Emptype',\n            'description' => 'Description',\n        ],\n    ],\n\n    'court_attorneys' => [\n        'name' => 'Court Attorneys',\n        'index_title' => 'Attorneys List',\n        'new_title' => 'New Attorney',\n        'create_title' => 'Create Attorney',\n        'edit_title' => 'Edit Attorney',\n        'show_title' => 'Show Attorney',\n        'inputs' => [\n            'attorneyID' => 'Attorney Id',\n            'Name' => 'Name',\n            'courtType' => 'Court Type',\n            'Address' => 'Address',\n            'State' => 'State',\n            'EmpType' => 'Emp Type',\n            'description' => 'Description',\n        ],\n    ],\n\n    'court_judges' => [\n        'name' => 'Court Judges',\n        'index_title' => 'Judges List',\n        'new_title' => 'New Judge',\n        'create_title' => 'Create Judge',\n        'edit_title' => 'Edit Judge',\n        'show_title' => 'Show Judge',\n        'inputs' => [\n            'judgeID' => 'Judge Id',\n            'name' => 'Name',\n            'courtTyep' => 'Court Tyep',\n            'Address' => 'Address',\n            'state' => 'State',\n            'Emptype' => 'Emptype',\n            'description' => 'Description',\n        ],\n    ],\n\n    'bars' => [\n        'name' => 'Bars',\n        'index_title' => 'Bars List',\n        'new_title' => 'New Bar',\n        'create_title' => 'Create Bar',\n        'edit_title' => 'Edit Bar',\n        'show_title' => 'Show Bar',\n        'inputs' => [\n            'court_id' => 'Court',\n            'address' => 'Address',\n            'state' => 'State',\n            'location' => 'Location',\n            'description' => 'Description',\n        ],\n    ],\n\n    'case_charges' => [\n        'name' => 'Case Charges',\n        'index_title' => 'CaseCharges List',\n        'new_title' => 'New Case charge',\n        'create_title' => 'Create CaseCharge',\n        'edit_title' => 'Edit CaseCharge',\n        'show_title' => 'Show CaseCharge',\n        'inputs' => [\n            'deptName' => 'Dept Name',\n            'mid' => 'Mid',\n            'rank' => 'Rank',\n            'name' => 'Name',\n            'address' => 'Address',\n            'state' => 'State',\n            'crimeDescription' => 'Crime Description',\n            'crimeDate' => 'Crime Date',\n            'ChargeDate' => 'Charge Date',\n        ],\n    ],\n\n    'court_bars' => [\n        'name' => 'Court Bars',\n        'index_title' => 'Bars List',\n        'new_title' => 'New Bar',\n        'create_title' => 'Create Bar',\n        'edit_title' => 'Edit Bar',\n        'show_title' => 'Show Bar',\n        'inputs' => [\n            'address' => 'Address',\n            'state' => 'State',\n            'location' => 'Location',\n            'description' => 'Description',\n        ],\n    ],\n\n    'wittnesses' => [\n        'name' => 'Wittnesses',\n        'index_title' => 'Wittnesses List',\n        'new_title' => 'New Wittness',\n        'create_title' => 'Create Wittness',\n        'edit_title' => 'Edit Wittness',\n        'show_title' => 'Show Wittness',\n        'inputs' => [\n            'wittnessID' => 'Wittness Id',\n            'name' => 'Name',\n            'address' => 'Address',\n            'state' => 'State',\n            'wittnessType' => 'Wittness Type',\n            'description' => 'Description',\n        ],\n    ],\n\n    'case_hears' => [\n        'name' => 'Case Hears',\n        'index_title' => 'CaseHears List',\n        'new_title' => 'New Case hear',\n        'create_title' => 'Create CaseHear',\n        'edit_title' => 'Edit CaseHear',\n        'show_title' => 'Show CaseHear',\n        'inputs' => [\n            'court_id' => 'Court',\n            'judge_id' => 'Judge',\n            'attorney_id' => 'Attorney',\n            'case_charge_id' => 'Case Charge',\n            'wittness_id' => 'Wittness',\n            'CaseID' => 'Case Id',\n            'casename' => 'Casename',\n            'fileNumber' => 'File Number',\n            'address' => 'Address',\n            'state' => 'State',\n            'location' => 'Location',\n            'caseStartDate' => 'Case Start Date',\n            'description' => 'Description',\n        ],\n    ],\n\n    'appointments' => [\n        'name' => 'Appointments',\n        'index_title' => 'Appointments List',\n        'new_title' => 'New Appointment',\n        'create_title' => 'Create Appointment',\n        'edit_title' => 'Edit Appointment',\n        'show_title' => 'Show Appointment',\n        'inputs' => [\n            'case_hear_id' => 'Case Hear',\n            'date' => 'Date',\n            'Description' => 'Description',\n        ],\n    ],\n\n    'decisions' => [\n        'name' => 'Decisions',\n        'index_title' => 'Decisions List',\n        'new_title' => 'New Decision',\n        'create_title' => 'Create Decision',\n        'edit_title' => 'Edit Decision',\n        'show_title' => 'Show Decision',\n        'inputs' => [\n            'case_hear_id' => 'Case Hear',\n            'decisionDate' => 'Decision Date',\n            'Decisiontype' => 'Decisiontype',\n            'Description' => 'Description',\n        ],\n    ],\n\n    'roles' => [\n        'name' => 'Roles',\n        'index_title' => 'Roles List',\n        'create_title' => 'Create Role',\n        'edit_title' => 'Edit Role',\n        'show_title' => 'Show Role',\n        'inputs' => [\n            'name' => 'Name',\n        ],\n    ],\n\n    'permissions' => [\n        'name' => 'Permissions',\n        'index_title' => 'Permissions List',\n        'create_title' => 'Create Permission',\n        'edit_title' => 'Edit Permission',\n        'show_title' => 'Show Permission',\n        'inputs' => [\n            'name' => 'Name',\n        ],\n    ],\n];\n","module":"base","path":"\\lang\\en\\crud.php"},"\\resources\\views\\livewire\\court-attorneys-detail.blade.php":{"deleteOnGeneration":true,"content":"<div>\n    <div class=\"mb-4\">\n        @can('create', App\\Models\\Attorney::class)\n        <button class=\"btn btn-primary\" wire:click=\"newAttorney\">\n            <i class=\"icon ion-md-add\"></i>\n            @lang('crud.common.new')\n        </button>\n        @endcan @can('delete-any', App\\Models\\Attorney::class)\n        <button\n            class=\"btn btn-danger\"\n             {{ empty($selected) ? 'disabled' : '' }} \n            onclick=\"confirm('Are you sure?') || event.stopImmediatePropagation()\"\n            wire:click=\"destroySelected\"\n        >\n            <i class=\"icon ion-md-trash\"></i>\n            @lang('crud.common.delete_selected')\n        </button>\n        @endcan\n    </div>\n\n    <x-modal id=\"court-attorneys-modal\" wire:model=\"showingModal\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">{{ $modalTitle }}</h5>\n                <button\n                    type=\"button\"\n                    class=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                >\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n\n            <div class=\"modal-body\">\n                <div>\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"attorney.attorneyID\"\n                            label=\"Attorney Id\"\n                            wire:model=\"attorney.attorneyID\"\n                            maxlength=\"255\"\n                            placeholder=\"Attorney Id\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"attorney.Name\"\n                            label=\"Name\"\n                            wire:model=\"attorney.Name\"\n                            maxlength=\"255\"\n                            placeholder=\"Name\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"attorney.courtType\"\n                            label=\"Court Type\"\n                            wire:model=\"attorney.courtType\"\n                            maxlength=\"255\"\n                            placeholder=\"Court Type\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"attorney.Address\"\n                            label=\"Address\"\n                            wire:model=\"attorney.Address\"\n                            maxlength=\"255\"\n                            placeholder=\"Address\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"attorney.State\"\n                            label=\"State\"\n                            wire:model=\"attorney.State\"\n                            maxlength=\"255\"\n                            placeholder=\"State\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"attorney.EmpType\"\n                            label=\"Emp Type\"\n                            wire:model=\"attorney.EmpType\"\n                            maxlength=\"255\"\n                            placeholder=\"Emp Type\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.textarea\n                            name=\"attorney.description\"\n                            label=\"Description\"\n                            wire:model=\"attorney.description\"\n                            maxlength=\"255\"\n                        ></x-inputs.textarea>\n                    </x-inputs.group>\n                </div>\n            </div>\n\n            @if($editing) @endif\n\n            <div class=\"modal-footer\">\n                <button\n                    type=\"button\"\n                    class=\"btn btn-light float-left\"\n                    wire:click=\"$toggle('showingModal')\"\n                >\n                    <i class=\"icon ion-md-close\"></i>\n                    @lang('crud.common.cancel')\n                </button>\n\n                <button type=\"button\" class=\"btn btn-primary\" wire:click=\"save\">\n                    <i class=\"icon ion-md-save\"></i>\n                    @lang('crud.common.save')\n                </button>\n            </div>\n        </div>\n    </x-modal>\n\n    <div class=\"table-responsive\">\n        <table class=\"table table-borderless table-hover\">\n            <thead>\n                <tr>\n                    <th>\n                        <input\n                            type=\"checkbox\"\n                            wire:model=\"allSelected\"\n                            wire:click=\"toggleFullSelection\"\n                            title=\"{{ trans('crud.common.select_all') }}\"\n                        />\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_attorneys.inputs.attorneyID')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_attorneys.inputs.Name')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_attorneys.inputs.courtType')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_attorneys.inputs.Address')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_attorneys.inputs.State')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_attorneys.inputs.EmpType')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_attorneys.inputs.description')\n                    </th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody class=\"text-gray-600\">\n                @foreach ($attorneys as $attorney)\n                <tr class=\"hover:bg-gray-100\">\n                    <td class=\"text-left\">\n                        <input\n                            type=\"checkbox\"\n                            value=\"{{ $attorney->id }}\"\n                            wire:model=\"selected\"\n                        />\n                    </td>\n                    <td class=\"text-left\">\n                        {{ $attorney->attorneyID ?? '-' }}\n                    </td>\n                    <td class=\"text-left\">{{ $attorney->Name ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $attorney->courtType ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $attorney->Address ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $attorney->State ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $attorney->EmpType ?? '-' }}</td>\n                    <td class=\"text-left\">\n                        {{ $attorney->description ?? '-' }}\n                    </td>\n                    <td class=\"text-right\" style=\"width: 134px;\">\n                        <div\n                            role=\"group\"\n                            aria-label=\"Row Actions\"\n                            class=\"relative inline-flex align-middle\"\n                        >\n                            @can('update', $attorney)\n                            <button\n                                type=\"button\"\n                                class=\"btn btn-light\"\n                                wire:click=\"editAttorney({{ $attorney->id }})\"\n                            >\n                                <i class=\"icon ion-md-create\"></i>\n                            </button>\n                            @endcan\n                        </div>\n                    </td>\n                </tr>\n                @endforeach\n            </tbody>\n            <tfoot>\n                <tr>\n                    <td colspan=\"8\">{{ $attorneys->render() }}</td>\n                </tr>\n            </tfoot>\n        </table>\n    </div>\n</div>\n","module":"crud:134","path":"\\resources\\views\\livewire\\court-attorneys-detail.blade.php"},"\\app\\Http\\Livewire\\CourtAttorneysDetail.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Livewire;\n\nuse App\\Models\\Court;\nuse Livewire\\Component;\nuse App\\Models\\Attorney;\nuse Illuminate\\View\\View;\nuse Livewire\\WithPagination;\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\n\nclass CourtAttorneysDetail extends Component\n{\n    use WithPagination;\n    use AuthorizesRequests;\n\n    public Court $court;\n    public Attorney $attorney;\n\n    public $selected = [];\n    public $editing = false;\n    public $allSelected = false;\n    public $showingModal = false;\n\n    public $modalTitle = 'New Attorney';\n\n    protected $rules = [\n        'attorney.attorneyID' => ['required', 'max:255', 'string'],\n        'attorney.Name' => ['required', 'max:255', 'string'],\n        'attorney.courtType' => ['required', 'max:255', 'string'],\n        'attorney.Address' => ['required', 'max:255', 'string'],\n        'attorney.State' => ['required', 'max:255', 'string'],\n        'attorney.EmpType' => ['required', 'max:255', 'string'],\n        'attorney.description' => ['required', 'max:255', 'string'],\n    ];\n\n    public function mount(Court $court): void\n    {\n        $this->court = $court;\n        $this->resetAttorneyData();\n    }\n\n    public function resetAttorneyData(): void\n    {\n        $this->attorney = new Attorney();\n\n        $this->dispatchBrowserEvent('refresh');\n    }\n\n    public function newAttorney(): void\n    {\n        $this->editing = false;\n        $this->modalTitle = trans('crud.court_attorneys.new_title');\n        $this->resetAttorneyData();\n\n        $this->showModal();\n    }\n\n    public function editAttorney(Attorney $attorney): void\n    {\n        $this->editing = true;\n        $this->modalTitle = trans('crud.court_attorneys.edit_title');\n        $this->attorney = $attorney;\n\n        $this->dispatchBrowserEvent('refresh');\n\n        $this->showModal();\n    }\n\n    public function showModal(): void\n    {\n        $this->resetErrorBag();\n        $this->showingModal = true;\n    }\n\n    public function hideModal(): void\n    {\n        $this->showingModal = false;\n    }\n\n    public function save(): void\n    {\n        $this->validate();\n\n        if (!$this->attorney->court_id) {\n            $this->authorize('create', Attorney::class);\n\n            $this->attorney->court_id = $this->court->id;\n        } else {\n            $this->authorize('update', $this->attorney);\n        }\n\n        $this->attorney->save();\n\n        $this->hideModal();\n    }\n\n    public function destroySelected(): void\n    {\n        $this->authorize('delete-any', Attorney::class);\n\n        Attorney::whereIn('id', $this->selected)->delete();\n\n        $this->selected = [];\n        $this->allSelected = false;\n\n        $this->resetAttorneyData();\n    }\n\n    public function toggleFullSelection(): void\n    {\n        if (!$this->allSelected) {\n            $this->selected = [];\n            return;\n        }\n\n        foreach ($this->court->attorneys as $attorney) {\n            array_push($this->selected, $attorney->id);\n        }\n    }\n\n    public function render(): View\n    {\n        return view('livewire.court-attorneys-detail', [\n            'attorneys' => $this->court->attorneys()->paginate(20),\n        ]);\n    }\n}\n","module":"crud:134","path":"\\app\\Http\\Livewire\\CourtAttorneysDetail.php"},"\\resources\\views\\livewire\\court-judges-detail.blade.php":{"deleteOnGeneration":true,"content":"<div>\n    <div class=\"mb-4\">\n        @can('create', App\\Models\\Judge::class)\n        <button class=\"btn btn-primary\" wire:click=\"newJudge\">\n            <i class=\"icon ion-md-add\"></i>\n            @lang('crud.common.new')\n        </button>\n        @endcan @can('delete-any', App\\Models\\Judge::class)\n        <button\n            class=\"btn btn-danger\"\n             {{ empty($selected) ? 'disabled' : '' }} \n            onclick=\"confirm('Are you sure?') || event.stopImmediatePropagation()\"\n            wire:click=\"destroySelected\"\n        >\n            <i class=\"icon ion-md-trash\"></i>\n            @lang('crud.common.delete_selected')\n        </button>\n        @endcan\n    </div>\n\n    <x-modal id=\"court-judges-modal\" wire:model=\"showingModal\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">{{ $modalTitle }}</h5>\n                <button\n                    type=\"button\"\n                    class=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                >\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n\n            <div class=\"modal-body\">\n                <div>\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"judge.judgeID\"\n                            label=\"Judge Id\"\n                            wire:model=\"judge.judgeID\"\n                            maxlength=\"255\"\n                            placeholder=\"Judge Id\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"judge.name\"\n                            label=\"Name\"\n                            wire:model=\"judge.name\"\n                            maxlength=\"255\"\n                            placeholder=\"Name\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"judge.courtTyep\"\n                            label=\"Court Tyep\"\n                            wire:model=\"judge.courtTyep\"\n                            maxlength=\"255\"\n                            placeholder=\"Court Tyep\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"judge.Address\"\n                            label=\"Address\"\n                            wire:model=\"judge.Address\"\n                            maxlength=\"255\"\n                            placeholder=\"Address\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"judge.state\"\n                            label=\"State\"\n                            wire:model=\"judge.state\"\n                            maxlength=\"255\"\n                            placeholder=\"State\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"judge.Emptype\"\n                            label=\"Emptype\"\n                            wire:model=\"judge.Emptype\"\n                            maxlength=\"255\"\n                            placeholder=\"Emptype\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.textarea\n                            name=\"judge.description\"\n                            label=\"Description\"\n                            wire:model=\"judge.description\"\n                            maxlength=\"255\"\n                        ></x-inputs.textarea>\n                    </x-inputs.group>\n                </div>\n            </div>\n\n            @if($editing) @endif\n\n            <div class=\"modal-footer\">\n                <button\n                    type=\"button\"\n                    class=\"btn btn-light float-left\"\n                    wire:click=\"$toggle('showingModal')\"\n                >\n                    <i class=\"icon ion-md-close\"></i>\n                    @lang('crud.common.cancel')\n                </button>\n\n                <button type=\"button\" class=\"btn btn-primary\" wire:click=\"save\">\n                    <i class=\"icon ion-md-save\"></i>\n                    @lang('crud.common.save')\n                </button>\n            </div>\n        </div>\n    </x-modal>\n\n    <div class=\"table-responsive\">\n        <table class=\"table table-borderless table-hover\">\n            <thead>\n                <tr>\n                    <th>\n                        <input\n                            type=\"checkbox\"\n                            wire:model=\"allSelected\"\n                            wire:click=\"toggleFullSelection\"\n                            title=\"{{ trans('crud.common.select_all') }}\"\n                        />\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_judges.inputs.judgeID')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_judges.inputs.name')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_judges.inputs.courtTyep')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_judges.inputs.Address')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_judges.inputs.state')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_judges.inputs.Emptype')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_judges.inputs.description')\n                    </th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody class=\"text-gray-600\">\n                @foreach ($judges as $judge)\n                <tr class=\"hover:bg-gray-100\">\n                    <td class=\"text-left\">\n                        <input\n                            type=\"checkbox\"\n                            value=\"{{ $judge->id }}\"\n                            wire:model=\"selected\"\n                        />\n                    </td>\n                    <td class=\"text-left\">{{ $judge->judgeID ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $judge->name ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $judge->courtTyep ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $judge->Address ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $judge->state ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $judge->Emptype ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $judge->description ?? '-' }}</td>\n                    <td class=\"text-right\" style=\"width: 134px;\">\n                        <div\n                            role=\"group\"\n                            aria-label=\"Row Actions\"\n                            class=\"relative inline-flex align-middle\"\n                        >\n                            @can('update', $judge)\n                            <button\n                                type=\"button\"\n                                class=\"btn btn-light\"\n                                wire:click=\"editJudge({{ $judge->id }})\"\n                            >\n                                <i class=\"icon ion-md-create\"></i>\n                            </button>\n                            @endcan\n                        </div>\n                    </td>\n                </tr>\n                @endforeach\n            </tbody>\n            <tfoot>\n                <tr>\n                    <td colspan=\"8\">{{ $judges->render() }}</td>\n                </tr>\n            </tfoot>\n        </table>\n    </div>\n</div>\n","module":"crud:135","path":"\\resources\\views\\livewire\\court-judges-detail.blade.php"},"\\app\\Http\\Livewire\\CourtJudgesDetail.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Livewire;\n\nuse App\\Models\\Court;\nuse App\\Models\\Judge;\nuse Livewire\\Component;\nuse Illuminate\\View\\View;\nuse Livewire\\WithPagination;\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\n\nclass CourtJudgesDetail extends Component\n{\n    use WithPagination;\n    use AuthorizesRequests;\n\n    public Court $court;\n    public Judge $judge;\n\n    public $selected = [];\n    public $editing = false;\n    public $allSelected = false;\n    public $showingModal = false;\n\n    public $modalTitle = 'New Judge';\n\n    protected $rules = [\n        'judge.judgeID' => ['required', 'max:255', 'string'],\n        'judge.name' => ['required', 'max:255', 'string'],\n        'judge.courtTyep' => ['required', 'max:255', 'string'],\n        'judge.Address' => ['required', 'max:255', 'string'],\n        'judge.state' => ['required', 'max:255', 'string'],\n        'judge.Emptype' => ['required', 'max:255', 'string'],\n        'judge.description' => ['required', 'max:255', 'string'],\n    ];\n\n    public function mount(Court $court): void\n    {\n        $this->court = $court;\n        $this->resetJudgeData();\n    }\n\n    public function resetJudgeData(): void\n    {\n        $this->judge = new Judge();\n\n        $this->dispatchBrowserEvent('refresh');\n    }\n\n    public function newJudge(): void\n    {\n        $this->editing = false;\n        $this->modalTitle = trans('crud.court_judges.new_title');\n        $this->resetJudgeData();\n\n        $this->showModal();\n    }\n\n    public function editJudge(Judge $judge): void\n    {\n        $this->editing = true;\n        $this->modalTitle = trans('crud.court_judges.edit_title');\n        $this->judge = $judge;\n\n        $this->dispatchBrowserEvent('refresh');\n\n        $this->showModal();\n    }\n\n    public function showModal(): void\n    {\n        $this->resetErrorBag();\n        $this->showingModal = true;\n    }\n\n    public function hideModal(): void\n    {\n        $this->showingModal = false;\n    }\n\n    public function save(): void\n    {\n        $this->validate();\n\n        if (!$this->judge->court_id) {\n            $this->authorize('create', Judge::class);\n\n            $this->judge->court_id = $this->court->id;\n        } else {\n            $this->authorize('update', $this->judge);\n        }\n\n        $this->judge->save();\n\n        $this->hideModal();\n    }\n\n    public function destroySelected(): void\n    {\n        $this->authorize('delete-any', Judge::class);\n\n        Judge::whereIn('id', $this->selected)->delete();\n\n        $this->selected = [];\n        $this->allSelected = false;\n\n        $this->resetJudgeData();\n    }\n\n    public function toggleFullSelection(): void\n    {\n        if (!$this->allSelected) {\n            $this->selected = [];\n            return;\n        }\n\n        foreach ($this->court->judges as $judge) {\n            array_push($this->selected, $judge->id);\n        }\n    }\n\n    public function render(): View\n    {\n        return view('livewire.court-judges-detail', [\n            'judges' => $this->court->judges()->paginate(20),\n        ]);\n    }\n}\n","module":"crud:135","path":"\\app\\Http\\Livewire\\CourtJudgesDetail.php"},"\\resources\\views\\livewire\\court-bars-detail.blade.php":{"deleteOnGeneration":true,"content":"<div>\n    <div class=\"mb-4\">\n        @can('create', App\\Models\\Bar::class)\n        <button class=\"btn btn-primary\" wire:click=\"newBar\">\n            <i class=\"icon ion-md-add\"></i>\n            @lang('crud.common.new')\n        </button>\n        @endcan @can('delete-any', App\\Models\\Bar::class)\n        <button\n            class=\"btn btn-danger\"\n             {{ empty($selected) ? 'disabled' : '' }} \n            onclick=\"confirm('Are you sure?') || event.stopImmediatePropagation()\"\n            wire:click=\"destroySelected\"\n        >\n            <i class=\"icon ion-md-trash\"></i>\n            @lang('crud.common.delete_selected')\n        </button>\n        @endcan\n    </div>\n\n    <x-modal id=\"court-bars-modal\" wire:model=\"showingModal\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">{{ $modalTitle }}</h5>\n                <button\n                    type=\"button\"\n                    class=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                >\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n\n            <div class=\"modal-body\">\n                <div>\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"bar.address\"\n                            label=\"Address\"\n                            wire:model=\"bar.address\"\n                            maxlength=\"255\"\n                            placeholder=\"Address\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"bar.state\"\n                            label=\"State\"\n                            wire:model=\"bar.state\"\n                            maxlength=\"255\"\n                            placeholder=\"State\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.text\n                            name=\"bar.location\"\n                            label=\"Location\"\n                            wire:model=\"bar.location\"\n                            maxlength=\"255\"\n                            placeholder=\"Location\"\n                        ></x-inputs.text>\n                    </x-inputs.group>\n\n                    <x-inputs.group class=\"col-sm-12\">\n                        <x-inputs.textarea\n                            name=\"bar.description\"\n                            label=\"Description\"\n                            wire:model=\"bar.description\"\n                            maxlength=\"255\"\n                        ></x-inputs.textarea>\n                    </x-inputs.group>\n                </div>\n            </div>\n\n            @if($editing) @endif\n\n            <div class=\"modal-footer\">\n                <button\n                    type=\"button\"\n                    class=\"btn btn-light float-left\"\n                    wire:click=\"$toggle('showingModal')\"\n                >\n                    <i class=\"icon ion-md-close\"></i>\n                    @lang('crud.common.cancel')\n                </button>\n\n                <button type=\"button\" class=\"btn btn-primary\" wire:click=\"save\">\n                    <i class=\"icon ion-md-save\"></i>\n                    @lang('crud.common.save')\n                </button>\n            </div>\n        </div>\n    </x-modal>\n\n    <div class=\"table-responsive\">\n        <table class=\"table table-borderless table-hover\">\n            <thead>\n                <tr>\n                    <th>\n                        <input\n                            type=\"checkbox\"\n                            wire:model=\"allSelected\"\n                            wire:click=\"toggleFullSelection\"\n                            title=\"{{ trans('crud.common.select_all') }}\"\n                        />\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_bars.inputs.address')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_bars.inputs.state')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_bars.inputs.location')\n                    </th>\n                    <th class=\"text-left\">\n                        @lang('crud.court_bars.inputs.description')\n                    </th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody class=\"text-gray-600\">\n                @foreach ($bars as $bar)\n                <tr class=\"hover:bg-gray-100\">\n                    <td class=\"text-left\">\n                        <input\n                            type=\"checkbox\"\n                            value=\"{{ $bar->id }}\"\n                            wire:model=\"selected\"\n                        />\n                    </td>\n                    <td class=\"text-left\">{{ $bar->address ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $bar->state ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $bar->location ?? '-' }}</td>\n                    <td class=\"text-left\">{{ $bar->description ?? '-' }}</td>\n                    <td class=\"text-right\" style=\"width: 134px;\">\n                        <div\n                            role=\"group\"\n                            aria-label=\"Row Actions\"\n                            class=\"relative inline-flex align-middle\"\n                        >\n                            @can('update', $bar)\n                            <button\n                                type=\"button\"\n                                class=\"btn btn-light\"\n                                wire:click=\"editBar({{ $bar->id }})\"\n                            >\n                                <i class=\"icon ion-md-create\"></i>\n                            </button>\n                            @endcan\n                        </div>\n                    </td>\n                </tr>\n                @endforeach\n            </tbody>\n            <tfoot>\n                <tr>\n                    <td colspan=\"5\">{{ $bars->render() }}</td>\n                </tr>\n            </tfoot>\n        </table>\n    </div>\n</div>\n","module":"crud:138","path":"\\resources\\views\\livewire\\court-bars-detail.blade.php"},"\\app\\Http\\Livewire\\CourtBarsDetail.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Livewire;\n\nuse App\\Models\\Bar;\nuse App\\Models\\Court;\nuse Livewire\\Component;\nuse Illuminate\\View\\View;\nuse Livewire\\WithPagination;\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\n\nclass CourtBarsDetail extends Component\n{\n    use WithPagination;\n    use AuthorizesRequests;\n\n    public Court $court;\n    public Bar $bar;\n\n    public $selected = [];\n    public $editing = false;\n    public $allSelected = false;\n    public $showingModal = false;\n\n    public $modalTitle = 'New Bar';\n\n    protected $rules = [\n        'bar.address' => ['required', 'max:255', 'string'],\n        'bar.state' => ['required', 'max:255', 'string'],\n        'bar.location' => ['required', 'max:255', 'string'],\n        'bar.description' => ['required', 'max:255', 'string'],\n    ];\n\n    public function mount(Court $court): void\n    {\n        $this->court = $court;\n        $this->resetBarData();\n    }\n\n    public function resetBarData(): void\n    {\n        $this->bar = new Bar();\n\n        $this->dispatchBrowserEvent('refresh');\n    }\n\n    public function newBar(): void\n    {\n        $this->editing = false;\n        $this->modalTitle = trans('crud.court_bars.new_title');\n        $this->resetBarData();\n\n        $this->showModal();\n    }\n\n    public function editBar(Bar $bar): void\n    {\n        $this->editing = true;\n        $this->modalTitle = trans('crud.court_bars.edit_title');\n        $this->bar = $bar;\n\n        $this->dispatchBrowserEvent('refresh');\n\n        $this->showModal();\n    }\n\n    public function showModal(): void\n    {\n        $this->resetErrorBag();\n        $this->showingModal = true;\n    }\n\n    public function hideModal(): void\n    {\n        $this->showingModal = false;\n    }\n\n    public function save(): void\n    {\n        $this->validate();\n\n        if (!$this->bar->court_id) {\n            $this->authorize('create', Bar::class);\n\n            $this->bar->court_id = $this->court->id;\n        } else {\n            $this->authorize('update', $this->bar);\n        }\n\n        $this->bar->save();\n\n        $this->hideModal();\n    }\n\n    public function destroySelected(): void\n    {\n        $this->authorize('delete-any', Bar::class);\n\n        Bar::whereIn('id', $this->selected)->delete();\n\n        $this->selected = [];\n        $this->allSelected = false;\n\n        $this->resetBarData();\n    }\n\n    public function toggleFullSelection(): void\n    {\n        if (!$this->allSelected) {\n            $this->selected = [];\n            return;\n        }\n\n        foreach ($this->court->bars as $bar) {\n            array_push($this->selected, $bar->id);\n        }\n    }\n\n    public function render(): View\n    {\n        return view('livewire.court-bars-detail', [\n            'bars' => $this->court->bars()->paginate(20),\n        ]);\n    }\n}\n","module":"crud:138","path":"\\app\\Http\\Livewire\\CourtBarsDetail.php"},"\\routes\\api.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Api\\BarController;\nuse App\\Http\\Controllers\\Api\\UserController;\nuse App\\Http\\Controllers\\Api\\AuthController;\nuse App\\Http\\Controllers\\Api\\RoleController;\nuse App\\Http\\Controllers\\Api\\CourtController;\nuse App\\Http\\Controllers\\Api\\JudgeController;\nuse App\\Http\\Controllers\\Api\\AttorneyController;\nuse App\\Http\\Controllers\\Api\\WittnessController;\nuse App\\Http\\Controllers\\Api\\CaseHearController;\nuse App\\Http\\Controllers\\Api\\DecisionController;\nuse App\\Http\\Controllers\\Api\\CourtBarsController;\nuse App\\Http\\Controllers\\Api\\CaseChargeController;\nuse App\\Http\\Controllers\\Api\\PermissionController;\nuse App\\Http\\Controllers\\Api\\CourtJudgesController;\nuse App\\Http\\Controllers\\Api\\AppointmentController;\nuse App\\Http\\Controllers\\Api\\CourtAttorneysController;\nuse App\\Http\\Controllers\\Api\\CourtCaseHearsController;\nuse App\\Http\\Controllers\\Api\\JudgeCaseHearsController;\nuse App\\Http\\Controllers\\Api\\AttorneyCaseHearsController;\nuse App\\Http\\Controllers\\Api\\WittnessCaseHearsController;\nuse App\\Http\\Controllers\\Api\\CaseHearDecisionsController;\nuse App\\Http\\Controllers\\Api\\CaseChargeCaseHearsController;\nuse App\\Http\\Controllers\\Api\\CaseHearAppointmentsController;\n\n/*\n|--------------------------------------------------------------------------\n| API Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register API routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| is assigned the \"api\" middleware group. Enjoy building your API!\n|\n*/\n\nRoute::post('/login', [AuthController::class, 'login'])->name('api.login');\n\nRoute::middleware('auth:sanctum')\n    ->get('/user', function (Request $request) {\n        return $request->user();\n    })\n    ->name('api.user');\n\nRoute::name('api.')\n    ->middleware('auth:sanctum')\n    ->group(function () {\n        Route::apiResource('roles', RoleController::class);\n        Route::apiResource('permissions', PermissionController::class);\n\n        Route::apiResource('users', UserController::class);\n\n        Route::apiResource('courts', CourtController::class);\n\n        // Court Attorneys\n        Route::get('/courts/{court}/attorneys', [\n            CourtAttorneysController::class,\n            'index',\n        ])->name('courts.attorneys.index');\n        Route::post('/courts/{court}/attorneys', [\n            CourtAttorneysController::class,\n            'store',\n        ])->name('courts.attorneys.store');\n\n        // Court Judges\n        Route::get('/courts/{court}/judges', [\n            CourtJudgesController::class,\n            'index',\n        ])->name('courts.judges.index');\n        Route::post('/courts/{court}/judges', [\n            CourtJudgesController::class,\n            'store',\n        ])->name('courts.judges.store');\n\n        // Court Bars\n        Route::get('/courts/{court}/bars', [\n            CourtBarsController::class,\n            'index',\n        ])->name('courts.bars.index');\n        Route::post('/courts/{court}/bars', [\n            CourtBarsController::class,\n            'store',\n        ])->name('courts.bars.store');\n\n        // Court Case Hears\n        Route::get('/courts/{court}/case-hears', [\n            CourtCaseHearsController::class,\n            'index',\n        ])->name('courts.case-hears.index');\n        Route::post('/courts/{court}/case-hears', [\n            CourtCaseHearsController::class,\n            'store',\n        ])->name('courts.case-hears.store');\n\n        Route::apiResource('attorneys', AttorneyController::class);\n\n        // Attorney Case Hears\n        Route::get('/attorneys/{attorney}/case-hears', [\n            AttorneyCaseHearsController::class,\n            'index',\n        ])->name('attorneys.case-hears.index');\n        Route::post('/attorneys/{attorney}/case-hears', [\n            AttorneyCaseHearsController::class,\n            'store',\n        ])->name('attorneys.case-hears.store');\n\n        Route::apiResource('judges', JudgeController::class);\n\n        // Judge Case Hears\n        Route::get('/judges/{judge}/case-hears', [\n            JudgeCaseHearsController::class,\n            'index',\n        ])->name('judges.case-hears.index');\n        Route::post('/judges/{judge}/case-hears', [\n            JudgeCaseHearsController::class,\n            'store',\n        ])->name('judges.case-hears.store');\n\n        Route::apiResource('bars', BarController::class);\n\n        Route::apiResource('case-charges', CaseChargeController::class);\n\n        // CaseCharge Case Hears\n        Route::get('/case-charges/{caseCharge}/case-hears', [\n            CaseChargeCaseHearsController::class,\n            'index',\n        ])->name('case-charges.case-hears.index');\n        Route::post('/case-charges/{caseCharge}/case-hears', [\n            CaseChargeCaseHearsController::class,\n            'store',\n        ])->name('case-charges.case-hears.store');\n\n        Route::apiResource('wittnesses', WittnessController::class);\n\n        // Wittness Case Hears\n        Route::get('/wittnesses/{wittness}/case-hears', [\n            WittnessCaseHearsController::class,\n            'index',\n        ])->name('wittnesses.case-hears.index');\n        Route::post('/wittnesses/{wittness}/case-hears', [\n            WittnessCaseHearsController::class,\n            'store',\n        ])->name('wittnesses.case-hears.store');\n\n        Route::apiResource('case-hears', CaseHearController::class);\n\n        // CaseHear Decisions\n        Route::get('/case-hears/{caseHear}/decisions', [\n            CaseHearDecisionsController::class,\n            'index',\n        ])->name('case-hears.decisions.index');\n        Route::post('/case-hears/{caseHear}/decisions', [\n            CaseHearDecisionsController::class,\n            'store',\n        ])->name('case-hears.decisions.store');\n\n        // CaseHear Appointments\n        Route::get('/case-hears/{caseHear}/appointments', [\n            CaseHearAppointmentsController::class,\n            'index',\n        ])->name('case-hears.appointments.index');\n        Route::post('/case-hears/{caseHear}/appointments', [\n            CaseHearAppointmentsController::class,\n            'store',\n        ])->name('case-hears.appointments.store');\n\n        Route::apiResource('appointments', AppointmentController::class);\n\n        Route::apiResource('decisions', DecisionController::class);\n    });\n","module":"base","path":"\\routes\\api.php"},"\\routes\\web.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\BarController;\nuse App\\Http\\Controllers\\HomeController;\nuse App\\Http\\Controllers\\UserController;\nuse App\\Http\\Controllers\\RoleController;\nuse App\\Http\\Controllers\\CourtController;\nuse App\\Http\\Controllers\\JudgeController;\nuse App\\Http\\Controllers\\AttorneyController;\nuse App\\Http\\Controllers\\WittnessController;\nuse App\\Http\\Controllers\\CaseHearController;\nuse App\\Http\\Controllers\\DecisionController;\nuse App\\Http\\Controllers\\CaseChargeController;\nuse App\\Http\\Controllers\\PermissionController;\nuse App\\Http\\Controllers\\AppointmentController;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register web routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| contains the \"web\" middleware group. Now create something great!\n|\n*/\n\nRoute::get('/', function () {\n    return view('welcome');\n});\n\nAuth::routes();\n\nRoute::get('/home', [HomeController::class, 'index'])->name('home');\n\nRoute::prefix('/')\n    ->middleware('auth')\n    ->group(function () {\n        Route::resource('roles', RoleController::class);\n        Route::resource('permissions', PermissionController::class);\n\n        Route::resource('users', UserController::class);\n        Route::resource('courts', CourtController::class);\n        Route::resource('attorneys', AttorneyController::class);\n        Route::resource('judges', JudgeController::class);\n        Route::resource('bars', BarController::class);\n        Route::resource('case-charges', CaseChargeController::class);\n        Route::resource('wittnesses', WittnessController::class);\n        Route::resource('case-hears', CaseHearController::class);\n        Route::resource('appointments', AppointmentController::class);\n        Route::resource('decisions', DecisionController::class);\n    });\n","module":"base","path":"\\routes\\web.php"},"\\resources\\views\\components\\form-button.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'method' => 'POST',\r\n    'action'\r\n])\r\n\r\n<x-form method=\"{{ $method }}\" action=\"{{ $action }}\">\r\n    <div>\r\n        <button type=\"submit\" {{ $attributes }}>\r\n            {{ $slot }}\r\n        </button>\r\n    </div>\r\n</x-form>","module":"base","path":"\\resources\\views\\components\\form-button.blade.php"},"\\resources\\views\\components\\form.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'method' => 'POST',\r\n    'action',\r\n    'hasFiles' => false,\r\n    'model'\r\n])\r\n\r\n@php\r\n    $method = strtoupper($method);\r\n@endphp\r\n\r\n<form method=\"{{ $method !== 'GET' ? 'POST' : $method }}\" action=\"{{ $action }}\" {!! $hasFiles ? 'enctype=\"multipart/form-data\"' : '' !!} {{ $attributes }}>\r\n    @csrf\r\n    @if (!in_array($method, ['POST', 'GET']))\r\n        @method($method)\r\n    @endif\r\n    {{ $slot }}\r\n</form>","module":"base","path":"\\resources\\views\\components\\form.blade.php"},"\\resources\\views\\components\\inputs\\basic.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n    'type' => 'text',\r\n    'min' => null,\r\n    'max' => null,\r\n    'step' => null,\r\n])\r\n\r\n@if($label ?? null)\r\n    @include('components.inputs.partials.label')\r\n@endif\r\n\r\n<input\r\n    type=\"{{ $type }}\"\r\n    id=\"{{ $name }}\"\r\n    name=\"{{ $name }}\"\r\n    value=\"{{ old($name, $value ?? '') }}\"\r\n    {{ ($required ?? false) ? 'required' : '' }}\r\n    {{ $attributes->merge(['class' => 'form-control']) }}\r\n    {{ $min ? \"min={$min}\" : '' }}\r\n    {{ $max ? \"max={$max}\" : '' }}\r\n    {{ $step ? \"step={$step}\" : '' }}\r\n    autocomplete=\"off\"\r\n>\r\n\r\n@error($name)\r\n    @include('components.inputs.partials.error')\r\n@enderror","module":"base","path":"\\resources\\views\\components\\inputs\\basic.blade.php"},"\\resources\\views\\components\\inputs\\checkbox.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'id',\r\n    'name',\r\n    'label',\r\n    'value',\r\n    'checked' => false,\r\n    'addHiddenValue' => true,\r\n    'hiddenValue' => 0,\r\n])\r\n\r\n@php\r\n    $checked = !! $checked\r\n@endphp\r\n\r\n<div class=\"form-check\">\r\n\r\n    {{-- Adds a hidden default value to be send if checked is false --}}\r\n    @if($addHiddenValue)\r\n    <input type=\"hidden\" id=\"{{  $id ?? $name }}-hidden\" name=\"{{ $name }}\" value=\"{{ $hiddenValue }}\">\r\n    @endif\r\n\r\n    <input\r\n        type=\"checkbox\"\r\n        id=\"{{ $id ?? $name }}\"\r\n        name=\"{{ $name }}\"\r\n        value=\"{{ $value ?? 1 }}\"\r\n        {{ $checked ? 'checked' : '' }}\r\n        {{ $attributes->merge(['class' => 'form-check-input']) }}\r\n    >\r\n\r\n    @if($label ?? null)\r\n        <label class=\"form-check-label\" for=\"{{ $id ?? $name }}\">\r\n            {{ $label }}\r\n        </label>\r\n    @endif\r\n</div>\r\n\r\n@error($name)\r\n    @include('components.inputs.partials.error')\r\n@enderror","module":"base","path":"\\resources\\views\\components\\inputs\\checkbox.blade.php"},"\\resources\\views\\components\\inputs\\date.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"date\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\date.blade.php"},"\\resources\\views\\components\\inputs\\datetime.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"datetime-local\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\datetime.blade.php"},"\\resources\\views\\components\\inputs\\email.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"email\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\email.blade.php"},"\\resources\\views\\components\\inputs\\group.blade.php":{"deleteOnGeneration":true,"content":"<div {{ $attributes->merge(['class' => 'form-group']) }}>\r\n    {{ $slot }}\r\n</div>","module":"base","path":"\\resources\\views\\components\\inputs\\group.blade.php"},"\\resources\\views\\components\\inputs\\hidden.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"hidden\" :name=\"$name\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\hidden.blade.php"},"\\resources\\views\\components\\inputs\\number.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n    'min' => null,\r\n    'max' => null,\r\n    'step' => null,\r\n])\r\n\r\n<x-inputs.basic type=\"number\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\" :min=\"$min\" :max=\"$max\" :step=\"$step\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\number.blade.php"},"\\resources\\views\\components\\inputs\\partials\\error.blade.php":{"deleteOnGeneration":true,"content":"<p class=\"text-danger\" role=\"alert\">{{ $message }}</p>","module":"base","path":"\\resources\\views\\components\\inputs\\partials\\error.blade.php"},"\\resources\\views\\components\\inputs\\partials\\label.blade.php":{"deleteOnGeneration":true,"content":"<label class=\"{{ ($required ?? false) ? 'label label-required ' : 'label ' }}\" for=\"{{ $name }}\">\r\n    {{ $label }}\r\n</label>","module":"base","path":"\\resources\\views\\components\\inputs\\partials\\label.blade.php"},"\\resources\\views\\components\\inputs\\password.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value' => '',\r\n])\r\n\r\n<x-inputs.basic type=\"password\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\password.blade.php"},"\\resources\\views\\components\\inputs\\select.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'type' => 'text',\r\n])\r\n\r\n@if($label ?? null)\r\n    @include('components.inputs.partials.label')\r\n@endif\r\n\r\n<select\r\n    id=\"{{ $name }}\"\r\n    name=\"{{ $name }}\"\r\n    {{ ($required ?? false) ? 'required' : '' }}\r\n    {{ $attributes->merge(['class' => 'form-control']) }}\r\n    autocomplete=\"off\"\r\n>{{ $slot }}</select>\r\n\r\n@error($name)\r\n    @include('components.inputs.partials.error')\r\n@enderror","module":"base","path":"\\resources\\views\\components\\inputs\\select.blade.php"},"\\resources\\views\\components\\inputs\\text.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"text\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\text.blade.php"},"\\resources\\views\\components\\inputs\\textarea.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n])\r\n\r\n@if($label ?? null)\r\n    @include('components.inputs.partials.label')\r\n@endif\r\n\r\n<textarea \r\n    id=\"{{ $name }}\"\r\n    name=\"{{ $name }}\" \r\n    rows=\"3\"\r\n    {{ ($required ?? false) ? 'required' : '' }}\r\n    {{ $attributes->merge(['class' => 'form-control']) }}\r\n    autocomplete=\"off\"\r\n>{{$slot}}</textarea>\r\n\r\n@error($name)\r\n    @include('components.inputs.partials.error')\r\n@enderror","module":"base","path":"\\resources\\views\\components\\inputs\\textarea.blade.php"},"\\resources\\views\\components\\inputs\\url.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"url\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\url.blade.php"},"\\resources\\views\\components\\modal.blade.php":{"deleteOnGeneration":true,"content":"{{-- \r\n    This modal was copied from Jetstrap components,\r\n    an awesome package for adapting Jetstrem for Bootstrap:\r\n\r\n    https://github.com/nascent-africa/jetstrap\r\n--}}\r\n\r\n@props(['id', 'maxWidth', 'modal' => false])\r\n\r\n@php\r\n$id = $id ?? md5($attributes->wire('model'));\r\nswitch ($maxWidth ?? '') {\r\n    case 'sm':\r\n        $maxWidth = ' modal-sm';\r\n        break;\r\n    case 'md':\r\n        $maxWidth = '';\r\n        break;\r\n    case 'lg':\r\n        $maxWidth = ' modal-lg';\r\n        break;\r\n    case 'xl':\r\n        $maxWidth = ' modal-xl';\r\n        break;\r\n    case '2xl':\r\n    default:\r\n        $maxWidth = '';\r\n        break;\r\n}\r\n@endphp\r\n\r\n<!-- Modal -->\r\n<div \r\n    x-data=\"{\r\n        show: @entangle($attributes->wire('model')).defer,\r\n    }\"\r\n    x-init=\"() => {\r\n        let modal = $('#{{ $id }}');\r\n        $watch('show', value => {\r\n            if (value) {\r\n                modal.modal('show')\r\n            } else {\r\n                modal.modal('hide')\r\n            }\r\n        });\r\n        modal.on('hide.bs.modal', function () {\r\n            show = false\r\n        })\r\n    }\"\r\n    wire:ignore.self \r\n    class=\"modal fade\" \r\n    tabindex=\"-1\" \r\n    id=\"{{ $id }}\" \r\n    aria-labelledby=\"{{ $id }}\" \r\n    aria-hidden=\"true\"\r\n    x-ref=\"{{ $id }}\"\r\n>\r\n    <div class=\"modal-dialog{{ $maxWidth }}\">\r\n        {{ $slot }}\r\n    </div>\r\n</div>","module":"base","path":"\\resources\\views\\components\\modal.blade.php"},"\\resources\\views\\components\\partials\\thumbnail.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'src',\r\n    'size' => 50,\r\n])\r\n\r\n@if($src)\r\n<img src=\"{{ $src }}\" class=\"border rounded\" style=\"width: {{ $size }}px; height: {{ $size }}px; object-fit: cover;\">\r\n@else\r\n<div class=\"border rounded bg-light\" style=\"width: {{ $size }}px; height: {{ $size }}px;\"></div>\r\n@endif","module":"base","path":"\\resources\\views\\components\\partials\\thumbnail.blade.php"},"\\resources\\views\\layouts\\app.blade.php":{"deleteOnGeneration":true,"content":"<!doctype html>\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        \n        <!-- CSRF Token -->\n        <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\n        \n        <title>CCMS</title>\n        \n        <!-- Scripts -->\n        <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\" integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\" integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js\" integrity=\"sha384-+YQ4JLhjyBLPDQt//I+STsc9iw4uQqACwlvpslubQzn4u2UU2UFM80nGisd026JF\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/admin-lte@3.1/dist/js/adminlte.min.js\"></script>\n        <script src=\"https://unpkg.com/alpinejs@3.10.2/dist/cdn.min.js\" defer></script>\n        \n        <!-- Fonts -->\n        <link rel=\"dns-prefetch\" href=\"//fonts.gstatic.com\">\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&amp;display=fallback\">\n        {{-- <link href=\"https://fonts.googleapis.com/css?family=Nunito\" rel=\"stylesheet\"> --}}\n        \n        <!-- Styles -->\n        {{-- <link href=\"{{ asset('css/app.css') }}\" rel=\"stylesheet\"> --}}\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/admin-lte@3.1/dist/css/adminlte.min.css\">\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css\">\n        \n        <!-- Icons -->\n        <link href=\"https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css\" rel=\"stylesheet\">\n        \n        <!-- Small Ionicons Fixes for AdminLTE -->\n        <style>\n        html {\n            background-color: #f4f6f9;\n        }\n        \n        .nav-icon.icon:before {\n            width: 25px;\n        }\n        </style>\n\r\n        \r\n        @livewireStyles\n    </head>\n    \n    <body class=\"sidebar-mini layout-fixed layout-navbar-fixed sidebar-collapse\">\n        <div id=\"app\" class=\"wrapper\">\n            <div class=\"main-header\">\n                @include('layouts.nav')\n            </div>\n        \n            @include('layouts.sidebar')\n        \n            <main class=\"content-wrapper p-5\">\n                @yield('content')\n            </main>\n        </div>\n\n        @stack('modals')\r\n        \r\n        @livewireScripts\r\n        \r\n        @stack('scripts')\r\n        \r\n        <script src=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js\"></script>\r\n        \r\n        @if (session()->has('success')) \r\n        <script>\r\n            var notyf = new Notyf({dismissible: true})\r\n            notyf.success('{{ session('success') }}')\r\n        </script> \r\n        @endif\n\n        <script>\r\n            /* Simple Alpine Image Viewer */\r\n            document.addEventListener('alpine:init', () => {\r\n                Alpine.data('imageViewer', (src = '') => {\r\n                    return {\r\n                        imageUrl: src,\r\n        \r\n                        refreshUrl() {\r\n                            this.imageUrl = this.$el.getAttribute(\"image-url\")\r\n                        },\r\n        \r\n                        fileChosen(event) {\r\n                            this.fileToDataUrl(event, src => this.imageUrl = src)\r\n                        },\r\n        \r\n                        fileToDataUrl(event, callback) {\r\n                            if (! event.target.files.length) return\r\n        \r\n                            let file = event.target.files[0],\r\n                                reader = new FileReader()\r\n        \r\n                            reader.readAsDataURL(file)\r\n                            reader.onload = e => callback(e.target.result)\r\n                        },\r\n                    }\r\n                })\r\n            })\r\n        </script>\n    </body>\n</html>","module":"base","path":"\\resources\\views\\layouts\\app.blade.php"},"\\resources\\views\\layouts\\nav.blade.php":{"deleteOnGeneration":true,"content":"<nav class=\"navbar navbar-expand navbar-light navbar-white\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"{{ __('Toggle navigation') }}\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <!-- Left Side Of Navbar -->\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\">\n                    <i class=\"icon ion-md-menu\"></i>\n                </a>\n            </li>\n        </ul>\n\n        <!-- Right Side Of Navbar -->\n        <ul class=\"navbar-nav ml-auto\">\n            <!-- Authentication Links -->\n            @guest\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"{{ route('login') }}\">{{ __('Login') }}</a>\n                </li>\n                @if (Route::has('register'))\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"{{ route('register') }}\">{{ __('Register') }}</a>\n                    </li>\n                @endif\n            @endguest\n        </ul>\n    </div>\n</nav>\n","module":"base","path":"\\resources\\views\\layouts\\nav.blade.php"},"\\database\\factories\\AppointmentFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Appointment;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass AppointmentFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Appointment::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'date' => $this->faker->dateTime(),\n            'Description' => $this->faker->sentence(15),\n            'case_hear_id' => \\App\\Models\\CaseHear::factory(),\n        ];\n    }\n}\n","module":"entity:74","path":"\\database\\factories\\AppointmentFactory.php"},"\\database\\factories\\AttorneyFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Attorney;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass AttorneyFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Attorney::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'attorneyID' => $this->faker->text(255),\n            'Name' => $this->faker->name(),\n            'courtType' => $this->faker->text(255),\n            'Address' => $this->faker->address(),\n            'State' => $this->faker->state(),\n            'EmpType' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n            'court_id' => \\App\\Models\\Court::factory(),\n        ];\n    }\n}\n","module":"entity:67","path":"\\database\\factories\\AttorneyFactory.php"},"\\database\\factories\\BarFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Bar;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass BarFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Bar::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'location' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n            'court_id' => \\App\\Models\\Court::factory(),\n        ];\n    }\n}\n","module":"entity:69","path":"\\database\\factories\\BarFactory.php"},"\\database\\factories\\CaseChargeFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\CaseCharge;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CaseChargeFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = CaseCharge::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'deptName' => $this->faker->text(255),\n            'mid' => $this->faker->text(255),\n            'rank' => $this->faker->text(255),\n            'name' => $this->faker->name(),\n            'address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'crimeDescription' => $this->faker->text(),\n            'crimeDate' => $this->faker->dateTime(),\n            'ChargeDate' => $this->faker->dateTime(),\n        ];\n    }\n}\n","module":"entity:71","path":"\\database\\factories\\CaseChargeFactory.php"},"\\database\\factories\\CaseHearFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\CaseHear;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CaseHearFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = CaseHear::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'CaseID' => $this->faker->text(255),\n            'casename' => $this->faker->text(255),\n            'fileNumber' => $this->faker->text(255),\n            'address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'location' => $this->faker->text(255),\n            'caseStartDate' => $this->faker->dateTime(),\n            'description' => $this->faker->sentence(15),\n            'court_id' => \\App\\Models\\Court::factory(),\n            'judge_id' => \\App\\Models\\Judge::factory(),\n            'attorney_id' => \\App\\Models\\Attorney::factory(),\n            'case_charge_id' => \\App\\Models\\CaseCharge::factory(),\n            'wittness_id' => \\App\\Models\\Wittness::factory(),\n        ];\n    }\n}\n","module":"entity:72","path":"\\database\\factories\\CaseHearFactory.php"},"\\database\\factories\\CourtFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Court;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CourtFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Court::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'courtID' => $this->faker->text(255),\n            'name' => $this->faker->name(),\n            'courtType' => $this->faker->text(255),\n            'speciality' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n        ];\n    }\n}\n","module":"entity:66","path":"\\database\\factories\\CourtFactory.php"},"\\database\\factories\\DecisionFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Decision;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass DecisionFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Decision::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'decisionDate' => $this->faker->dateTime(),\n            'Decisiontype' => $this->faker->text(255),\n            'Description' => $this->faker->sentence(15),\n            'case_hear_id' => \\App\\Models\\CaseHear::factory(),\n        ];\n    }\n}\n","module":"entity:73","path":"\\database\\factories\\DecisionFactory.php"},"\\database\\factories\\JudgeFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Judge;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass JudgeFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Judge::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'judgeID' => $this->faker->text(255),\n            'name' => $this->faker->name(),\n            'courtTyep' => $this->faker->text(255),\n            'Address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'Emptype' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n            'court_id' => \\App\\Models\\Court::factory(),\n        ];\n    }\n}\n","module":"entity:68","path":"\\database\\factories\\JudgeFactory.php"},"\\database\\factories\\UserFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = User::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n            'email_verified_at' => now(),\n            'password' => \\Hash::make('password'),\n            'description' => $this->faker->sentence(15),\n            'remember_token' => Str::random(10),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): Factory\n    {\n        return $this->state(function (array $attributes) {\n            return [\n                'email_verified_at' => null,\n            ];\n        });\n    }\n}\n","module":"entity:65","path":"\\database\\factories\\UserFactory.php"},"\\database\\factories\\WittnessFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Wittness;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass WittnessFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Wittness::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'wittnessID' => $this->faker->text(255),\n            'name' => $this->faker->name(),\n            'address' => $this->faker->address(),\n            'state' => $this->faker->state(),\n            'wittnessType' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n        ];\n    }\n}\n","module":"entity:70","path":"\\database\\factories\\WittnessFactory.php"},"\\database\\seeders\\AppointmentSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Appointment;\nuse Illuminate\\Database\\Seeder;\n\nclass AppointmentSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Appointment::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:74","path":"\\database\\seeders\\AppointmentSeeder.php"},"\\database\\seeders\\AttorneySeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Attorney;\nuse Illuminate\\Database\\Seeder;\n\nclass AttorneySeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Attorney::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:67","path":"\\database\\seeders\\AttorneySeeder.php"},"\\database\\seeders\\BarSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Bar;\nuse Illuminate\\Database\\Seeder;\n\nclass BarSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Bar::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:69","path":"\\database\\seeders\\BarSeeder.php"},"\\database\\seeders\\CaseChargeSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\CaseCharge;\nuse Illuminate\\Database\\Seeder;\n\nclass CaseChargeSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        CaseCharge::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:71","path":"\\database\\seeders\\CaseChargeSeeder.php"},"\\database\\seeders\\CaseHearSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\CaseHear;\nuse Illuminate\\Database\\Seeder;\n\nclass CaseHearSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        CaseHear::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:72","path":"\\database\\seeders\\CaseHearSeeder.php"},"\\database\\seeders\\CourtSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Court;\nuse Illuminate\\Database\\Seeder;\n\nclass CourtSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Court::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:66","path":"\\database\\seeders\\CourtSeeder.php"},"\\database\\seeders\\DecisionSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Decision;\nuse Illuminate\\Database\\Seeder;\n\nclass DecisionSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Decision::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:73","path":"\\database\\seeders\\DecisionSeeder.php"},"\\database\\seeders\\JudgeSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Judge;\nuse Illuminate\\Database\\Seeder;\n\nclass JudgeSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Judge::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:68","path":"\\database\\seeders\\JudgeSeeder.php"},"\\database\\seeders\\UserSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:65","path":"\\database\\seeders\\UserSeeder.php"},"\\database\\seeders\\WittnessSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Wittness;\nuse Illuminate\\Database\\Seeder;\n\nclass WittnessSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Wittness::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:70","path":"\\database\\seeders\\WittnessSeeder.php"},"\\database\\seeders\\DatabaseSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        // Adding an admin user\n        $user = \\App\\Models\\User::factory()\n            ->count(1)\n            ->create([\n                'email' => 'admin@admin.com',\n                'password' => \\Hash::make('admin'),\n            ]);\n        $this->call(PermissionsSeeder::class);\n\n        $this->call(AppointmentSeeder::class);\n        $this->call(AttorneySeeder::class);\n        $this->call(BarSeeder::class);\n        $this->call(CaseChargeSeeder::class);\n        $this->call(CaseHearSeeder::class);\n        $this->call(CourtSeeder::class);\n        $this->call(DecisionSeeder::class);\n        $this->call(JudgeSeeder::class);\n        $this->call(UserSeeder::class);\n        $this->call(WittnessSeeder::class);\n    }\n}\n","module":"base","path":"\\database\\seeders\\DatabaseSeeder.php"},"\\app\\Policies\\AppointmentPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Appointment;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass AppointmentPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the appointment can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list appointments');\n    }\n\n    /**\n     * Determine whether the appointment can view the model.\n     */\n    public function view(User $user, Appointment $model): bool\n    {\n        return $user->hasPermissionTo('view appointments');\n    }\n\n    /**\n     * Determine whether the appointment can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create appointments');\n    }\n\n    /**\n     * Determine whether the appointment can update the model.\n     */\n    public function update(User $user, Appointment $model): bool\n    {\n        return $user->hasPermissionTo('update appointments');\n    }\n\n    /**\n     * Determine whether the appointment can delete the model.\n     */\n    public function delete(User $user, Appointment $model): bool\n    {\n        return $user->hasPermissionTo('delete appointments');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete appointments');\n    }\n\n    /**\n     * Determine whether the appointment can restore the model.\n     */\n    public function restore(User $user, Appointment $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the appointment can permanently delete the model.\n     */\n    public function forceDelete(User $user, Appointment $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:74","path":"\\app\\Policies\\AppointmentPolicy.php"},"\\app\\Policies\\AttorneyPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Attorney;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass AttorneyPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the attorney can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list attorneys');\n    }\n\n    /**\n     * Determine whether the attorney can view the model.\n     */\n    public function view(User $user, Attorney $model): bool\n    {\n        return $user->hasPermissionTo('view attorneys');\n    }\n\n    /**\n     * Determine whether the attorney can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create attorneys');\n    }\n\n    /**\n     * Determine whether the attorney can update the model.\n     */\n    public function update(User $user, Attorney $model): bool\n    {\n        return $user->hasPermissionTo('update attorneys');\n    }\n\n    /**\n     * Determine whether the attorney can delete the model.\n     */\n    public function delete(User $user, Attorney $model): bool\n    {\n        return $user->hasPermissionTo('delete attorneys');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete attorneys');\n    }\n\n    /**\n     * Determine whether the attorney can restore the model.\n     */\n    public function restore(User $user, Attorney $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the attorney can permanently delete the model.\n     */\n    public function forceDelete(User $user, Attorney $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:67","path":"\\app\\Policies\\AttorneyPolicy.php"},"\\app\\Policies\\BarPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Bar;\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass BarPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the bar can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list bars');\n    }\n\n    /**\n     * Determine whether the bar can view the model.\n     */\n    public function view(User $user, Bar $model): bool\n    {\n        return $user->hasPermissionTo('view bars');\n    }\n\n    /**\n     * Determine whether the bar can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create bars');\n    }\n\n    /**\n     * Determine whether the bar can update the model.\n     */\n    public function update(User $user, Bar $model): bool\n    {\n        return $user->hasPermissionTo('update bars');\n    }\n\n    /**\n     * Determine whether the bar can delete the model.\n     */\n    public function delete(User $user, Bar $model): bool\n    {\n        return $user->hasPermissionTo('delete bars');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete bars');\n    }\n\n    /**\n     * Determine whether the bar can restore the model.\n     */\n    public function restore(User $user, Bar $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the bar can permanently delete the model.\n     */\n    public function forceDelete(User $user, Bar $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:69","path":"\\app\\Policies\\BarPolicy.php"},"\\app\\Policies\\CaseChargePolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\CaseCharge;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass CaseChargePolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the caseCharge can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list casecharges');\n    }\n\n    /**\n     * Determine whether the caseCharge can view the model.\n     */\n    public function view(User $user, CaseCharge $model): bool\n    {\n        return $user->hasPermissionTo('view casecharges');\n    }\n\n    /**\n     * Determine whether the caseCharge can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create casecharges');\n    }\n\n    /**\n     * Determine whether the caseCharge can update the model.\n     */\n    public function update(User $user, CaseCharge $model): bool\n    {\n        return $user->hasPermissionTo('update casecharges');\n    }\n\n    /**\n     * Determine whether the caseCharge can delete the model.\n     */\n    public function delete(User $user, CaseCharge $model): bool\n    {\n        return $user->hasPermissionTo('delete casecharges');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete casecharges');\n    }\n\n    /**\n     * Determine whether the caseCharge can restore the model.\n     */\n    public function restore(User $user, CaseCharge $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the caseCharge can permanently delete the model.\n     */\n    public function forceDelete(User $user, CaseCharge $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:71","path":"\\app\\Policies\\CaseChargePolicy.php"},"\\app\\Policies\\CaseHearPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\CaseHear;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass CaseHearPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the caseHear can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list casehears');\n    }\n\n    /**\n     * Determine whether the caseHear can view the model.\n     */\n    public function view(User $user, CaseHear $model): bool\n    {\n        return $user->hasPermissionTo('view casehears');\n    }\n\n    /**\n     * Determine whether the caseHear can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create casehears');\n    }\n\n    /**\n     * Determine whether the caseHear can update the model.\n     */\n    public function update(User $user, CaseHear $model): bool\n    {\n        return $user->hasPermissionTo('update casehears');\n    }\n\n    /**\n     * Determine whether the caseHear can delete the model.\n     */\n    public function delete(User $user, CaseHear $model): bool\n    {\n        return $user->hasPermissionTo('delete casehears');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete casehears');\n    }\n\n    /**\n     * Determine whether the caseHear can restore the model.\n     */\n    public function restore(User $user, CaseHear $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the caseHear can permanently delete the model.\n     */\n    public function forceDelete(User $user, CaseHear $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:72","path":"\\app\\Policies\\CaseHearPolicy.php"},"\\app\\Policies\\CourtPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Court;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass CourtPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the court can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list courts');\n    }\n\n    /**\n     * Determine whether the court can view the model.\n     */\n    public function view(User $user, Court $model): bool\n    {\n        return $user->hasPermissionTo('view courts');\n    }\n\n    /**\n     * Determine whether the court can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create courts');\n    }\n\n    /**\n     * Determine whether the court can update the model.\n     */\n    public function update(User $user, Court $model): bool\n    {\n        return $user->hasPermissionTo('update courts');\n    }\n\n    /**\n     * Determine whether the court can delete the model.\n     */\n    public function delete(User $user, Court $model): bool\n    {\n        return $user->hasPermissionTo('delete courts');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete courts');\n    }\n\n    /**\n     * Determine whether the court can restore the model.\n     */\n    public function restore(User $user, Court $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the court can permanently delete the model.\n     */\n    public function forceDelete(User $user, Court $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:66","path":"\\app\\Policies\\CourtPolicy.php"},"\\app\\Policies\\DecisionPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Decision;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass DecisionPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the decision can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list decisions');\n    }\n\n    /**\n     * Determine whether the decision can view the model.\n     */\n    public function view(User $user, Decision $model): bool\n    {\n        return $user->hasPermissionTo('view decisions');\n    }\n\n    /**\n     * Determine whether the decision can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create decisions');\n    }\n\n    /**\n     * Determine whether the decision can update the model.\n     */\n    public function update(User $user, Decision $model): bool\n    {\n        return $user->hasPermissionTo('update decisions');\n    }\n\n    /**\n     * Determine whether the decision can delete the model.\n     */\n    public function delete(User $user, Decision $model): bool\n    {\n        return $user->hasPermissionTo('delete decisions');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete decisions');\n    }\n\n    /**\n     * Determine whether the decision can restore the model.\n     */\n    public function restore(User $user, Decision $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the decision can permanently delete the model.\n     */\n    public function forceDelete(User $user, Decision $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:73","path":"\\app\\Policies\\DecisionPolicy.php"},"\\app\\Policies\\JudgePolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Judge;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass JudgePolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the judge can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list judges');\n    }\n\n    /**\n     * Determine whether the judge can view the model.\n     */\n    public function view(User $user, Judge $model): bool\n    {\n        return $user->hasPermissionTo('view judges');\n    }\n\n    /**\n     * Determine whether the judge can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create judges');\n    }\n\n    /**\n     * Determine whether the judge can update the model.\n     */\n    public function update(User $user, Judge $model): bool\n    {\n        return $user->hasPermissionTo('update judges');\n    }\n\n    /**\n     * Determine whether the judge can delete the model.\n     */\n    public function delete(User $user, Judge $model): bool\n    {\n        return $user->hasPermissionTo('delete judges');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete judges');\n    }\n\n    /**\n     * Determine whether the judge can restore the model.\n     */\n    public function restore(User $user, Judge $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the judge can permanently delete the model.\n     */\n    public function forceDelete(User $user, Judge $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:68","path":"\\app\\Policies\\JudgePolicy.php"},"\\app\\Policies\\UserPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass UserPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list users');\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, User $model): bool\n    {\n        return $user->hasPermissionTo('view users');\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create users');\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, User $model): bool\n    {\n        return $user->hasPermissionTo('update users');\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, User $model): bool\n    {\n        return $user->hasPermissionTo('delete users');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete users');\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, User $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, User $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:65","path":"\\app\\Policies\\UserPolicy.php"},"\\app\\Policies\\WittnessPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Wittness;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass WittnessPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the wittness can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list wittnesses');\n    }\n\n    /**\n     * Determine whether the wittness can view the model.\n     */\n    public function view(User $user, Wittness $model): bool\n    {\n        return $user->hasPermissionTo('view wittnesses');\n    }\n\n    /**\n     * Determine whether the wittness can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create wittnesses');\n    }\n\n    /**\n     * Determine whether the wittness can update the model.\n     */\n    public function update(User $user, Wittness $model): bool\n    {\n        return $user->hasPermissionTo('update wittnesses');\n    }\n\n    /**\n     * Determine whether the wittness can delete the model.\n     */\n    public function delete(User $user, Wittness $model): bool\n    {\n        return $user->hasPermissionTo('delete wittnesses');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete wittnesses');\n    }\n\n    /**\n     * Determine whether the wittness can restore the model.\n     */\n    public function restore(User $user, Wittness $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the wittness can permanently delete the model.\n     */\n    public function forceDelete(User $user, Wittness $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:70","path":"\\app\\Policies\\WittnessPolicy.php"},"\\database\\migrations\\2024_02_14_000008_create_appointments_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('appointments', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->dateTime('date');\n            $table->text('Description');\n            $table->unsignedBigInteger('case_hear_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('appointments');\n    }\n};\n","module":"entity:74","path":"\\database\\migrations\\2024_02_14_000008_create_appointments_table.php"},"\\database\\migrations\\2024_02_14_000002_create_attorneys_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('attorneys', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('attorneyID');\n            $table->string('Name');\n            $table->string('courtType');\n            $table->string('Address');\n            $table->string('State');\n            $table->string('EmpType');\n            $table->text('description');\n            $table->unsignedBigInteger('court_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('attorneys');\n    }\n};\n","module":"entity:67","path":"\\database\\migrations\\2024_02_14_000002_create_attorneys_table.php"},"\\database\\migrations\\2024_02_14_000004_create_bars_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('bars', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('address');\n            $table->string('state');\n            $table->string('location');\n            $table->text('description');\n            $table->unsignedBigInteger('court_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('bars');\n    }\n};\n","module":"entity:69","path":"\\database\\migrations\\2024_02_14_000004_create_bars_table.php"},"\\database\\migrations\\2024_02_14_000005_create_case_charges_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('case_charges', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('deptName');\n            $table->string('mid');\n            $table->string('rank');\n            $table->string('name');\n            $table->string('address');\n            $table->string('state');\n            $table->text('crimeDescription');\n            $table->dateTime('crimeDate');\n            $table->dateTime('ChargeDate');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('case_charges');\n    }\n};\n","module":"entity:71","path":"\\database\\migrations\\2024_02_14_000005_create_case_charges_table.php"},"\\database\\migrations\\2024_02_14_000006_create_case_hears_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('case_hears', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('CaseID');\n            $table->string('casename');\n            $table->string('fileNumber');\n            $table->string('address');\n            $table->string('state');\n            $table->string('location');\n            $table->dateTime('caseStartDate');\n            $table->text('description');\n            $table->unsignedBigInteger('court_id');\n            $table->unsignedBigInteger('judge_id');\n            $table->unsignedBigInteger('attorney_id');\n            $table->unsignedBigInteger('case_charge_id');\n            $table->unsignedBigInteger('wittness_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('case_hears');\n    }\n};\n","module":"entity:72","path":"\\database\\migrations\\2024_02_14_000006_create_case_hears_table.php"},"\\database\\migrations\\2024_02_14_000001_create_courts_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('courts', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('courtID');\n            $table->string('name');\n            $table->string('courtType');\n            $table->string('speciality');\n            $table->text('description');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('courts');\n    }\n};\n","module":"entity:66","path":"\\database\\migrations\\2024_02_14_000001_create_courts_table.php"},"\\database\\migrations\\2024_02_14_000009_create_decisions_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('decisions', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->dateTime('decisionDate');\n            $table->string('Decisiontype');\n            $table->text('Description');\n            $table->unsignedBigInteger('case_hear_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('decisions');\n    }\n};\n","module":"entity:73","path":"\\database\\migrations\\2024_02_14_000009_create_decisions_table.php"},"\\database\\migrations\\2024_02_14_000003_create_judges_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('judges', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('judgeID');\n            $table->string('name');\n            $table->string('courtTyep');\n            $table->string('Address');\n            $table->string('state');\n            $table->string('Emptype');\n            $table->text('description');\n            $table->unsignedBigInteger('court_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('judges');\n    }\n};\n","module":"entity:68","path":"\\database\\migrations\\2024_02_14_000003_create_judges_table.php"},"\\database\\migrations\\2014_10_12_000000_create_users_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->timestamp('email_verified_at')->nullable();\n            $table->string('password');\n            $table->text('description')->nullable();\n            $table->string('remember_token', 100)->nullable();\n            $table->text('two_factor_secret')->nullable();\n            $table->text('two_factor_recovery_codes')->nullable();\n            $table->timestamp('two_factor_confirmed_at')->nullable();\n            $table->foreignId('current_team_id')->nullable();\n            $table->text('profile_photo_path')->nullable();\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('users');\n    }\n};\n","module":"entity:65","path":"\\database\\migrations\\2014_10_12_000000_create_users_table.php"},"\\database\\migrations\\2024_02_14_000007_create_wittnesses_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('wittnesses', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('wittnessID');\n            $table->string('name');\n            $table->string('address');\n            $table->string('state');\n            $table->string('wittnessType');\n            $table->text('description');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('wittnesses');\n    }\n};\n","module":"entity:70","path":"\\database\\migrations\\2024_02_14_000007_create_wittnesses_table.php"},"\\database\\migrations\\2024_02_14_009005_add_foreigns_to_appointments_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('appointments', function (Blueprint $table) {\n            $table\n                ->foreign('case_hear_id')\n                ->references('id')\n                ->on('case_hears')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('appointments', function (Blueprint $table) {\n            $table->dropForeign(['case_hear_id']);\n        });\n    }\n};\n","module":"entity:74|entity:72","path":"\\database\\migrations\\2024_02_14_009005_add_foreigns_to_appointments_table.php"},"\\database\\migrations\\2024_02_14_009001_add_foreigns_to_attorneys_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('attorneys', function (Blueprint $table) {\n            $table\n                ->foreign('court_id')\n                ->references('id')\n                ->on('courts')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('attorneys', function (Blueprint $table) {\n            $table->dropForeign(['court_id']);\n        });\n    }\n};\n","module":"entity:67|entity:66","path":"\\database\\migrations\\2024_02_14_009001_add_foreigns_to_attorneys_table.php"},"\\database\\migrations\\2024_02_14_009003_add_foreigns_to_bars_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('bars', function (Blueprint $table) {\n            $table\n                ->foreign('court_id')\n                ->references('id')\n                ->on('courts')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('bars', function (Blueprint $table) {\n            $table->dropForeign(['court_id']);\n        });\n    }\n};\n","module":"entity:69|entity:66","path":"\\database\\migrations\\2024_02_14_009003_add_foreigns_to_bars_table.php"},"\\database\\migrations\\2024_02_14_009004_add_foreigns_to_case_hears_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('case_hears', function (Blueprint $table) {\n            $table\n                ->foreign('court_id')\n                ->references('id')\n                ->on('courts')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('judge_id')\n                ->references('id')\n                ->on('judges')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('attorney_id')\n                ->references('id')\n                ->on('attorneys')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('case_charge_id')\n                ->references('id')\n                ->on('case_charges')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('wittness_id')\n                ->references('id')\n                ->on('wittnesses')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('case_hears', function (Blueprint $table) {\n            $table->dropForeign(['court_id']);\n            $table->dropForeign(['judge_id']);\n            $table->dropForeign(['attorney_id']);\n            $table->dropForeign(['case_charge_id']);\n            $table->dropForeign(['wittness_id']);\n        });\n    }\n};\n","module":"entity:72|entity:66|entity:68|entity:67|entity:71|entity:70","path":"\\database\\migrations\\2024_02_14_009004_add_foreigns_to_case_hears_table.php"},"\\database\\migrations\\2024_02_14_009006_add_foreigns_to_decisions_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('decisions', function (Blueprint $table) {\n            $table\n                ->foreign('case_hear_id')\n                ->references('id')\n                ->on('case_hears')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('decisions', function (Blueprint $table) {\n            $table->dropForeign(['case_hear_id']);\n        });\n    }\n};\n","module":"entity:73|entity:72","path":"\\database\\migrations\\2024_02_14_009006_add_foreigns_to_decisions_table.php"},"\\database\\migrations\\2024_02_14_009002_add_foreigns_to_judges_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('judges', function (Blueprint $table) {\n            $table\n                ->foreign('court_id')\n                ->references('id')\n                ->on('courts')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('judges', function (Blueprint $table) {\n            $table->dropForeign(['court_id']);\n        });\n    }\n};\n","module":"entity:68|entity:66","path":"\\database\\migrations\\2024_02_14_009002_add_foreigns_to_judges_table.php"},"\\app\\Models\\Appointment.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Appointment extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['date', 'Description', 'case_hear_id'];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'date' => 'datetime',\n    ];\n\n    public function caseHear()\n    {\n        return $this->belongsTo(CaseHear::class);\n    }\n}\n","module":"entity:74","path":"\\app\\Models\\Appointment.php"},"\\app\\Models\\Attorney.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Attorney extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'attorneyID',\n        'Name',\n        'courtType',\n        'Address',\n        'State',\n        'EmpType',\n        'description',\n        'court_id',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    public function court()\n    {\n        return $this->belongsTo(Court::class);\n    }\n\n    public function caseHears()\n    {\n        return $this->hasMany(CaseHear::class);\n    }\n}\n","module":"entity:67","path":"\\app\\Models\\Attorney.php"},"\\app\\Models\\Bar.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Bar extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'address',\n        'state',\n        'location',\n        'description',\n        'court_id',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    public function court()\n    {\n        return $this->belongsTo(Court::class);\n    }\n}\n","module":"entity:69","path":"\\app\\Models\\Bar.php"},"\\app\\Models\\CaseCharge.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass CaseCharge extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'deptName',\n        'mid',\n        'rank',\n        'name',\n        'address',\n        'state',\n        'crimeDescription',\n        'crimeDate',\n        'ChargeDate',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $table = 'case_charges';\n\n    protected $casts = [\n        'crimeDate' => 'datetime',\n        'ChargeDate' => 'datetime',\n    ];\n\n    public function caseHears()\n    {\n        return $this->hasMany(CaseHear::class);\n    }\n}\n","module":"entity:71","path":"\\app\\Models\\CaseCharge.php"},"\\app\\Models\\CaseHear.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass CaseHear extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'CaseID',\n        'casename',\n        'fileNumber',\n        'address',\n        'state',\n        'location',\n        'caseStartDate',\n        'description',\n        'court_id',\n        'judge_id',\n        'attorney_id',\n        'case_charge_id',\n        'wittness_id',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $table = 'case_hears';\n\n    protected $casts = [\n        'caseStartDate' => 'datetime',\n    ];\n\n    public function court()\n    {\n        return $this->belongsTo(Court::class);\n    }\n\n    public function judge()\n    {\n        return $this->belongsTo(Judge::class);\n    }\n\n    public function attorney()\n    {\n        return $this->belongsTo(Attorney::class);\n    }\n\n    public function caseCharge()\n    {\n        return $this->belongsTo(CaseCharge::class);\n    }\n\n    public function wittness()\n    {\n        return $this->belongsTo(Wittness::class);\n    }\n\n    public function decisions()\n    {\n        return $this->hasMany(Decision::class);\n    }\n\n    public function appointments()\n    {\n        return $this->hasMany(Appointment::class);\n    }\n}\n","module":"entity:72","path":"\\app\\Models\\CaseHear.php"},"\\app\\Models\\Court.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Court extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'courtID',\n        'name',\n        'courtType',\n        'speciality',\n        'description',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    public function attorneys()\n    {\n        return $this->hasMany(Attorney::class);\n    }\n\n    public function judges()\n    {\n        return $this->hasMany(Judge::class);\n    }\n\n    public function bars()\n    {\n        return $this->hasMany(Bar::class);\n    }\n\n    public function caseHears()\n    {\n        return $this->hasMany(CaseHear::class);\n    }\n}\n","module":"entity:66","path":"\\app\\Models\\Court.php"},"\\app\\Models\\Decision.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Decision extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'decisionDate',\n        'Decisiontype',\n        'Description',\n        'case_hear_id',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'decisionDate' => 'datetime',\n    ];\n\n    public function caseHear()\n    {\n        return $this->belongsTo(CaseHear::class);\n    }\n}\n","module":"entity:73","path":"\\app\\Models\\Decision.php"},"\\app\\Models\\Judge.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Judge extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'judgeID',\n        'name',\n        'courtTyep',\n        'Address',\n        'state',\n        'Emptype',\n        'description',\n        'court_id',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    public function court()\n    {\n        return $this->belongsTo(Court::class);\n    }\n\n    public function caseHears()\n    {\n        return $this->hasMany(CaseHear::class);\n    }\n}\n","module":"entity:68","path":"\\app\\Models\\Judge.php"},"\\app\\Models\\User.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse Laravel\\Sanctum\\HasApiTokens;\nuse App\\Models\\Scopes\\Searchable;\nuse Spatie\\Permission\\Traits\\HasRoles;\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\n\nclass User extends Authenticatable\n{\n    use HasRoles;\n    use Notifiable;\n    use HasFactory;\n    use Searchable;\n    use HasApiTokens;\n\n    protected $fillable = ['name', 'email', 'password', 'description'];\n\n    protected $searchableFields = ['*'];\n\n    protected $hidden = [\n        'password',\n        'remember_token',\n        'two_factor_secret',\n        'two_factor_recovery_codes',\n    ];\n\n    protected $casts = [\n        'email_verified_at' => 'datetime',\n        'two_factor_confirmed_at' => 'datetime',\n    ];\n\n    public function isSuperAdmin(): bool\n    {\n        return $this->hasRole('super-admin');\n    }\n}\n","module":"entity:65","path":"\\app\\Models\\User.php"},"\\app\\Models\\Wittness.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Wittness extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'wittnessID',\n        'name',\n        'address',\n        'state',\n        'wittnessType',\n        'description',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    public function caseHears()\n    {\n        return $this->hasMany(CaseHear::class);\n    }\n}\n","module":"entity:70","path":"\\app\\Models\\Wittness.php"},"\\app\\Models\\Scopes\\Searchable.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models\\Scopes;\n\nuse Illuminate\\Database\\Eloquent\\Builder;\n\ntrait Searchable\n{\n    /**\n     * Search paginated items ordering by ID descending\n     */\n    public function scopeSearchLatestPaginated(\n        Builder $query,\n        string $search,\n        int $paginationQuantity = 10\n    ): Builder {\n        return $query\n            ->search($search)\n            ->orderBy('updated_at', 'desc')\n            ->paginate($paginationQuantity);\n    }\n\n    /**\n     * Adds a scope to search the table based on the\n     * $searchableFields array inside the model\n     */\n    public function scopeSearch(Builder $query, string $search): Builder\n    {\n        $query->where(function ($query) use ($search) {\n            foreach ($this->getSearchableFields() as $field) {\n                $query->orWhere($field, 'like', \"%{$search}%\");\n            }\n        });\n\n        return $query;\n    }\n\n    /**\n     * Returns the searchable fields. If $searchableFields is undefined,\n     * or is an empty array, or its first element is '*', it will search\n     * in all table fields\n     */\n    protected function getSearchableFields(): array\n    {\n        if (isset($this->searchableFields) && count($this->searchableFields)) {\n            return $this->searchableFields[0] === '*'\n                ? $this->getAllModelTableFields()\n                : $this->searchableFields;\n        }\n\n        return $this->getAllModelTableFields();\n    }\n\n    /**\n     * Gets all fields from Model's table\n     */\n    protected function getAllModelTableFields(): array\n    {\n        $tableName = $this->getTable();\n\n        return $this->getConnection()\n            ->getSchemaBuilder()\n            ->getColumnListing($tableName);\n    }\n}\n","module":"base","path":"\\app\\Models\\Scopes\\Searchable.php"},"\\app\\Http\\Controllers\\Api\\AuthController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\JsonResponse;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Validation\\ValidationException;\n\nclass AuthController extends Controller\n{\n    public function login(Request $request): JsonResponse\n    {\n        $credentials = $request->validate([\n            'email' => 'required|email',\n            'password' => 'required',\n        ]);\n\n        if (!auth()->attempt($credentials)) {\n            throw ValidationException::withMessages([\n                'email' => [trans('auth.failed')],\n            ]);\n        }\n\n        $user = User::whereEmail($request->email)->firstOrFail();\n\n        $token = $user->createToken('auth-token');\n\n        return response()->json([\n            'token' => $token->plainTextToken,\n        ]);\n    }\n}\n","module":"base","path":"\\app\\Http\\Controllers\\Api\\AuthController.php"},"\\database\\seeders\\PermissionsSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse Spatie\\Permission\\Models\\Role;\nuse Spatie\\Permission\\Models\\Permission;\nuse Spatie\\Permission\\PermissionRegistrar;\n\nclass PermissionsSeeder extends Seeder\n{\n    public function run(): void\n    {\n        // Reset cached roles and permissions\n        app()[PermissionRegistrar::class]->forgetCachedPermissions();\n\n        // Create default permissions\n        Permission::create(['name' => 'list appointments']);\n        Permission::create(['name' => 'view appointments']);\n        Permission::create(['name' => 'create appointments']);\n        Permission::create(['name' => 'update appointments']);\n        Permission::create(['name' => 'delete appointments']);\n\n        Permission::create(['name' => 'list attorneys']);\n        Permission::create(['name' => 'view attorneys']);\n        Permission::create(['name' => 'create attorneys']);\n        Permission::create(['name' => 'update attorneys']);\n        Permission::create(['name' => 'delete attorneys']);\n\n        Permission::create(['name' => 'list bars']);\n        Permission::create(['name' => 'view bars']);\n        Permission::create(['name' => 'create bars']);\n        Permission::create(['name' => 'update bars']);\n        Permission::create(['name' => 'delete bars']);\n\n        Permission::create(['name' => 'list casecharges']);\n        Permission::create(['name' => 'view casecharges']);\n        Permission::create(['name' => 'create casecharges']);\n        Permission::create(['name' => 'update casecharges']);\n        Permission::create(['name' => 'delete casecharges']);\n\n        Permission::create(['name' => 'list casehears']);\n        Permission::create(['name' => 'view casehears']);\n        Permission::create(['name' => 'create casehears']);\n        Permission::create(['name' => 'update casehears']);\n        Permission::create(['name' => 'delete casehears']);\n\n        Permission::create(['name' => 'list courts']);\n        Permission::create(['name' => 'view courts']);\n        Permission::create(['name' => 'create courts']);\n        Permission::create(['name' => 'update courts']);\n        Permission::create(['name' => 'delete courts']);\n\n        Permission::create(['name' => 'list decisions']);\n        Permission::create(['name' => 'view decisions']);\n        Permission::create(['name' => 'create decisions']);\n        Permission::create(['name' => 'update decisions']);\n        Permission::create(['name' => 'delete decisions']);\n\n        Permission::create(['name' => 'list judges']);\n        Permission::create(['name' => 'view judges']);\n        Permission::create(['name' => 'create judges']);\n        Permission::create(['name' => 'update judges']);\n        Permission::create(['name' => 'delete judges']);\n\n        Permission::create(['name' => 'list wittnesses']);\n        Permission::create(['name' => 'view wittnesses']);\n        Permission::create(['name' => 'create wittnesses']);\n        Permission::create(['name' => 'update wittnesses']);\n        Permission::create(['name' => 'delete wittnesses']);\n\n        // Create user role and assign existing permissions\n        $currentPermissions = Permission::all();\n        $userRole = Role::create(['name' => 'user']);\n        $userRole->givePermissionTo($currentPermissions);\n\n        // Create admin exclusive permissions\n        Permission::create(['name' => 'list roles']);\n        Permission::create(['name' => 'view roles']);\n        Permission::create(['name' => 'create roles']);\n        Permission::create(['name' => 'update roles']);\n        Permission::create(['name' => 'delete roles']);\n\n        Permission::create(['name' => 'list permissions']);\n        Permission::create(['name' => 'view permissions']);\n        Permission::create(['name' => 'create permissions']);\n        Permission::create(['name' => 'update permissions']);\n        Permission::create(['name' => 'delete permissions']);\n\n        Permission::create(['name' => 'list users']);\n        Permission::create(['name' => 'view users']);\n        Permission::create(['name' => 'create users']);\n        Permission::create(['name' => 'update users']);\n        Permission::create(['name' => 'delete users']);\n\n        // Create admin role and assign all permissions\n        $allPermissions = Permission::all();\n        $adminRole = Role::create(['name' => 'super-admin']);\n        $adminRole->givePermissionTo($allPermissions);\n\n        $user = \\App\\Models\\User::whereEmail('admin@admin.com')->first();\n\n        if ($user) {\n            $user->assignRole($adminRole);\n        }\n    }\n}\n","module":"permissions","path":"\\database\\seeders\\PermissionsSeeder.php"},"\\app\\Http\\Controllers\\RoleController.php":{"deleteOnGeneration":true,"content":"<?php\r\n\r\nnamespace App\\Http\\Controllers;\r\n\r\nuse Illuminate\\View\\View;\r\nuse Illuminate\\Http\\Request;\r\nuse Spatie\\Permission\\Models\\Role;\r\nuse Illuminate\\Http\\RedirectResponse;\r\nuse Spatie\\Permission\\Models\\Permission;\r\n\r\nclass RoleController extends Controller {\r\n\r\n    /**\r\n     * Display a listing of the resource.\r\n     */\r\n    public function index(Request $request): View\r\n    {\r\n        $this->authorize('list', Role::class);\r\n\r\n        $search = $request->get('search', '');\r\n        $roles = Role::where('name', 'like', \"%{$search}%\")->paginate(10);\r\n\r\n        return view('app.roles.index')\r\n            ->with('roles', $roles)\r\n            ->with('search', $search);\r\n    }\r\n\r\n    /**\r\n     * Show the form for creating a new resource.\r\n     */\r\n    public function create(): View\r\n    {\r\n        $this->authorize('create', Role::class);\r\n\r\n        $permissions = Permission::all();\r\n\r\n        return view('app.roles.create')->with('permissions', $permissions);\r\n    }\r\n\r\n    /**\r\n     * Store a newly created resource in storage.\r\n     */\r\n    public function store(Request $request): RedirectResponse\r\n    {\r\n\r\n        $this->authorize('create', Role::class);\r\n\r\n        $data = $this->validate($request, [\r\n            'name' => 'required|unique:roles|max:32',\r\n            'permissions' => 'array',\r\n        ]);\r\n\r\n        $role = Role::create($data);\r\n\r\n        $permissions = Permission::find($request->permissions);\r\n        $role->syncPermissions($permissions);\r\n\r\n        return redirect()\r\n            ->route('roles.edit', $role->id)\r\n            ->withSuccess(__('crud.common.created'));\r\n    }\r\n\r\n    /**\r\n     * Display the specified resource.\r\n     */\r\n    public function show(Role $role): View\r\n    {\r\n        $this->authorize('view', Role::class);\r\n\r\n        return view('app.roles.show')->with('role', $role);\r\n    }\r\n\r\n    /**\r\n     * Show the form for editing the specified resource.\r\n     */\r\n    public function edit(Role $role): View\r\n    {\r\n        $this->authorize('update', $role);\r\n\r\n        $permissions = Permission::all();\r\n\r\n        return view('app.roles.edit')\r\n            ->with('role', $role)\r\n            ->with('permissions', $permissions);\r\n    }\r\n\r\n    /**\r\n     * Update the specified resource in storage.\r\n     */\r\n    public function update(Request $request, Role $role): RedirectResponse\r\n    {\r\n        $this->authorize('update', $role);\r\n\r\n        $data = $this->validate($request, [\r\n            'name' => 'required|max:32|unique:roles,name,'.$role->id,\r\n            'permissions' => 'array',\r\n        ]);\r\n        \r\n        $role->update($data);\r\n\r\n        $permissions = Permission::find($request->permissions);\r\n        $role->syncPermissions($permissions);\r\n\r\n        return redirect()\r\n            ->route('roles.edit', $role->id)\r\n            ->withSuccess(__('crud.common.saved'));\r\n    }\r\n\r\n    /**\r\n     * Remove the specified resource from storage.\r\n     */\r\n    public function destroy(Role $role): RedirectResponse\r\n    {\r\n        $this->authorize('delete', $role);\r\n\r\n        $role->delete();\r\n\r\n        return redirect()\r\n            ->route('roles.index')\r\n            ->withSuccess(__('crud.common.removed'));\r\n    }\r\n}","module":"permissions","path":"\\app\\Http\\Controllers\\RoleController.php"},"\\app\\Http\\Controllers\\PermissionController.php":{"deleteOnGeneration":true,"content":"<?php\r\n\r\nnamespace App\\Http\\Controllers;\r\n\r\nuse Illuminate\\View\\View;\r\nuse Illuminate\\Http\\Request;\r\nuse Spatie\\Permission\\Models\\Role;\r\nuse Illuminate\\Http\\RedirectResponse;\r\nuse Spatie\\Permission\\Models\\Permission;\r\n\r\nclass PermissionController extends Controller\r\n{\r\n    /**\r\n    * Display a listing of the resource.\r\n    */\r\n    public function index(Request $request): View\r\n    {\r\n        $this->authorize('list', Permission::class);\r\n\r\n        $search = $request->get('search', '');\r\n        $permissions = Permission::where('name', 'like', \"%{$search}%\")->paginate(10);\r\n\r\n        return view('app.permissions.index')\r\n            ->with('permissions', $permissions)\r\n            ->with('search', $search);\r\n    }\r\n\r\n    /**\r\n    * Show the form for creating a new resource.\r\n    */\r\n    public function create(): View\r\n    {\r\n        $this->authorize('create', Permission::class);\r\n\r\n        $roles = Role::all();\r\n        return view('app.permissions.create')->with('roles', $roles);\r\n    }\r\n\r\n    /**\r\n    * Store a newly created resource in storage.\r\n    */\r\n    public function store(Request $request): RedirectResponse\r\n    {\r\n\r\n        $this->authorize('create', Permission::class);\r\n\r\n        $data = $this->validate($request, [\r\n            'name' => 'required|max:64',\r\n            'roles' => 'array'\r\n        ]);\r\n\r\n        $permission = Permission::create($data);\r\n        \r\n        $roles = Role::find($request->roles);\r\n        $permission->syncRoles($roles);\r\n\r\n        return redirect()\r\n            ->route('permissions.edit', $permission->id)\r\n            ->withSuccess(__('crud.common.created'));\r\n    }\r\n\r\n    /**\r\n    * Display the specified resource.\r\n    */\r\n    public function show(Permission $permission): View\r\n    {\r\n        $this->authorize('view', Permission::class);\r\n\r\n        return view('app.permissions.show')->with('permission', $permission);\r\n    }\r\n\r\n    /**\r\n    * Show the form for editing the specified resource.\r\n    */\r\n    public function edit(Permission $permission): View\r\n    {\r\n        $this->authorize('update', $permission);\r\n\r\n        $roles = Role::get();\r\n\r\n        return view('app.permissions.edit')\r\n            ->with('permission', $permission)\r\n            ->with('roles', $roles);\r\n    }\r\n\r\n    /**\r\n    * Update the specified resource in storage.\r\n    */\r\n    public function update(Request $request, Permission $permission): RedirectResponse\r\n    {\r\n        $this->authorize('update', $permission);\r\n\r\n        $data = $this->validate($request, [\r\n            'name' => 'required|max:40',\r\n            'roles' => 'array'\r\n        ]);\r\n\r\n        $permission->update($data);\r\n        \r\n        $roles = Role::find($request->roles);\r\n        $permission->syncRoles($roles);\r\n\r\n        return redirect()\r\n            ->route('permissions.edit', $permission->id)\r\n            ->withSuccess(__('crud.common.saved'));\r\n    }\r\n\r\n    /**\r\n    * Remove the specified resource from storage.\r\n    */\r\n    public function destroy(Permission $permission): RedirectResponse\r\n    {\r\n        $this->authorize('delete', $permission);\r\n\r\n        $permission->delete();\r\n\r\n        return redirect()\r\n            ->route('permissions.index')\r\n            ->withSuccess(__('crud.common.removed'));\r\n    }\r\n}\r\n","module":"permissions","path":"\\app\\Http\\Controllers\\PermissionController.php"},"\\tests\\Feature\\Controllers\\RoleControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\r\n\r\nnamespace Tests\\Feature\\Controllers;\r\n\r\nuse App\\Models\\User;\r\nuse Spatie\\Permission\\Models\\Role;\r\n\r\nuse Tests\\TestCase;\r\nuse Illuminate\\Foundation\\Testing\\WithFaker;\r\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\r\n\r\nclass RoleControllerTest extends TestCase\r\n{\r\n    use RefreshDatabase, WithFaker;\r\n\r\n    protected function setUp(): void\r\n    {\r\n        parent::setUp();\r\n\r\n        $this->actingAs(User::factory()->create(['email' => 'admin@admin.com']));\r\n        \r\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\r\n\r\n        $this->withoutExceptionHandling();\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_displays_index_view_with_roles(): void\r\n    {\r\n        $response = $this->get(route('roles.index'));\r\n\r\n        $response\r\n            ->assertOk()\r\n            ->assertViewIs('app.roles.index')\r\n            ->assertViewHas('roles');\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_displays_create_view_for_role(): void\r\n    {\r\n        $response = $this->get(route('roles.create'));\r\n\r\n        $response->assertOk()->assertViewIs('app.roles.create');\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_stores_the_role(): void\r\n    {\r\n        $response = $this->post(route('roles.store'), [\r\n            'name' => 'secretary',\r\n            'permissions' => []\r\n        ]);\r\n\r\n        $this->assertDatabaseHas('roles', ['name' => 'secretary']);\r\n\r\n        $role = Role::latest('id')->first();\r\n\r\n        $response->assertRedirect(route('roles.edit', $role));\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_displays_show_view_for_role(): void\r\n    {\r\n        $role = Role::first();\r\n\r\n        $response = $this->get(route('roles.show', $role));\r\n\r\n        $response\r\n            ->assertOk()\r\n            ->assertViewIs('app.roles.show')\r\n            ->assertViewHas('role');\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_displays_edit_view_for_role(): void\r\n    {\r\n        $role = Role::first();\r\n\r\n        $response = $this->get(route('roles.edit', $role));\r\n\r\n        $response\r\n            ->assertOk()\r\n            ->assertViewIs('app.roles.edit')\r\n            ->assertViewHas('role');\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_updates_the_role(): void\r\n    {\r\n        $role = Role::first();\r\n\r\n        $data = [\r\n            'name' => 'manager',\r\n            'permissions' => [],\r\n        ];\r\n\r\n        $response = $this->put(route('roles.update', $role), $data);\r\n\r\n        $this->assertDatabaseHas('roles', [\r\n            'id' => $role->id,\r\n            'name' => 'manager'\r\n        ]);\r\n\r\n        $response->assertRedirect(route('roles.edit', $role));\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_deletes_the_role(): void\r\n    {\r\n        $role = Role::first();\r\n\r\n        $response = $this->delete(route('roles.destroy', $role));\r\n\r\n        $response->assertRedirect(route('roles.index'));\r\n        \r\n        $this->assertModelMissing($role);\r\n    }\r\n}\r\n","module":"permissions","path":"\\tests\\Feature\\Controllers\\RoleControllerTest.php"},"\\tests\\Feature\\Controllers\\PermissionControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\r\n\r\nnamespace Tests\\Feature\\Controllers;\r\n\r\nuse App\\Models\\User;\r\nuse Spatie\\Permission\\Models\\Permission;\r\n\r\nuse Tests\\TestCase;\r\nuse Illuminate\\Foundation\\Testing\\WithFaker;\r\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\r\n\r\nclass PermissionControllerTest extends TestCase\r\n{\r\n    use RefreshDatabase, WithFaker;\r\n\r\n    protected function setUp(): void\r\n    {\r\n        parent::setUp();\r\n\r\n        $this->actingAs(User::factory()->create(['email' => 'admin@admin.com']));\r\n        \r\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\r\n\r\n        $this->withoutExceptionHandling();\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_displays_index_view_with_permissions(): void\r\n    {\r\n        $response = $this->get(route('permissions.index'));\r\n\r\n        $response\r\n            ->assertOk()\r\n            ->assertViewIs('app.permissions.index')\r\n            ->assertViewHas('permissions');\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_displays_create_view_for_permission(): void\r\n    {\r\n        $response = $this->get(route('permissions.create'));\r\n\r\n        $response->assertOk()->assertViewIs('app.permissions.create');\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_stores_the_permission(): void\r\n    {\r\n        $response = $this->post(route('permissions.store'), [\r\n            'name' => 'list secretaries',\r\n            'roles' => []\r\n        ]);\r\n\r\n        $this->assertDatabaseHas('permissions', ['name' => 'list secretaries']);\r\n\r\n        $permission = Permission::latest('id')->first();\r\n\r\n        $response->assertRedirect(route('permissions.edit', $permission));\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_displays_show_view_for_permission(): void\r\n    {\r\n        $permission = Permission::first();\r\n\r\n        $response = $this->get(route('permissions.show', $permission));\r\n\r\n        $response\r\n            ->assertOk()\r\n            ->assertViewIs('app.permissions.show')\r\n            ->assertViewHas('permission');\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_displays_edit_view_for_permission(): void\r\n    {\r\n        $permission = Permission::first();\r\n\r\n        $response = $this->get(route('permissions.edit', $permission));\r\n\r\n        $response\r\n            ->assertOk()\r\n            ->assertViewIs('app.permissions.edit')\r\n            ->assertViewHas('permission');\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_updates_the_permission(): void\r\n    {\r\n        $permission = Permission::first();\r\n\r\n        $data = [\r\n            'name' => 'list managers',\r\n            'roles' => [],\r\n        ];\r\n\r\n        $response = $this->put(route('permissions.update', $permission), $data);\r\n\r\n        $this->assertDatabaseHas('permissions', [\r\n            'id' => $permission->id,\r\n            'name' => 'list managers'\r\n        ]);\r\n\r\n        $response->assertRedirect(route('permissions.edit', $permission));\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     */\r\n    public function it_deletes_the_permission(): void\r\n    {\r\n        $permission = Permission::first();\r\n\r\n        $response = $this->delete(route('permissions.destroy', $permission));\r\n\r\n        $response->assertRedirect(route('permissions.index'));\r\n        \r\n        $this->assertModelMissing($permission);\r\n    }\r\n}\r\n","module":"permissions","path":"\\tests\\Feature\\Controllers\\PermissionControllerTest.php"},"\\resources\\views\\app\\roles\\edit.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('roles.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.roles.edit_title')\n            </h4>\n\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('roles.update', $role) }}\"\n                class=\"mt-4\"\n            >\n                @include('app.roles.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a href=\"{{ route('roles.index') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <a href=\"{{ route('roles.create') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-add text-primary\"></i>\n                        @lang('crud.common.create')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.update')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud","path":"\\resources\\views\\app\\roles\\edit.blade.php"},"\\resources\\views\\app\\roles\\index.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"searchbar mt-0 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form>\n                    <div class=\"input-group\">\n                        <input\n                            id=\"indexSearch\"\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"{{ __('crud.common.search') }}\"\n                            value=\"{{ $search ?? '' }}\"\n                            class=\"form-control\"\n                            autocomplete=\"off\"\n                        />\n                        <div class=\"input-group-append\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                <i class=\"icon ion-md-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6 text-right\">\n                @can('create', App\\Models\\Role::class)\n                <a href=\"{{ route('roles.create') }}\" class=\"btn btn-primary\">\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div style=\"display: flex; justify-content: space-between;\">\n                <h4 class=\"card-title\">@lang('crud.roles.index_title')</h4>\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-borderless table-hover\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left\">\n                                @lang('crud.roles.inputs.name')\n                            </th>\n                            <th class=\"text-center\">\n                                @lang('crud.common.actions')\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        @forelse($roles as $role)\n                        <tr>\n                            <td>{{ $role->name ?? '-' }}</td>\n                            <td class=\"text-center\" style=\"width: 134px;\">\n                                <div\n                                    role=\"group\"\n                                    aria-label=\"Row Actions\"\n                                    class=\"btn-group\"\n                                >\n                                    @can('update', $role)\n                                    <a href=\"{{ route('roles.edit', $role) }}\">\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-create\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('view', $role)\n                                    <a href=\"{{ route('roles.show', $role) }}\">\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-eye\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('delete', $role)\n                                    <form\n                                        action=\"{{ route('roles.destroy', $role) }}\"\n                                        method=\"POST\"\n                                        onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                    >\n                                        @csrf @method('DELETE')\n                                        <button\n                                            type=\"submit\"\n                                            class=\"btn btn-light text-danger\"\n                                        >\n                                            <i class=\"icon ion-md-trash\"></i>\n                                        </button>\n                                    </form>\n                                    @endcan\n                                </div>\n                            </td>\n                        </tr>\n                        @empty\n                        <tr>\n                            <td colspan=\"2\">\n                                @lang('crud.common.no_items_found')\n                            </td>\n                        </tr>\n                        @endforelse\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"2\">{!! $roles->render() !!}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud","path":"\\resources\\views\\app\\roles\\index.blade.php"},"\\resources\\views\\app\\roles\\create.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('roles.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.roles.create_title')\n            </h4>\n\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('roles.store') }}\"\n                class=\"mt-4\"\n            >\n                @include('app.roles.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a href=\"{{ route('roles.index') }}\" class=\"btn btn-light\">\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.create')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud","path":"\\resources\\views\\app\\roles\\create.blade.php"},"\\resources\\views\\app\\roles\\show.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('roles.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.roles.show_title')\n            </h4>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.roles.inputs.name')</h5>\n                    <span>{{ $role->name ?? '-' }}</span>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <a href=\"{{ route('roles.index') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-return-left\"></i>\n                    @lang('crud.common.back')\n                </a>\n\n                @can('create', App\\Models\\Role::class)\n                <a href=\"{{ route('roles.create') }}\" class=\"btn btn-light\">\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud","path":"\\resources\\views\\app\\roles\\show.blade.php"},"\\resources\\views\\app\\roles\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($role) @endphp\n\n<div class=\"row\">\n    <x-inputs.group class=\"col-sm-12\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $role->name : ''))\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <div class=\"form-group col-sm-12 mt-4\">\n        <h4>Assign @lang('crud.permissions.name')</h4>\n\n        @foreach ($permissions as $permission)\n        <div>\n            <x-inputs.checkbox\n                id=\"permission{{ $permission->id }}\"\n                name=\"permissions[]\"\n                label=\"{{ ucfirst($permission->name) }}\"\n                value=\"{{ $permission->id }}\"\n                :checked=\"isset($role) ? $role->hasPermissionTo($permission) : false\"\n                :add-hidden-value=\"false\"\n            ></x-inputs.checkbox>\n        </div>\n        @endforeach\n    </div>\n</div>\n","module":"crud","path":"\\resources\\views\\app\\roles\\form-inputs.blade.php"},"\\resources\\views\\app\\permissions\\edit.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('permissions.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.permissions.edit_title')\n            </h4>\n\n            <x-form\n                method=\"PUT\"\n                action=\"{{ route('permissions.update', $permission) }}\"\n                class=\"mt-4\"\n            >\n                @include('app.permissions.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('permissions.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <a\n                        href=\"{{ route('permissions.create') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-add text-primary\"></i>\n                        @lang('crud.common.create')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.update')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud","path":"\\resources\\views\\app\\permissions\\edit.blade.php"},"\\resources\\views\\app\\permissions\\index.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"searchbar mt-0 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form>\n                    <div class=\"input-group\">\n                        <input\n                            id=\"indexSearch\"\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"{{ __('crud.common.search') }}\"\n                            value=\"{{ $search ?? '' }}\"\n                            class=\"form-control\"\n                            autocomplete=\"off\"\n                        />\n                        <div class=\"input-group-append\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                <i class=\"icon ion-md-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6 text-right\">\n                @can('create', App\\Models\\Permission::class)\n                <a\n                    href=\"{{ route('permissions.create') }}\"\n                    class=\"btn btn-primary\"\n                >\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div style=\"display: flex; justify-content: space-between;\">\n                <h4 class=\"card-title\">\n                    @lang('crud.permissions.index_title')\n                </h4>\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-borderless table-hover\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left\">\n                                @lang('crud.permissions.inputs.name')\n                            </th>\n                            <th class=\"text-center\">\n                                @lang('crud.common.actions')\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        @forelse($permissions as $permission)\n                        <tr>\n                            <td>{{ $permission->name ?? '-' }}</td>\n                            <td class=\"text-center\" style=\"width: 134px;\">\n                                <div\n                                    role=\"group\"\n                                    aria-label=\"Row Actions\"\n                                    class=\"btn-group\"\n                                >\n                                    @can('update', $permission)\n                                    <a\n                                        href=\"{{ route('permissions.edit', $permission) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-create\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('view', $permission)\n                                    <a\n                                        href=\"{{ route('permissions.show', $permission) }}\"\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-light\"\n                                        >\n                                            <i class=\"icon ion-md-eye\"></i>\n                                        </button>\n                                    </a>\n                                    @endcan @can('delete', $permission)\n                                    <form\n                                        action=\"{{ route('permissions.destroy', $permission) }}\"\n                                        method=\"POST\"\n                                        onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                    >\n                                        @csrf @method('DELETE')\n                                        <button\n                                            type=\"submit\"\n                                            class=\"btn btn-light text-danger\"\n                                        >\n                                            <i class=\"icon ion-md-trash\"></i>\n                                        </button>\n                                    </form>\n                                    @endcan\n                                </div>\n                            </td>\n                        </tr>\n                        @empty\n                        <tr>\n                            <td colspan=\"2\">\n                                @lang('crud.common.no_items_found')\n                            </td>\n                        </tr>\n                        @endforelse\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"2\">{!! $permissions->render() !!}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud","path":"\\resources\\views\\app\\permissions\\index.blade.php"},"\\resources\\views\\app\\permissions\\create.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('permissions.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.permissions.create_title')\n            </h4>\n\n            <x-form\n                method=\"POST\"\n                action=\"{{ route('permissions.store') }}\"\n                class=\"mt-4\"\n            >\n                @include('app.permissions.form-inputs')\n\n                <div class=\"mt-4\">\n                    <a\n                        href=\"{{ route('permissions.index') }}\"\n                        class=\"btn btn-light\"\n                    >\n                        <i class=\"icon ion-md-return-left text-primary\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                        <i class=\"icon ion-md-save\"></i>\n                        @lang('crud.common.create')\n                    </button>\n                </div>\n            </x-form>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud","path":"\\resources\\views\\app\\permissions\\create.blade.php"},"\\resources\\views\\app\\permissions\\show.blade.php":{"deleteOnGeneration":true,"content":"@extends('layouts.app')\r\n\r\n@section('content')\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h4 class=\"card-title\">\n                <a href=\"{{ route('permissions.index') }}\" class=\"mr-4\"\n                    ><i class=\"icon ion-md-arrow-back\"></i\n                ></a>\n                @lang('crud.permissions.show_title')\n            </h4>\n\n            <div class=\"mt-4\">\n                <div class=\"mb-4\">\n                    <h5>@lang('crud.permissions.inputs.name')</h5>\n                    <span>{{ $permission->name ?? '-' }}</span>\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <a\n                    href=\"{{ route('permissions.index') }}\"\n                    class=\"btn btn-light\"\n                >\n                    <i class=\"icon ion-md-return-left\"></i>\n                    @lang('crud.common.back')\n                </a>\n\n                @can('create', App\\Models\\Permission::class)\n                <a\n                    href=\"{{ route('permissions.create') }}\"\n                    class=\"btn btn-light\"\n                >\n                    <i class=\"icon ion-md-add\"></i> @lang('crud.common.create')\n                </a>\n                @endcan\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n","module":"crud","path":"\\resources\\views\\app\\permissions\\show.blade.php"},"\\resources\\views\\app\\permissions\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($permission) @endphp\n\n<div class=\"row\">\n    <x-inputs.group class=\"col-sm-12\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $permission->name : ''))\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <div class=\"form-group col-sm-12 mt-4\">\n        <h4>Assign @lang('crud.roles.name')</h4>\n\n        @foreach ($roles as $role)\n        <div>\n            <x-inputs.checkbox\n                id=\"role{{ $role->id }}\"\n                name=\"roles[]\"\n                label=\"{{ ucfirst($role->name) }}\"\n                value=\"{{ $role->id }}\"\n                :checked=\"isset($permission) ? $role->hasPermissionTo($permission) : false\"\n                :add-hidden-value=\"false\"\n            ></x-inputs.checkbox>\n        </div>\n        @endforeach\n    </div>\n</div>\n","module":"crud","path":"\\resources\\views\\app\\permissions\\form-inputs.blade.php"},"\\app\\Http\\Resources\\PermissionCollection.php":{"deleteOnGeneration":true,"content":"<?php\r\n\r\nnamespace App\\Http\\Resources;\r\n\r\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\r\nuse Illuminate\\Http\\Request;\r\n\r\nclass PermissionCollection extends ResourceCollection\r\n{\r\n    /**\r\n     * Transform the resource collection into an array.\r\n     */\r\n    public function toArray(Request $request): array\r\n    {\r\n        return parent::toArray($request);\r\n    }\r\n}\r\n","module":"base","path":"\\app\\Http\\Resources\\PermissionCollection.php"},"\\app\\Http\\Resources\\PermissionResource.php":{"deleteOnGeneration":true,"content":"<?php\r\n\r\nnamespace App\\Http\\Resources;\r\n\r\nuse Illuminate\\Http\\Request;\r\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\r\n\r\nclass PermissionResource extends JsonResource\r\n{\r\n    /**\r\n     * Transform the resource into an array.\r\n     */\r\n    public function toArray(Request $request): array\r\n    {\r\n        return parent::toArray($request);\r\n    }\r\n}\r\n","module":"base","path":"\\app\\Http\\Resources\\PermissionResource.php"},"\\app\\Http\\Resources\\RoleCollection.php":{"deleteOnGeneration":true,"content":"<?php\r\n\r\nnamespace App\\Http\\Resources;\r\n\r\nuse Illuminate\\Http\\Request;\r\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\r\n\r\nclass RoleCollection extends ResourceCollection\r\n{\r\n    /**\r\n     * Transform the resource collection into an array.\r\n     */\r\n    public function toArray(Request $request): array\r\n    {\r\n        return parent::toArray($request);\r\n    }\r\n}\r\n","module":"base","path":"\\app\\Http\\Resources\\RoleCollection.php"},"\\app\\Http\\Resources\\RoleResource.php":{"deleteOnGeneration":true,"content":"<?php\r\n\r\nnamespace App\\Http\\Resources;\r\n\r\nuse Illuminate\\Http\\Request;\r\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\r\n\r\nclass RoleResource extends JsonResource\r\n{\r\n    /**\r\n     * Transform the resource into an array.\r\n     */\r\n    public function toArray(Request $request): array\r\n    {\r\n        return parent::toArray($request);\r\n    }\r\n}\r\n","module":"base","path":"\\app\\Http\\Resources\\RoleResource.php"},"\\app\\Http\\Controllers\\Api\\PermissionController.php":{"deleteOnGeneration":true,"content":"<?php\r\n\r\nnamespace App\\Http\\Controllers\\Api;\r\n\r\nuse Illuminate\\Http\\Request;\r\nuse Illuminate\\Http\\Response;\r\nuse Spatie\\Permission\\Models\\Role;\r\nuse App\\Http\\Controllers\\Controller;\r\nuse Spatie\\Permission\\Models\\Permission;\r\nuse App\\Http\\Resources\\PermissionResource;\r\nuse App\\Http\\Resources\\PermissionCollection;\r\n\r\nclass PermissionController extends Controller\r\n{\r\n    public function index(Request $request): PermissionCollection\r\n    {\r\n        $this->authorize('list', Permission::class);\r\n\r\n        $search = $request->get('search', '');\r\n        $permissions = Permission::where('name', 'like', \"%{$search}%\")->paginate();\r\n\r\n        return new PermissionCollection($permissions);\r\n    }\r\n\r\n    public function store(Request $request): PermissionResource\r\n    {\r\n        $this->authorize('create', Permission::class);\r\n\r\n        $validated = $this->validate($request, [\r\n            'name' => 'required|max:64',\r\n            'roles' => 'array'\r\n        ]);\r\n\r\n        $permission = Permission::create($validated);\r\n        \r\n        $roles = Role::find($request->roles);\r\n        $permission->syncRoles($roles);\r\n\r\n        return new PermissionResource($permission);\r\n    }\r\n\r\n    public function show(Permission $permission): PermissionResource\r\n    {\r\n        $this->authorize('view', Permission::class);\r\n\r\n        return new PermissionResource($permission);\r\n    }\r\n\r\n    public function update(Request $request, Permission $permission): PermissionResource\r\n    {\r\n        $this->authorize('update', $permission);\r\n\r\n        $validated = $this->validate($request, [\r\n            'name' => 'required|max:40',\r\n            'roles' => 'array'\r\n        ]);\r\n\r\n        $permission->update($validated);\r\n        \r\n        $roles = Role::find($request->roles);\r\n        $permission->syncRoles($roles);\r\n\r\n        return new PermissionResource($permission);\r\n    }\r\n\r\n    public function destroy(Permission $permission): Response\r\n    {\r\n        $this->authorize('delete', $permission);\r\n\r\n        $permission->delete();\r\n\r\n        return response()->noContent();\r\n    }\r\n}\r\n","module":"base","path":"\\app\\Http\\Controllers\\Api\\PermissionController.php"},"\\app\\Http\\Controllers\\Api\\RoleController.php":{"deleteOnGeneration":true,"content":"<?php\r\n\r\nnamespace App\\Http\\Controllers\\Api;\r\n\r\nuse Illuminate\\Http\\Request;\r\nuse Illuminate\\Http\\Response;\r\nuse Spatie\\Permission\\Models\\Role;\r\nuse App\\Http\\Resources\\RoleResource;\r\nuse App\\Http\\Controllers\\Controller;\r\nuse App\\Http\\Resources\\RoleCollection;\r\nuse Spatie\\Permission\\Models\\Permission;\r\n\r\nclass RoleController extends Controller\r\n{\r\n    public function index(Request $request): RoleCollection\r\n    {\r\n        $this->authorize('list', Role::class);\r\n\r\n        $search = $request->get('search', '');\r\n        $roles = Role::where('name', 'like', \"%{$search}%\")->paginate();\r\n\r\n        return new RoleCollection($roles);\r\n    }\r\n\r\n    public function store(Request $request): RoleResource\r\n    {\r\n        $this->authorize('create', Role::class);\r\n\r\n        $validated = $this->validate($request, [\r\n            'name' => 'required|unique:roles|max:32',\r\n            'permissions' => 'array',\r\n        ]);\r\n\r\n        $role = Role::create($validated);\r\n\r\n        $permissions = Permission::find($request->permissions);\r\n        $role->syncPermissions($permissions);\r\n\r\n        return new RoleResource($role);\r\n    }\r\n\r\n    public function show(Role $role): RoleResource\r\n    {\r\n        $this->authorize('view', Role::class);\r\n\r\n        return new RoleResource($role);\r\n    }\r\n\r\n    public function update(Request $request, Role $role): RoleResource\r\n    {\r\n        $this->authorize('update', $role);\r\n\r\n        $validated = $this->validate($request, [\r\n            'name'=>'required|max:32|unique:roles,name,'.$role->id,\r\n            'permissions' =>'array',\r\n        ]);\r\n        \r\n        $role->update($validated);\r\n\r\n        $permissions = Permission::find($request->permissions);\r\n        $role->syncPermissions($permissions);\r\n\r\n        return new RoleResource($role);\r\n    }\r\n\r\n    public function destroy(Role $role): Response\r\n    {\r\n        $this->authorize('delete', $role);\r\n\r\n        $role->delete();\r\n\r\n        return response()->noContent();\r\n    }\r\n}","module":"base","path":"\\app\\Http\\Controllers\\Api\\RoleController.php"},"\\vite.config.js":{"deleteOnGeneration":true,"content":"import { defineConfig } from 'vite';\r\nimport laravel from 'laravel-vite-plugin';\r\n\r\nexport default defineConfig({\r\n    plugins: [\r\n        laravel([\r\n            'resources/sass/app.scss',\r\n            'resources/js/app.js',\r\n        ]),\r\n    ],\r\n});","module":"base","path":"\\vite.config.js"},"\\resources\\js\\bootstrap.js":{"deleteOnGeneration":true,"content":"import _ from 'lodash';\r\nwindow._ = _;\r\n\r\n/**\r\n * We'll load jQuery and the Bootstrap jQuery plugin which provides support\r\n * for JavaScript based Bootstrap features such as modals and tabs. This\r\n * code may be modified to fit the specific needs of your application.\r\n */\r\n\r\nimport popper from 'popper.js';\r\nimport jquery from 'jquery';\r\nimport bootstrap from 'bootstrap';\r\n\r\ntry {\r\n\r\n    window.Popper = popper;\r\n    window.$ = window.jQuery = jquery;\r\n    \r\n} catch (e) {}\r\n\r\n/**\r\n * We'll load the axios HTTP library which allows us to easily issue requests\r\n * to our Laravel back-end. This library automatically handles sending the\r\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\r\n */\r\n\r\n import axios from 'axios';\r\n window.axios = axios;\r\n \r\n window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\n/**\r\n * Echo exposes an expressive API for subscribing to channels and listening\r\n * for events that are broadcast by Laravel. Echo and event broadcasting\r\n * allows your team to easily build robust real-time web applications.\r\n */\r\n\r\n// import Echo from 'laravel-echo';\r\n\r\n// window.Pusher = require('pusher-js');\r\n\r\n// window.Echo = new Echo({\r\n//     broadcaster: 'pusher',\r\n//     key: process.env.MIX_PUSHER_APP_KEY,\r\n//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\r\n//     forceTLS: true\r\n// });\r\n","module":"base","path":"\\resources\\js\\bootstrap.js"},"\\resources\\sass\\app.scss":{"deleteOnGeneration":true,"content":"// Fonts\r\n@import url('https://fonts.googleapis.com/css?family=Nunito');\r\n\r\n// Variables\r\n@import 'variables';\r\n\r\n// Bootstrap\r\n@import 'node_modules/bootstrap/scss/bootstrap';","module":"base","path":"\\resources\\sass\\app.scss"},"\\resources\\views\\layouts\\sidebar.blade.php":{"deleteOnGeneration":true,"content":"<!-- Main Sidebar Container -->\n<aside class=\"main-sidebar sidebar-dark-primary elevation-4\">\n    <!-- Brand Logo -->\n    <a href=\"{{ url('/') }}\" class=\"brand-link\">\n        <img src=\"https://vemto.app/favicon.png\" alt=\"Vemto Logo\" class=\"brand-image bg-white img-circle\">\n        <span class=\"brand-text font-weight-light\">CCMS</span>\n    </a>\n\n    <!-- Sidebar -->\n    <div class=\"sidebar\">\n\n        <!-- Sidebar Menu -->\n        <nav class=\"mt-2\">\n            <ul class=\"nav nav-pills nav-sidebar flex-column nav-child-indent\" data-widget=\"treeview\" role=\"menu\">\n\n                @auth\n                <li class=\"nav-item\">\n                    <a href=\"{{ route('home') }}\" class=\"nav-link\">\n                        <i class=\"nav-icon icon ion-md-pulse\"></i>\n                        <p>\n                            Dashboard\n                        </p>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a href=\"#\" class=\"nav-link\">\n                        <i class=\"nav-icon icon ion-md-apps\"></i>\n                        <p>\n                            Apps\n                            <i class=\"nav-icon right icon ion-md-arrow-round-back\"></i>\n                        </p>\n                    </a>\n                    <ul class=\"nav nav-treeview\">\n                            @can('view-any', App\\Models\\User::class)\n                            <li class=\"nav-item\">\n                                <a href=\"{{ route('users.index') }}\" class=\"nav-link\">\n                                    <i class=\"nav-icon icon ion-md-radio-button-off\"></i>\n                                    <p>Users</p>\n                                </a>\n                            </li>\n                            @endcan\n                            @can('view-any', App\\Models\\Court::class)\n                            <li class=\"nav-item\">\n                                <a href=\"{{ route('courts.index') }}\" class=\"nav-link\">\n                                    <i class=\"nav-icon icon ion-md-radio-button-off\"></i>\n                                    <p>Courts</p>\n                                </a>\n                            </li>\n                            @endcan\n                            @can('view-any', App\\Models\\Attorney::class)\n                            <li class=\"nav-item\">\n                                <a href=\"{{ route('attorneys.index') }}\" class=\"nav-link\">\n                                    <i class=\"nav-icon icon ion-md-radio-button-off\"></i>\n                                    <p>Attorneys</p>\n                                </a>\n                            </li>\n                            @endcan\n                            @can('view-any', App\\Models\\Judge::class)\n                            <li class=\"nav-item\">\n                                <a href=\"{{ route('judges.index') }}\" class=\"nav-link\">\n                                    <i class=\"nav-icon icon ion-md-radio-button-off\"></i>\n                                    <p>Judges</p>\n                                </a>\n                            </li>\n                            @endcan\n                            @can('view-any', App\\Models\\Bar::class)\n                            <li class=\"nav-item\">\n                                <a href=\"{{ route('bars.index') }}\" class=\"nav-link\">\n                                    <i class=\"nav-icon icon ion-md-radio-button-off\"></i>\n                                    <p>Bars</p>\n                                </a>\n                            </li>\n                            @endcan\n                            @can('view-any', App\\Models\\CaseCharge::class)\n                            <li class=\"nav-item\">\n                                <a href=\"{{ route('case-charges.index') }}\" class=\"nav-link\">\n                                    <i class=\"nav-icon icon ion-md-radio-button-off\"></i>\n                                    <p>Case Charges</p>\n                                </a>\n                            </li>\n                            @endcan\n                            @can('view-any', App\\Models\\Wittness::class)\n                            <li class=\"nav-item\">\n                                <a href=\"{{ route('wittnesses.index') }}\" class=\"nav-link\">\n                                    <i class=\"nav-icon icon ion-md-radio-button-off\"></i>\n                                    <p>Wittnesses</p>\n                                </a>\n                            </li>\n                            @endcan\n                            @can('view-any', App\\Models\\CaseHear::class)\n                            <li class=\"nav-item\">\n                                <a href=\"{{ route('case-hears.index') }}\" class=\"nav-link\">\n                                    <i class=\"nav-icon icon ion-md-radio-button-off\"></i>\n                                    <p>Case Hears</p>\n                                </a>\n                            </li>\n                            @endcan\n                            @can('view-any', App\\Models\\Appointment::class)\n                            <li class=\"nav-item\">\n                                <a href=\"{{ route('appointments.index') }}\" class=\"nav-link\">\n                                    <i class=\"nav-icon icon ion-md-radio-button-off\"></i>\n                                    <p>Appointments</p>\n                                </a>\n                            </li>\n                            @endcan\n                            @can('view-any', App\\Models\\Decision::class)\n                            <li class=\"nav-item\">\n                                <a href=\"{{ route('decisions.index') }}\" class=\"nav-link\">\n                                    <i class=\"nav-icon icon ion-md-radio-button-off\"></i>\n                                    <p>Decisions</p>\n                                </a>\n                            </li>\n                            @endcan\n                    </ul>\n                </li>\n\n                @if (Auth::user()->can('view-any', Spatie\\Permission\\Models\\Role::class) || \n                    Auth::user()->can('view-any', Spatie\\Permission\\Models\\Permission::class))\n                <li class=\"nav-item\">\n                    <a href=\"#\" class=\"nav-link\">\n                        <i class=\"nav-icon icon ion-md-key\"></i>\n                        <p>\n                            Access Management\n                            <i class=\"nav-icon right icon ion-md-arrow-round-back\"></i>\n                        </p>\n                    </a>\n                    <ul class=\"nav nav-treeview\">\n                        @can('view-any', Spatie\\Permission\\Models\\Role::class)\n                        <li class=\"nav-item\">\n                            <a href=\"{{ route('roles.index') }}\" class=\"nav-link\">\n                                <i class=\"nav-icon icon ion-md-radio-button-off\"></i>\n                                <p>Roles</p>\n                            </a>\n                        </li>\n                        @endcan\n\n                        @can('view-any', Spatie\\Permission\\Models\\Permission::class)\n                        <li class=\"nav-item\">\n                            <a href=\"{{ route('permissions.index') }}\" class=\"nav-link\">\n                                <i class=\"nav-icon icon ion-md-radio-button-off\"></i>\n                                <p>Permissions</p>\n                            </a>\n                        </li>\n                        @endcan\n                    </ul>\n                </li>\n                @endif\n                @endauth\n\n                <li class=\"nav-item\">\n                    <a href=\"https://adminlte.io/docs/3.1//index.html\" target=\"_blank\" class=\"nav-link\">\n                        <i class=\"nav-icon icon ion-md-help-circle-outline\"></i>\n                        <p>Docs</p>\n                    </a>\n                </li>\n\n                @auth\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"{{ route('logout') }}\" onclick=\"event.preventDefault(); document.getElementById('logout-form').submit();\">\n                        <i class=\"nav-icon icon ion-md-exit\"></i>\n                        <p>{{ __('Logout') }}</p>\n                    </a>\n\n                    <form id=\"logout-form\" action=\"{{ route('logout') }}\" method=\"POST\" style=\"display: none;\">\n                        @csrf\n                    </form>\n                </li>\n                @endauth\n            </ul>\n        </nav>\n        <!-- /.sidebar-menu -->\n    </div>\n    <!-- /.sidebar -->\n</aside>","module":"plugin:app.vemto.admin-lte","path":"\\resources\\views\\layouts\\sidebar.blade.php"},"app\\Tenancy\\TenantScope.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Tenancy;\n\nuse Illuminate\\Database\\Eloquent\\Scope;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Builder;\n\nclass TenantScope implements Scope\n{\n    public function apply(Builder $builder, Model $model)\n    {\n        if (auth()->check()) {\n            $builder->where('user_id', auth()->id());\n        }\n    }\n\n    public function extend(Builder $builder)\n    {\n        $this->addWithoutTenancy($builder);\n    }\n\n    /**\n     * Adding a withoutTenancy scope to remove the tenant scope and\n     * retrieve non-tenancy rows\n     */\n    protected function addWithoutTenancy(Builder $builder)\n    {\n        $builder->macro('withoutTenancy', function (Builder $builder) {\n            return $builder->withoutGlobalScope($this);\n        });\n    }\n}\n","module":"plugin:app.vemto.simple-multi-tenancy","path":"app\\Tenancy\\TenantScope.php"},"app\\Tenancy\\BelongsToTenant.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Tenancy;\n\nuse App\\Models\\User;\nuse App\\Tenancy\\TenantScope;\n\ntrait BelongsToTenant\n{\n    public static function bootBelongsToTenant()\n    {\n        static::addGlobalScope(new TenantScope());\n\n        if (auth()->check()) {\n            static::creating(function ($model) {\n                $model->user_id = auth()->id();\n            });\n        }\n    }\n\n    public function tenant()\n    {\n        $this->belongsTo(User::class, 'user_id');\n    }\n}\n","module":"plugin:app.vemto.simple-multi-tenancy","path":"app\\Tenancy\\BelongsToTenant.php"}},"skippedFiles":{},"removedModules":[],"migrationsDate":"2024_02_14","lastForeignAlias":0,"cascadeDeleteAsDefault":true,"cascadeUpdateAsDefault":true,"hasFixedForeignCallbacks":true,"hasFixedMigrations":true,"hasFixedHasManyDetailOnPageFields":true,"hasFixedLongForeignIndexName":true,"hasFixedEntityMigrationsGeneration":true,"pluginsData":{"app.vemto.simple-multi-tenancy":{"tenancyModels":{},"tenantFieldName":"user_id","multiTenancyStrategy":"login"},"app.vemto.admin-lte":{"sidebarMode":"dark","sidebarCollapsed":true}},"templatesData":{},"usesVite":true,"id":9,"createdAt":"2024-02-14 11:33:10","updatedAt":"2024-02-14 14:28:29"}},"manytomanycomponents":{},"manytomanydetails":{},"dependentselects":{},"hasmanythroughrelatioships":{}},"exportedItems":["projects:9"],"exportedRelationships":["Project:9:cruds","Crud:130:inputs","Crud:130:manyToManyComponents","Crud:130:hasManyDetails","Crud:130:manyToManyDetails","Crud:130:dependentSelects","Crud:131:inputs","Crud:131:manyToManyComponents","Crud:131:hasManyDetails","HasManyDetail:29:relatedCrud","Crud:134:inputs","Crud:134:manyToManyComponents","Crud:134:hasManyDetails","Crud:134:manyToManyDetails","Crud:134:dependentSelects","HasManyDetail:30:relatedCrud","Crud:135:inputs","Crud:135:manyToManyComponents","Crud:135:hasManyDetails","Crud:135:manyToManyDetails","Crud:135:dependentSelects","HasManyDetail:31:relatedCrud","Crud:138:inputs","Crud:138:manyToManyComponents","Crud:138:hasManyDetails","Crud:138:manyToManyDetails","Crud:138:dependentSelects","Crud:131:manyToManyDetails","Crud:131:dependentSelects","Crud:132:inputs","Crud:132:manyToManyComponents","Crud:132:hasManyDetails","Crud:132:manyToManyDetails","Crud:132:dependentSelects","Crud:133:inputs","Crud:133:manyToManyComponents","Crud:133:hasManyDetails","Crud:133:manyToManyDetails","Crud:133:dependentSelects","Crud:136:inputs","Crud:136:manyToManyComponents","Crud:136:hasManyDetails","Crud:136:manyToManyDetails","Crud:136:dependentSelects","Crud:137:inputs","Crud:137:manyToManyComponents","Crud:137:hasManyDetails","Crud:137:manyToManyDetails","Crud:137:dependentSelects","Crud:139:inputs","Crud:139:manyToManyComponents","Crud:139:hasManyDetails","Crud:139:manyToManyDetails","Crud:139:dependentSelects","Crud:140:inputs","Crud:140:manyToManyComponents","Crud:140:hasManyDetails","Crud:140:manyToManyDetails","Crud:140:dependentSelects","Crud:141:inputs","Crud:141:manyToManyComponents","Crud:141:hasManyDetails","Crud:141:manyToManyDetails","Crud:141:dependentSelects","Crud:142:inputs","Crud:142:manyToManyComponents","Crud:142:hasManyDetails","Crud:142:manyToManyDetails","Crud:142:dependentSelects","Project:9:entities","Entity:74:authProject","Entity:74:cruds","Entity:74:fields","Field:642:inputs","Field:642:foreign","Field:642:relatedForeigns","Field:642:basicParentRelationships","Field:642:basicForeignRelationships","Field:642:manyToManyModelRelationships","Field:642:manyToManylocalModelRelationships","Field:642:typedMorphRelationships","Field:642:identifiedMorphRelationships","Field:643:inputs","Field:643:foreign","Field:643:relatedForeigns","Field:643:basicParentRelationships","Field:643:basicForeignRelationships","Field:643:manyToManyModelRelationships","Field:643:manyToManylocalModelRelationships","Field:643:typedMorphRelationships","Field:643:identifiedMorphRelationships","Field:644:inputs","Field:644:foreign","Field:644:relatedForeigns","Field:644:basicParentRelationships","Field:644:basicForeignRelationships","Field:644:manyToManyModelRelationships","Field:644:manyToManylocalModelRelationships","Field:644:typedMorphRelationships","Field:644:identifiedMorphRelationships","Field:645:inputs","Field:645:foreign","Foreign:90:inputs","Field:645:relatedForeigns","Field:645:basicParentRelationships","Field:645:basicForeignRelationships","BasicRelationship:170:inputs","BasicRelationship:170:contrary","BasicRelationship:169:inputs","BasicRelationship:169:contrary","BasicRelationship:170:hasManyDetails","BasicRelationship:169:hasManyDetails","Field:645:manyToManyModelRelationships","Field:645:manyToManylocalModelRelationships","Field:645:typedMorphRelationships","Field:645:identifiedMorphRelationships","Entity:74:foreigns","Entity:74:pivotRelationships","Entity:74:pivotMorphRelationships","Entity:74:basicRelationships","Entity:74:hasManyThroughRelationships","Entity:74:basicRelatedRelationships","Entity:74:manyToManyRelationships","Entity:74:manyToManyRelatedRelationships","Entity:74:morphRelationships","Entity:74:morphRelatedRelationships","Entity:67:authProject","Entity:67:cruds","Entity:67:fields","Field:581:inputs","Field:581:foreign","Field:581:relatedForeigns","Foreign:86:inputs","Field:581:basicParentRelationships","BasicRelationship:162:inputs","BasicRelationship:162:contrary","BasicRelationship:161:inputs","BasicRelationship:161:contrary","BasicRelationship:162:hasManyDetails","BasicRelationship:161:hasManyDetails","Field:581:basicForeignRelationships","Field:581:manyToManyModelRelationships","Field:581:manyToManylocalModelRelationships","Field:581:typedMorphRelationships","Field:581:identifiedMorphRelationships","Field:582:inputs","Field:582:foreign","Field:582:relatedForeigns","Field:582:basicParentRelationships","Field:582:basicForeignRelationships","Field:582:manyToManyModelRelationships","Field:582:manyToManylocalModelRelationships","Field:582:typedMorphRelationships","Field:582:identifiedMorphRelationships","Field:583:inputs","Field:583:foreign","Field:583:relatedForeigns","Field:583:basicParentRelationships","Field:583:basicForeignRelationships","Field:583:manyToManyModelRelationships","Field:583:manyToManylocalModelRelationships","Field:583:typedMorphRelationships","Field:583:identifiedMorphRelationships","Field:584:inputs","Field:584:foreign","Field:584:relatedForeigns","Field:584:basicParentRelationships","Field:584:basicForeignRelationships","Field:584:manyToManyModelRelationships","Field:584:manyToManylocalModelRelationships","Field:584:typedMorphRelationships","Field:584:identifiedMorphRelationships","Field:585:inputs","Field:585:foreign","Field:585:relatedForeigns","Field:585:basicParentRelationships","Field:585:basicForeignRelationships","Field:585:manyToManyModelRelationships","Field:585:manyToManylocalModelRelationships","Field:585:typedMorphRelationships","Field:585:identifiedMorphRelationships","Field:586:inputs","Field:586:foreign","Field:586:relatedForeigns","Field:586:basicParentRelationships","Field:586:basicForeignRelationships","Field:586:manyToManyModelRelationships","Field:586:manyToManylocalModelRelationships","Field:586:typedMorphRelationships","Field:586:identifiedMorphRelationships","Field:587:inputs","Field:587:foreign","Field:587:relatedForeigns","Field:587:basicParentRelationships","Field:587:basicForeignRelationships","Field:587:manyToManyModelRelationships","Field:587:manyToManylocalModelRelationships","Field:587:typedMorphRelationships","Field:587:identifiedMorphRelationships","Field:588:inputs","Field:588:foreign","Field:588:relatedForeigns","Field:588:basicParentRelationships","Field:588:basicForeignRelationships","Field:588:manyToManyModelRelationships","Field:588:manyToManylocalModelRelationships","Field:588:typedMorphRelationships","Field:588:identifiedMorphRelationships","Field:589:inputs","Field:589:foreign","Foreign:81:inputs","Field:589:relatedForeigns","Field:589:basicParentRelationships","Field:589:basicForeignRelationships","BasicRelationship:152:inputs","BasicRelationship:152:contrary","BasicRelationship:151:inputs","BasicRelationship:151:contrary","BasicRelationship:152:hasManyDetails","BasicRelationship:151:hasManyDetails","Field:589:manyToManyModelRelationships","Field:589:manyToManylocalModelRelationships","Field:589:typedMorphRelationships","Field:589:identifiedMorphRelationships","Entity:67:foreigns","Entity:67:pivotRelationships","Entity:67:pivotMorphRelationships","Entity:67:basicRelationships","Entity:67:hasManyThroughRelationships","Entity:67:basicRelatedRelationships","Entity:67:manyToManyRelationships","Entity:67:manyToManyRelatedRelationships","Entity:67:morphRelationships","Entity:67:morphRelatedRelationships","Entity:69:authProject","Entity:69:cruds","Entity:69:fields","Field:599:inputs","Field:599:foreign","Field:599:relatedForeigns","Field:599:basicParentRelationships","Field:599:basicForeignRelationships","Field:599:manyToManyModelRelationships","Field:599:manyToManylocalModelRelationships","Field:599:typedMorphRelationships","Field:599:identifiedMorphRelationships","Field:600:inputs","Field:600:foreign","Field:600:relatedForeigns","Field:600:basicParentRelationships","Field:600:basicForeignRelationships","Field:600:manyToManyModelRelationships","Field:600:manyToManylocalModelRelationships","Field:600:typedMorphRelationships","Field:600:identifiedMorphRelationships","Field:601:inputs","Field:601:foreign","Field:601:relatedForeigns","Field:601:basicParentRelationships","Field:601:basicForeignRelationships","Field:601:manyToManyModelRelationships","Field:601:manyToManylocalModelRelationships","Field:601:typedMorphRelationships","Field:601:identifiedMorphRelationships","Field:602:inputs","Field:602:foreign","Field:602:relatedForeigns","Field:602:basicParentRelationships","Field:602:basicForeignRelationships","Field:602:manyToManyModelRelationships","Field:602:manyToManylocalModelRelationships","Field:602:typedMorphRelationships","Field:602:identifiedMorphRelationships","Field:603:inputs","Field:603:foreign","Field:603:relatedForeigns","Field:603:basicParentRelationships","Field:603:basicForeignRelationships","Field:603:manyToManyModelRelationships","Field:603:manyToManylocalModelRelationships","Field:603:typedMorphRelationships","Field:603:identifiedMorphRelationships","Field:604:inputs","Field:604:foreign","Foreign:83:inputs","Field:604:relatedForeigns","Field:604:basicParentRelationships","Field:604:basicForeignRelationships","BasicRelationship:156:inputs","BasicRelationship:156:contrary","BasicRelationship:155:inputs","BasicRelationship:155:contrary","BasicRelationship:156:hasManyDetails","BasicRelationship:155:hasManyDetails","Field:604:manyToManyModelRelationships","Field:604:manyToManylocalModelRelationships","Field:604:typedMorphRelationships","Field:604:identifiedMorphRelationships","Entity:69:foreigns","Entity:69:pivotRelationships","Entity:69:pivotMorphRelationships","Entity:69:basicRelationships","Entity:69:hasManyThroughRelationships","Entity:69:basicRelatedRelationships","Entity:69:manyToManyRelationships","Entity:69:manyToManyRelatedRelationships","Entity:69:morphRelationships","Entity:69:morphRelatedRelationships","Entity:71:authProject","Entity:71:cruds","Entity:71:fields","Field:612:inputs","Field:612:foreign","Field:612:relatedForeigns","Foreign:87:inputs","Field:612:basicParentRelationships","BasicRelationship:164:inputs","BasicRelationship:164:contrary","BasicRelationship:163:inputs","BasicRelationship:163:contrary","BasicRelationship:164:hasManyDetails","BasicRelationship:163:hasManyDetails","Field:612:basicForeignRelationships","Field:612:manyToManyModelRelationships","Field:612:manyToManylocalModelRelationships","Field:612:typedMorphRelationships","Field:612:identifiedMorphRelationships","Field:613:inputs","Field:613:foreign","Field:613:relatedForeigns","Field:613:basicParentRelationships","Field:613:basicForeignRelationships","Field:613:manyToManyModelRelationships","Field:613:manyToManylocalModelRelationships","Field:613:typedMorphRelationships","Field:613:identifiedMorphRelationships","Field:614:inputs","Field:614:foreign","Field:614:relatedForeigns","Field:614:basicParentRelationships","Field:614:basicForeignRelationships","Field:614:manyToManyModelRelationships","Field:614:manyToManylocalModelRelationships","Field:614:typedMorphRelationships","Field:614:identifiedMorphRelationships","Field:615:inputs","Field:615:foreign","Field:615:relatedForeigns","Field:615:basicParentRelationships","Field:615:basicForeignRelationships","Field:615:manyToManyModelRelationships","Field:615:manyToManylocalModelRelationships","Field:615:typedMorphRelationships","Field:615:identifiedMorphRelationships","Field:616:inputs","Field:616:foreign","Field:616:relatedForeigns","Field:616:basicParentRelationships","Field:616:basicForeignRelationships","Field:616:manyToManyModelRelationships","Field:616:manyToManylocalModelRelationships","Field:616:typedMorphRelationships","Field:616:identifiedMorphRelationships","Field:617:inputs","Field:617:foreign","Field:617:relatedForeigns","Field:617:basicParentRelationships","Field:617:basicForeignRelationships","Field:617:manyToManyModelRelationships","Field:617:manyToManylocalModelRelationships","Field:617:typedMorphRelationships","Field:617:identifiedMorphRelationships","Field:618:inputs","Field:618:foreign","Field:618:relatedForeigns","Field:618:basicParentRelationships","Field:618:basicForeignRelationships","Field:618:manyToManyModelRelationships","Field:618:manyToManylocalModelRelationships","Field:618:typedMorphRelationships","Field:618:identifiedMorphRelationships","Field:619:inputs","Field:619:foreign","Field:619:relatedForeigns","Field:619:basicParentRelationships","Field:619:basicForeignRelationships","Field:619:manyToManyModelRelationships","Field:619:manyToManylocalModelRelationships","Field:619:typedMorphRelationships","Field:619:identifiedMorphRelationships","Field:620:inputs","Field:620:foreign","Field:620:relatedForeigns","Field:620:basicParentRelationships","Field:620:basicForeignRelationships","Field:620:manyToManyModelRelationships","Field:620:manyToManylocalModelRelationships","Field:620:typedMorphRelationships","Field:620:identifiedMorphRelationships","Field:621:inputs","Field:621:foreign","Field:621:relatedForeigns","Field:621:basicParentRelationships","Field:621:basicForeignRelationships","Field:621:manyToManyModelRelationships","Field:621:manyToManylocalModelRelationships","Field:621:typedMorphRelationships","Field:621:identifiedMorphRelationships","Entity:71:foreigns","Entity:71:pivotRelationships","Entity:71:pivotMorphRelationships","Entity:71:basicRelationships","Entity:71:hasManyThroughRelationships","Entity:71:basicRelatedRelationships","Entity:71:manyToManyRelationships","Entity:71:manyToManyRelatedRelationships","Entity:71:morphRelationships","Entity:71:morphRelatedRelationships","Entity:72:authProject","Entity:72:cruds","Entity:72:fields","Field:622:inputs","Field:622:foreign","Field:622:relatedForeigns","Foreign:89:inputs","Field:622:basicParentRelationships","BasicRelationship:168:inputs","BasicRelationship:168:contrary","BasicRelationship:167:inputs","BasicRelationship:167:contrary","BasicRelationship:168:hasManyDetails","BasicRelationship:167:hasManyDetails","Field:622:basicForeignRelationships","Field:622:manyToManyModelRelationships","Field:622:manyToManylocalModelRelationships","Field:622:typedMorphRelationships","Field:622:identifiedMorphRelationships","Field:623:inputs","Field:623:foreign","Field:623:relatedForeigns","Field:623:basicParentRelationships","Field:623:basicForeignRelationships","Field:623:manyToManyModelRelationships","Field:623:manyToManylocalModelRelationships","Field:623:typedMorphRelationships","Field:623:identifiedMorphRelationships","Field:624:inputs","Field:624:foreign","Field:624:relatedForeigns","Field:624:basicParentRelationships","Field:624:basicForeignRelationships","Field:624:manyToManyModelRelationships","Field:624:manyToManylocalModelRelationships","Field:624:typedMorphRelationships","Field:624:identifiedMorphRelationships","Field:626:inputs","Field:626:foreign","Field:626:relatedForeigns","Field:626:basicParentRelationships","Field:626:basicForeignRelationships","Field:626:manyToManyModelRelationships","Field:626:manyToManylocalModelRelationships","Field:626:typedMorphRelationships","Field:626:identifiedMorphRelationships","Field:627:inputs","Field:627:foreign","Field:627:relatedForeigns","Field:627:basicParentRelationships","Field:627:basicForeignRelationships","Field:627:manyToManyModelRelationships","Field:627:manyToManylocalModelRelationships","Field:627:typedMorphRelationships","Field:627:identifiedMorphRelationships","Field:628:inputs","Field:628:foreign","Field:628:relatedForeigns","Field:628:basicParentRelationships","Field:628:basicForeignRelationships","Field:628:manyToManyModelRelationships","Field:628:manyToManylocalModelRelationships","Field:628:typedMorphRelationships","Field:628:identifiedMorphRelationships","Field:629:inputs","Field:629:foreign","Field:629:relatedForeigns","Field:629:basicParentRelationships","Field:629:basicForeignRelationships","Field:629:manyToManyModelRelationships","Field:629:manyToManylocalModelRelationships","Field:629:typedMorphRelationships","Field:629:identifiedMorphRelationships","Field:630:inputs","Field:630:foreign","Field:630:relatedForeigns","Field:630:basicParentRelationships","Field:630:basicForeignRelationships","Field:630:manyToManyModelRelationships","Field:630:manyToManylocalModelRelationships","Field:630:typedMorphRelationships","Field:630:identifiedMorphRelationships","Field:631:inputs","Field:631:foreign","Field:631:relatedForeigns","Field:631:basicParentRelationships","Field:631:basicForeignRelationships","Field:631:manyToManyModelRelationships","Field:631:manyToManylocalModelRelationships","Field:631:typedMorphRelationships","Field:631:identifiedMorphRelationships","Field:632:inputs","Field:632:foreign","Foreign:84:inputs","Field:632:relatedForeigns","Field:632:basicParentRelationships","Field:632:basicForeignRelationships","BasicRelationship:158:inputs","BasicRelationship:158:contrary","BasicRelationship:157:inputs","BasicRelationship:157:contrary","BasicRelationship:158:hasManyDetails","BasicRelationship:157:hasManyDetails","Field:632:manyToManyModelRelationships","Field:632:manyToManylocalModelRelationships","Field:632:typedMorphRelationships","Field:632:identifiedMorphRelationships","Field:633:inputs","Field:633:foreign","Foreign:85:inputs","Field:633:relatedForeigns","Field:633:basicParentRelationships","Field:633:basicForeignRelationships","BasicRelationship:160:inputs","BasicRelationship:160:contrary","BasicRelationship:159:inputs","BasicRelationship:159:contrary","BasicRelationship:160:hasManyDetails","BasicRelationship:159:hasManyDetails","Field:633:manyToManyModelRelationships","Field:633:manyToManylocalModelRelationships","Field:633:typedMorphRelationships","Field:633:identifiedMorphRelationships","Field:634:inputs","Field:634:foreign","Field:634:relatedForeigns","Field:634:basicParentRelationships","Field:634:basicForeignRelationships","Field:634:manyToManyModelRelationships","Field:634:manyToManylocalModelRelationships","Field:634:typedMorphRelationships","Field:634:identifiedMorphRelationships","Field:635:inputs","Field:635:foreign","Field:635:relatedForeigns","Field:635:basicParentRelationships","Field:635:basicForeignRelationships","Field:635:manyToManyModelRelationships","Field:635:manyToManylocalModelRelationships","Field:635:typedMorphRelationships","Field:635:identifiedMorphRelationships","Field:636:inputs","Field:636:foreign","Foreign:88:inputs","Field:636:relatedForeigns","Field:636:basicParentRelationships","Field:636:basicForeignRelationships","BasicRelationship:166:inputs","BasicRelationship:166:contrary","BasicRelationship:165:inputs","BasicRelationship:165:contrary","BasicRelationship:166:hasManyDetails","BasicRelationship:165:hasManyDetails","Field:636:manyToManyModelRelationships","Field:636:manyToManylocalModelRelationships","Field:636:typedMorphRelationships","Field:636:identifiedMorphRelationships","Entity:72:foreigns","Entity:72:pivotRelationships","Entity:72:pivotMorphRelationships","Entity:72:basicRelationships","Entity:72:hasManyThroughRelationships","Entity:72:basicRelatedRelationships","Entity:72:manyToManyRelationships","Entity:72:manyToManyRelatedRelationships","Entity:72:morphRelationships","Entity:72:morphRelatedRelationships","Entity:66:authProject","Entity:66:cruds","Entity:66:fields","Field:575:inputs","Field:575:foreign","Field:575:relatedForeigns","Foreign:82:inputs","Field:575:basicParentRelationships","BasicRelationship:154:inputs","BasicRelationship:154:contrary","BasicRelationship:153:inputs","BasicRelationship:153:contrary","BasicRelationship:154:hasManyDetails","BasicRelationship:153:hasManyDetails","Field:575:basicForeignRelationships","Field:575:manyToManyModelRelationships","Field:575:manyToManylocalModelRelationships","Field:575:typedMorphRelationships","Field:575:identifiedMorphRelationships","Field:576:inputs","Field:576:foreign","Field:576:relatedForeigns","Field:576:basicParentRelationships","Field:576:basicForeignRelationships","Field:576:manyToManyModelRelationships","Field:576:manyToManylocalModelRelationships","Field:576:typedMorphRelationships","Field:576:identifiedMorphRelationships","Field:577:inputs","Field:577:foreign","Field:577:relatedForeigns","Field:577:basicParentRelationships","Field:577:basicForeignRelationships","Field:577:manyToManyModelRelationships","Field:577:manyToManylocalModelRelationships","Field:577:typedMorphRelationships","Field:577:identifiedMorphRelationships","Field:578:inputs","Field:578:foreign","Field:578:relatedForeigns","Field:578:basicParentRelationships","Field:578:basicForeignRelationships","Field:578:manyToManyModelRelationships","Field:578:manyToManylocalModelRelationships","Field:578:typedMorphRelationships","Field:578:identifiedMorphRelationships","Field:579:inputs","Field:579:foreign","Field:579:relatedForeigns","Field:579:basicParentRelationships","Field:579:basicForeignRelationships","Field:579:manyToManyModelRelationships","Field:579:manyToManylocalModelRelationships","Field:579:typedMorphRelationships","Field:579:identifiedMorphRelationships","Field:580:inputs","Field:580:foreign","Field:580:relatedForeigns","Field:580:basicParentRelationships","Field:580:basicForeignRelationships","Field:580:manyToManyModelRelationships","Field:580:manyToManylocalModelRelationships","Field:580:typedMorphRelationships","Field:580:identifiedMorphRelationships","Entity:66:foreigns","Entity:66:pivotRelationships","Entity:66:pivotMorphRelationships","Entity:66:basicRelationships","Entity:66:hasManyThroughRelationships","Entity:66:basicRelatedRelationships","Entity:66:manyToManyRelationships","Entity:66:manyToManyRelatedRelationships","Entity:66:morphRelationships","Entity:66:morphRelatedRelationships","Entity:73:authProject","Entity:73:cruds","Entity:73:fields","Field:637:inputs","Field:637:foreign","Field:637:relatedForeigns","Field:637:basicParentRelationships","Field:637:basicForeignRelationships","Field:637:manyToManyModelRelationships","Field:637:manyToManylocalModelRelationships","Field:637:typedMorphRelationships","Field:637:identifiedMorphRelationships","Field:638:inputs","Field:638:foreign","Field:638:relatedForeigns","Field:638:basicParentRelationships","Field:638:basicForeignRelationships","Field:638:manyToManyModelRelationships","Field:638:manyToManylocalModelRelationships","Field:638:typedMorphRelationships","Field:638:identifiedMorphRelationships","Field:639:inputs","Field:639:foreign","Field:639:relatedForeigns","Field:639:basicParentRelationships","Field:639:basicForeignRelationships","Field:639:manyToManyModelRelationships","Field:639:manyToManylocalModelRelationships","Field:639:typedMorphRelationships","Field:639:identifiedMorphRelationships","Field:640:inputs","Field:640:foreign","Field:640:relatedForeigns","Field:640:basicParentRelationships","Field:640:basicForeignRelationships","Field:640:manyToManyModelRelationships","Field:640:manyToManylocalModelRelationships","Field:640:typedMorphRelationships","Field:640:identifiedMorphRelationships","Field:641:inputs","Field:641:foreign","Field:641:relatedForeigns","Field:641:basicParentRelationships","Field:641:basicForeignRelationships","Field:641:manyToManyModelRelationships","Field:641:manyToManylocalModelRelationships","Field:641:typedMorphRelationships","Field:641:identifiedMorphRelationships","Entity:73:foreigns","Entity:73:pivotRelationships","Entity:73:pivotMorphRelationships","Entity:73:basicRelationships","Entity:73:hasManyThroughRelationships","Entity:73:basicRelatedRelationships","Entity:73:manyToManyRelationships","Entity:73:manyToManyRelatedRelationships","Entity:73:morphRelationships","Entity:73:morphRelatedRelationships","Entity:68:authProject","Entity:68:cruds","Entity:68:fields","Field:590:inputs","Field:590:foreign","Field:590:relatedForeigns","Field:590:basicParentRelationships","Field:590:basicForeignRelationships","Field:590:manyToManyModelRelationships","Field:590:manyToManylocalModelRelationships","Field:590:typedMorphRelationships","Field:590:identifiedMorphRelationships","Field:591:inputs","Field:591:foreign","Field:591:relatedForeigns","Field:591:basicParentRelationships","Field:591:basicForeignRelationships","Field:591:manyToManyModelRelationships","Field:591:manyToManylocalModelRelationships","Field:591:typedMorphRelationships","Field:591:identifiedMorphRelationships","Field:592:inputs","Field:592:foreign","Field:592:relatedForeigns","Field:592:basicParentRelationships","Field:592:basicForeignRelationships","Field:592:manyToManyModelRelationships","Field:592:manyToManylocalModelRelationships","Field:592:typedMorphRelationships","Field:592:identifiedMorphRelationships","Field:593:inputs","Field:593:foreign","Field:593:relatedForeigns","Field:593:basicParentRelationships","Field:593:basicForeignRelationships","Field:593:manyToManyModelRelationships","Field:593:manyToManylocalModelRelationships","Field:593:typedMorphRelationships","Field:593:identifiedMorphRelationships","Field:594:inputs","Field:594:foreign","Field:594:relatedForeigns","Field:594:basicParentRelationships","Field:594:basicForeignRelationships","Field:594:manyToManyModelRelationships","Field:594:manyToManylocalModelRelationships","Field:594:typedMorphRelationships","Field:594:identifiedMorphRelationships","Field:595:inputs","Field:595:foreign","Field:595:relatedForeigns","Field:595:basicParentRelationships","Field:595:basicForeignRelationships","Field:595:manyToManyModelRelationships","Field:595:manyToManylocalModelRelationships","Field:595:typedMorphRelationships","Field:595:identifiedMorphRelationships","Field:596:inputs","Field:596:foreign","Field:596:relatedForeigns","Field:596:basicParentRelationships","Field:596:basicForeignRelationships","Field:596:manyToManyModelRelationships","Field:596:manyToManylocalModelRelationships","Field:596:typedMorphRelationships","Field:596:identifiedMorphRelationships","Field:597:inputs","Field:597:foreign","Field:597:relatedForeigns","Field:597:basicParentRelationships","Field:597:basicForeignRelationships","Field:597:manyToManyModelRelationships","Field:597:manyToManylocalModelRelationships","Field:597:typedMorphRelationships","Field:597:identifiedMorphRelationships","Field:598:inputs","Field:598:foreign","Field:598:relatedForeigns","Field:598:basicParentRelationships","Field:598:basicForeignRelationships","Field:598:manyToManyModelRelationships","Field:598:manyToManylocalModelRelationships","Field:598:typedMorphRelationships","Field:598:identifiedMorphRelationships","Entity:68:foreigns","Entity:68:pivotRelationships","Entity:68:pivotMorphRelationships","Entity:68:basicRelationships","Entity:68:hasManyThroughRelationships","Entity:68:basicRelatedRelationships","Entity:68:manyToManyRelationships","Entity:68:manyToManyRelatedRelationships","Entity:68:morphRelationships","Entity:68:morphRelatedRelationships","Entity:65:authProject","Project:9:comments","Entity:65:cruds","Entity:65:fields","Field:563:inputs","Field:563:foreign","Field:563:relatedForeigns","Field:563:basicParentRelationships","Field:563:basicForeignRelationships","Field:563:manyToManyModelRelationships","Field:563:manyToManylocalModelRelationships","Field:563:typedMorphRelationships","Field:563:identifiedMorphRelationships","Field:564:inputs","Field:564:foreign","Field:564:relatedForeigns","Field:564:basicParentRelationships","Field:564:basicForeignRelationships","Field:564:manyToManyModelRelationships","Field:564:manyToManylocalModelRelationships","Field:564:typedMorphRelationships","Field:564:identifiedMorphRelationships","Field:565:inputs","Field:565:foreign","Field:565:relatedForeigns","Field:565:basicParentRelationships","Field:565:basicForeignRelationships","Field:565:manyToManyModelRelationships","Field:565:manyToManylocalModelRelationships","Field:565:typedMorphRelationships","Field:565:identifiedMorphRelationships","Field:566:inputs","Field:566:foreign","Field:566:relatedForeigns","Field:566:basicParentRelationships","Field:566:basicForeignRelationships","Field:566:manyToManyModelRelationships","Field:566:manyToManylocalModelRelationships","Field:566:typedMorphRelationships","Field:566:identifiedMorphRelationships","Field:567:inputs","Field:567:foreign","Field:567:relatedForeigns","Field:567:basicParentRelationships","Field:567:basicForeignRelationships","Field:567:manyToManyModelRelationships","Field:567:manyToManylocalModelRelationships","Field:567:typedMorphRelationships","Field:567:identifiedMorphRelationships","Field:574:inputs","Field:574:foreign","Field:574:relatedForeigns","Field:574:basicParentRelationships","Field:574:basicForeignRelationships","Field:574:manyToManyModelRelationships","Field:574:manyToManylocalModelRelationships","Field:574:typedMorphRelationships","Field:574:identifiedMorphRelationships","Field:568:inputs","Field:568:foreign","Field:568:relatedForeigns","Field:568:basicParentRelationships","Field:568:basicForeignRelationships","Field:568:manyToManyModelRelationships","Field:568:manyToManylocalModelRelationships","Field:568:typedMorphRelationships","Field:568:identifiedMorphRelationships","Field:569:inputs","Field:569:foreign","Field:569:relatedForeigns","Field:569:basicParentRelationships","Field:569:basicForeignRelationships","Field:569:manyToManyModelRelationships","Field:569:manyToManylocalModelRelationships","Field:569:typedMorphRelationships","Field:569:identifiedMorphRelationships","Field:570:inputs","Field:570:foreign","Field:570:relatedForeigns","Field:570:basicParentRelationships","Field:570:basicForeignRelationships","Field:570:manyToManyModelRelationships","Field:570:manyToManylocalModelRelationships","Field:570:typedMorphRelationships","Field:570:identifiedMorphRelationships","Field:571:inputs","Field:571:foreign","Field:571:relatedForeigns","Field:571:basicParentRelationships","Field:571:basicForeignRelationships","Field:571:manyToManyModelRelationships","Field:571:manyToManylocalModelRelationships","Field:571:typedMorphRelationships","Field:571:identifiedMorphRelationships","Field:572:inputs","Field:572:foreign","Field:572:relatedForeigns","Field:572:basicParentRelationships","Field:572:basicForeignRelationships","Field:572:manyToManyModelRelationships","Field:572:manyToManylocalModelRelationships","Field:572:typedMorphRelationships","Field:572:identifiedMorphRelationships","Field:573:inputs","Field:573:foreign","Field:573:relatedForeigns","Field:573:basicParentRelationships","Field:573:basicForeignRelationships","Field:573:manyToManyModelRelationships","Field:573:manyToManylocalModelRelationships","Field:573:typedMorphRelationships","Field:573:identifiedMorphRelationships","Entity:65:foreigns","Entity:65:pivotRelationships","Entity:65:pivotMorphRelationships","Entity:65:basicRelationships","Entity:65:hasManyThroughRelationships","Entity:65:basicRelatedRelationships","Entity:65:manyToManyRelationships","Entity:65:manyToManyRelatedRelationships","Entity:65:morphRelationships","Entity:65:morphRelatedRelationships","Entity:70:authProject","Entity:70:cruds","Entity:70:fields","Field:605:inputs","Field:605:foreign","Field:605:relatedForeigns","Field:605:basicParentRelationships","Field:605:basicForeignRelationships","Field:605:manyToManyModelRelationships","Field:605:manyToManylocalModelRelationships","Field:605:typedMorphRelationships","Field:605:identifiedMorphRelationships","Field:606:inputs","Field:606:foreign","Field:606:relatedForeigns","Field:606:basicParentRelationships","Field:606:basicForeignRelationships","Field:606:manyToManyModelRelationships","Field:606:manyToManylocalModelRelationships","Field:606:typedMorphRelationships","Field:606:identifiedMorphRelationships","Field:607:inputs","Field:607:foreign","Field:607:relatedForeigns","Field:607:basicParentRelationships","Field:607:basicForeignRelationships","Field:607:manyToManyModelRelationships","Field:607:manyToManylocalModelRelationships","Field:607:typedMorphRelationships","Field:607:identifiedMorphRelationships","Field:608:inputs","Field:608:foreign","Field:608:relatedForeigns","Field:608:basicParentRelationships","Field:608:basicForeignRelationships","Field:608:manyToManyModelRelationships","Field:608:manyToManylocalModelRelationships","Field:608:typedMorphRelationships","Field:608:identifiedMorphRelationships","Field:609:inputs","Field:609:foreign","Field:609:relatedForeigns","Field:609:basicParentRelationships","Field:609:basicForeignRelationships","Field:609:manyToManyModelRelationships","Field:609:manyToManylocalModelRelationships","Field:609:typedMorphRelationships","Field:609:identifiedMorphRelationships","Field:610:inputs","Field:610:foreign","Field:610:relatedForeigns","Field:610:basicParentRelationships","Field:610:basicForeignRelationships","Field:610:manyToManyModelRelationships","Field:610:manyToManylocalModelRelationships","Field:610:typedMorphRelationships","Field:610:identifiedMorphRelationships","Field:611:inputs","Field:611:foreign","Field:611:relatedForeigns","Field:611:basicParentRelationships","Field:611:basicForeignRelationships","Field:611:manyToManyModelRelationships","Field:611:manyToManylocalModelRelationships","Field:611:typedMorphRelationships","Field:611:identifiedMorphRelationships","Entity:70:foreigns","Entity:70:pivotRelationships","Entity:70:pivotMorphRelationships","Entity:70:basicRelationships","Entity:70:hasManyThroughRelationships","Entity:70:basicRelatedRelationships","Entity:70:manyToManyRelationships","Entity:70:manyToManyRelatedRelationships","Entity:70:morphRelationships","Entity:70:morphRelatedRelationships"]}